{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\medecin-doctolive\\\\components\\\\MedecinForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Col, Row, Alert, Collapse } from 'react-bootstrap'; // @material-ui/icons\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport RadioGroup from '@material-ui/core/RadioGroup'; // import TextField from '@material-ui/core/RadioGroup';\n\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md'; // services\n// import {getCity, signupMedecin} from 'services/medecin/MedecinService'\n// core components\n\nimport Config from \"../config\";\nimport PhoneField from './Inputs/PhoneNumber/index';\nimport TextField from './Inputs/InputIcone/index';\nimport Button from './CustomButtons/Button';\nimport { FaMailBulk, FaPhone, FaUserMd } from 'react-icons/fa';\nexport default class ElementForm extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.setState({\n        sending: true\n      });\n      let data = this.traitementDonnee();\n      console.log(Config.api_path);\n      const link = Config.api_path + \"/medecin/signup\";\n      console.log(link);\n      fetch(link, {\n        method: \"post\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(_objectSpread({}, data))\n      }).then(r => r.json().then(res => {\n        if (!res.error) {\n          this.setState({\n            sending: false,\n            success: true,\n            donneIncorecte: false\n          });\n        } else {\n          this.setState({\n            sending: false,\n            success: false,\n            donneIncorecte: true\n          });\n\n          if (res.validator) {} else {}\n        }\n      })).catch(error => {\n        this.setState({\n          sending: false,\n          success: false,\n          donneIncorecte: true\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      if (name === \"phone\") {\n        value = value // Remove all non-digits, turn initial 33 into nothing\n        .replace(/[^\\d+]/g, '').replace(/^0/, '+212') // Stick to first 10, ignore later digits\n        .slice(0, 13) // Add a space after any 2-digit group followed by more digits\n        .replace(/(\\d{3})(?=\\d)/g, '$1 ');\n      }\n\n      this.setState({\n        [name]: value\n      });\n    });\n\n    this.state = {\n      nom: \"\",\n      prenom: \"\",\n      phone: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      villes: [],\n      cityId: \"\",\n      sexe: \"\",\n      fieldValidationErrors: {\n        nomError: false,\n        prenomError: false,\n        numeroError: false,\n        emailError: false\n      },\n      sending: false,\n      success: false\n    };\n  }\n\n  traitementDonnee() {\n    let formData = {};\n    formData.nom = this.state.nom;\n    formData.phone = this.state.phone;\n    formData.email = this.state.email;\n    formData.prenom = this.state.prenom;\n    formData.cityId = this.state.cityId;\n    formData.sexe = this.state.sexe;\n    formData.password = this.state.password;\n    return formData;\n  }\n\n  componentDidMount() {\n    fetch(`${Config.api_path}/city`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(response => {\n        console.log(response);\n\n        if (response.cities) {\n          this.setState({\n            villes: response.cities\n          });\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let {\n      villes,\n      fieldValidationErrors,\n      nom,\n      prenom,\n      phone,\n      email,\n      donneIncorecte,\n      cityId,\n      success,\n      sexe,\n      sending\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          md: \"6\",\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            error: fieldValidationErrors.nomError,\n            placeholder: \"Votre nom de famille\",\n            label: \"Nom\",\n            Icone: FaUserMd,\n            required: true,\n            variant: \"outlined\",\n            name: \"nom\" // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\n            ,\n            onBlur: this.validateField,\n            value: nom,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          md: \"6\",\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Votre prenom\",\n            variant: \"outlined\",\n            required: true,\n            error: fieldValidationErrors.prenomError,\n            label: \"Prenom\",\n            Icone: FaUserMd // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\n            ,\n            onBlur: this.validateField,\n            name: \"prenom\",\n            value: prenom,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          md: \"6\",\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(PhoneField, {\n            label: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n            Icone: FaPhone,\n            name: \"phone\",\n            required: true,\n            variant: \"outlined\",\n            error: fieldValidationErrors.numeroError // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\n            ,\n            onBlur: this.validateField,\n            value: phone,\n            placeholder: \"+212 600 000 000\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          md: \"6\",\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Adresse email\",\n            Icone: FaMailBulk,\n            placeholder: \"Adresse email\",\n            variant: \"outlined\",\n            name: \"email\",\n            error: fieldValidationErrors.emailError,\n            required: true // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\n            ,\n            onBlur: this.validateField,\n            value: email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"standard-adornment-password\",\n              children: \" Mot de passe \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"standard-adornment-password\",\n              type: this.state.showPassword ? 'text' : 'password',\n              value: this.state.password,\n              onChange: this.handleChange,\n              required: true,\n              label: \"Mot de passe\",\n              name: \"password\",\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: () => this.setState(old => {\n                    return _objectSpread(_objectSpread({}, old), {}, {\n                      showPassword: !this.state.showPassword\n                    });\n                  }),\n                  children: this.state.showPassword ? /*#__PURE__*/_jsxDEV(MdVisibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 68\n                  }, this) : /*#__PURE__*/_jsxDEV(MdVisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 87\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          md: \"12\",\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Ville\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: cityId,\n              onChange: this.handleChange,\n              label: \"Ville\",\n              name: \"cityId\",\n              required: true,\n              children: villes.map((ville, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: ville.id,\n                children: ville.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          md: \"12\",\n          className: \"my-3\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"div\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Sexe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              className: \"flex-row\",\n              \"aria-label\": \"Sexe\",\n              name: \"sexe\",\n              value: sexe,\n              onClick: event => {\n                this.setState({\n                  sexe: event.target.value\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: 'homme',\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 80\n                }, this),\n                label: \"Homme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: 'femme',\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 80\n                }, this),\n                label: \"Femme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: donneIncorecte,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: \"les information sont incorrecte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: success,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: \"Demande envoyer avec succ\\xE9s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center justify-content-around mt-4 \",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          children: \" Enregistrer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/medecin-doctolive/components/MedecinForm.js"],"names":["React","Component","Col","Row","Alert","Collapse","InputLabel","MenuItem","Select","FormControl","FormControlLabel","FormLabel","Radio","OutlinedInput","InputAdornment","IconButton","RadioGroup","MdVisibility","MdVisibilityOff","Config","PhoneField","TextField","Button","FaMailBulk","FaPhone","FaUserMd","ElementForm","constructor","props","e","preventDefault","setState","sending","data","traitementDonnee","console","log","api_path","link","fetch","method","headers","body","JSON","stringify","then","r","json","res","error","success","donneIncorecte","validator","catch","target","value","name","replace","slice","state","nom","prenom","phone","email","password","password_confirmation","villes","cityId","sexe","fieldValidationErrors","nomError","prenomError","numeroError","emailError","formData","componentDidMount","response","cities","err","render","handleSubmit","validateField","handleChange","showPassword","old","map","ville","index","id","event"],"mappings":"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","sourcesContent":["\r\nimport React, {Component} from \"react\";\r\n\r\nimport { Col,Row, Alert, Collapse } from 'react-bootstrap';\r\n\r\n// @material-ui/icons\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n// import TextField from '@material-ui/core/RadioGroup';\r\nimport {MdVisibility, MdVisibilityOff} from 'react-icons/md'\r\n\r\n// services\r\n// import {getCity, signupMedecin} from 'services/medecin/MedecinService'\r\n// core components\r\nimport Config from \"../config\"\r\n\r\nimport PhoneField from './Inputs/PhoneNumber/index';\r\nimport TextField from './Inputs/InputIcone/index';\r\nimport Button  from './CustomButtons/Button';\r\n\r\n\r\nimport { FaMailBulk, FaPhone, FaUserMd } from 'react-icons/fa';\r\n\r\nexport default  class ElementForm extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            nom: \"\",\r\n            prenom:\"\",\r\n            phone:\"\",\r\n            email: \"\",\r\n            password:\"\",\r\n            password_confirmation: \"\",\r\n            villes:[],\r\n            cityId: \"\",\r\n\t        sexe:\"\",\r\n            fieldValidationErrors:{\r\n                nomError:false,\r\n                prenomError:false,\r\n                numeroError:false,\r\n                emailError:false,\r\n                \r\n            },\r\n            sending:false,\r\n            success:false\r\n        }\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({sending: true});\r\n\r\n        let data = this.traitementDonnee();\r\n        console.log(Config.api_path)\r\n        const link = Config.api_path + \"/medecin/signup\"\r\n        console.log(link)\r\n        fetch(link,{\r\n            method:\"post\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body:JSON.stringify({...data})\r\n        })\r\n        .then(\r\n            (r) => r.json()\r\n            .then(res => {\r\n\r\n                if(!res.error){\r\n                    this.setState({sending: false, success:true, donneIncorecte: false});\r\n                    \r\n                    \r\n                }else {\r\n                    this.setState({sending: false, success:false, donneIncorecte:true})\r\n                    if(res.validator){\r\n\r\n                    }else{\r\n\r\n                    }\r\n                }\r\n           \r\n            })\r\n            ).catch(error =>{ \r\n                this.setState({sending: false, success:false, donneIncorecte:true})\r\n            })\r\n    }\r\n\r\n    traitementDonnee(){\r\n        let formData={};\r\n        \r\n        formData.nom=this.state.nom\r\n        formData.phone=this.state.phone\r\n        formData.email=this.state.email\r\n        formData.prenom=this.state.prenom\r\n        formData.cityId=this.state.cityId\r\n\t    formData.sexe = this.state.sexe\r\n\t    formData.password = this.state.password\r\n        return formData;\r\n    }\r\n \r\n\r\n    handleChange = ({target : {value, name}}) => {\r\n        \r\n        if(name === \"phone\"){\r\n            value = value\r\n            // Remove all non-digits, turn initial 33 into nothing\r\n            .replace(/[^\\d+]/g, '')\r\n            .replace(/^0/, '+212')\r\n            // Stick to first 10, ignore later digits\r\n            .slice(0, 13)\r\n            // Add a space after any 2-digit group followed by more digits\r\n            .replace(/(\\d{3})(?=\\d)/g, '$1 ')\r\n        }\r\n        this.setState({[name]: value}) ;\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${Config.api_path}/city`, {\r\n            headers: {\r\n                'Accept': 'application/json', \r\n                'Content-Type': 'application/json',\r\n    \r\n            },\r\n        }).then ((res) => {\r\n            res.json().then (response => {\r\n                console.log(response)\r\n                if(response.cities){\r\n                    this.setState({villes: response.cities});\r\n                }\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n       \r\n    \r\n    }\r\n    render(){\r\n        let {villes, fieldValidationErrors, nom, prenom, phone, email, donneIncorecte, cityId, success,  sexe,sending} = this.state\r\n\r\n    return (\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n            \r\n                <Row>\r\n                        <Col xs=\"12\" md=\"6\" className=\"mt-3\"> \r\n                            <TextField\r\n                                autoFocus={true}\r\n                                error={fieldValidationErrors.nomError}\r\n                                placeholder=\"Votre nom de famille\"\r\n                                label=\"Nom\"\r\n                                Icone={FaUserMd}\r\n                                required={true}\r\n                                variant=\"outlined\"\r\n                                name=\"nom\"\r\n                                // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\r\n                                onBlur={this.validateField} \r\n                                value={nom}\r\n                                onChange={this.handleChange} \r\n                            />\r\n                             \r\n                        </Col>\r\n                        <Col xs=\"12\" md=\"6\" className=\"mt-3\"> \r\n                            <TextField\r\n                                placeholder=\"Votre prenom\"\r\n                                variant=\"outlined\"\r\n                                required={true}\r\n                                error={fieldValidationErrors.prenomError}\r\n                                label=\"Prenom\"\r\n                                Icone={FaUserMd}\r\n                                // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\r\n                                onBlur={this.validateField} \r\n                                name=\"prenom\"\r\n                                value={prenom}\r\n                                onChange={this.handleChange} \r\n                            />\r\n                          \r\n                        </Col>\r\n\r\n                        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\r\n                            <PhoneField \r\n                                label=\"Numéro de téléphone\" \r\n                                Icone={FaPhone}\r\n                                name=\"phone\"\r\n                                required={true}\r\n                                variant=\"outlined\"\r\n                                error={fieldValidationErrors.numeroError}\r\n                                // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\r\n                                onBlur={this.validateField}\r\n                                value={phone}\r\n                                placeholder=\"+212 600 000 000\"\r\n                                onChange={this.handleChange} \r\n                            />\r\n                            {/* <Row className=\"my-3\">\r\n                                <Collapse in={fieldValidationErrors.numeroError}>\r\n                                    <div>\r\n                                        <Alert  variant=\"danger\">\r\n                                             \r\n                                        </Alert>\r\n                                    </div>\r\n                                </Collapse>\r\n                            </Row> */}\r\n                        </Col>\r\n                        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\r\n                            <TextField \r\n                                label=\"Adresse email\"\r\n                                Icone={FaMailBulk}\r\n                                placeholder=\"Adresse email\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                error={fieldValidationErrors.emailError}\r\n                                required={true}\r\n                                // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\r\n                                onBlur={this.validateField} \r\n                                value={email}\r\n                                onChange={this.handleChange} \r\n                            />   \r\n                           \r\n                        </Col> \r\n                        <Col xs=\"12\" className=\"mt-3\"> \r\n                            <FormControl fullWidth variant=\"outlined\">\r\n                                <InputLabel htmlFor=\"standard-adornment-password\"> Mot de passe </InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"standard-adornment-password\"\r\n                                    type={this.state.showPassword ? 'text' : 'password'}\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                    required={true}\r\n                                    label=\"Mot de passe\"\r\n                                    name=\"password\"\r\n                                    endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={ () => this.setState(old =>{return  {...old, showPassword: !this.state.showPassword}})} \r\n                                        >\r\n                                        {this.state.showPassword ? <MdVisibility /> : <MdVisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                    }\r\n                                />\r\n                                </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"12\" md=\"12\" className=\"mt-3\">\r\n                          \r\n                             <FormControl variant=\"outlined\" fullWidth >\r\n                                <InputLabel >Ville</InputLabel>\r\n                                <Select\r\n                                    value={cityId}\r\n                                    onChange={this.handleChange}\r\n                                    label=\"Ville\"\r\n                                    name=\"cityId\"\r\n                                    required={true}\r\n                                >\r\n                                {villes.map(((ville, index) =>\r\n                                            <MenuItem key={index} value={ville.id}>{ville.name}</MenuItem>\r\n                                    ))\r\n                                }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"12\" md=\"12\" className=\"my-3\">\r\n                            <FormControl component=\"div\">\r\n                                <FormLabel component=\"legend\">Sexe</FormLabel>\r\n                                <RadioGroup className=\"flex-row\" aria-label=\"Sexe\" name=\"sexe\" value={sexe} onClick={(event)=>{this.setState({sexe: event.target.value})}}>\r\n                                    <FormControlLabel value={'homme'} control={<Radio />} label=\"Homme\" />\r\n                                    <FormControlLabel value={'femme'} control={<Radio />} label=\"Femme\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Collapse in={donneIncorecte}>\r\n                        <div>\r\n                            <Alert  variant=\"danger\">\r\n                                les information sont incorrecte\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                </Row>\r\n                <Row>\r\n                    <Collapse in={success}>\r\n                        <div >\r\n                            <Alert  variant=\"success\">\r\n                                Demande envoyer avec succés\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                </Row>\r\n                <Row className=\"align-items-center justify-content-around mt-4 \">\r\n                    <Button type=\"submit\" color=\"primary\"> Enregistrer </Button>\r\n                </Row>\r\n            </form>\r\n    );\r\n\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}