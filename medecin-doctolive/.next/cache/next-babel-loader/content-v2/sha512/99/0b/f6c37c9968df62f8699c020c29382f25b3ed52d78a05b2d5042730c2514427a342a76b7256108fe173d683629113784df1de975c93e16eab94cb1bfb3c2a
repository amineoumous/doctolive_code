{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"C:/app/doctolive_code/medecin-doctolive/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/app/doctolive_code/medecin-doctolive/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/app/doctolive_code/medecin-doctolive/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/app/doctolive_code/medecin-doctolive/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/app/doctolive_code/medecin-doctolive/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/app/doctolive_code/medecin-doctolive/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/app/doctolive_code/medecin-doctolive/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Col, Row, Alert, Collapse } from 'react-bootstrap'; // @material-ui/icons\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport RadioGroup from '@material-ui/core/RadioGroup'; // import TextField from '@material-ui/core/RadioGroup';\n\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md'; // services\n// import {getCity, signupMedecin} from 'services/medecin/MedecinService'\n// core components\n\nimport Config from \"../config\";\nimport PhoneField from './Inputs/PhoneNumber/index';\nimport TextField from './Inputs/InputIcone/index';\nimport Button from './CustomButtons/Button';\nimport { FaMailBulk, FaPhone, FaUserMd } from 'react-icons/fa';\n\nvar ElementForm = /*#__PURE__*/function (_Component) {\n  _inherits(ElementForm, _Component);\n\n  var _super = _createSuper(ElementForm);\n\n  function ElementForm(props) {\n    var _this;\n\n    _classCallCheck(this, ElementForm);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        sending: true\n      });\n\n      var data = _this.traitementDonnee();\n\n      console.log(Config.api_path);\n      var link = Config.api_path + \"/medecin/signup\";\n      console.log(link);\n      fetch(link, {\n        method: \"post\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(_objectSpread({}, data))\n      }).then(function (r) {\n        return r.json().then(function (res) {\n          if (!res.error) {\n            _this.setState({\n              sending: false,\n              success: true,\n              donneIncorecte: false\n            });\n          } else {\n            _this.setState({\n              sending: false,\n              success: false,\n              donneIncorecte: true\n            });\n\n            if (res.validator) {} else {}\n          }\n        });\n      })[\"catch\"](function (error) {\n        _this.setState({\n          sending: false,\n          success: false,\n          donneIncorecte: true\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (_ref) {\n      var _ref$target = _ref.target,\n          value = _ref$target.value,\n          name = _ref$target.name;\n\n      if (name === \"phone\") {\n        value = value // Remove all non-digits, turn initial 33 into nothing\n        .replace(/[^\\d+]/g, '').replace(/^0/, '+212') // Stick to first 10, ignore later digits\n        .slice(0, 13) // Add a space after any 2-digit group followed by more digits\n        .replace(/(\\d{3})(?=\\d)/g, '$1 ');\n      }\n\n      _this.setState(_defineProperty({}, name, value));\n    });\n\n    _this.state = {\n      nom: \"\",\n      prenom: \"\",\n      phone: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      villes: [],\n      cityId: \"\",\n      sexe: \"\",\n      fieldValidationErrors: {\n        nomError: false,\n        prenomError: false,\n        numeroError: false,\n        emailError: false\n      },\n      sending: false,\n      success: false\n    };\n    return _this;\n  }\n\n  _createClass(ElementForm, [{\n    key: \"traitementDonnee\",\n    value: function traitementDonnee() {\n      var formData = {};\n      formData.nom = this.state.nom;\n      formData.phone = this.state.phone;\n      formData.email = this.state.email;\n      formData.prenom = this.state.prenom;\n      formData.cityId = this.state.cityId;\n      formData.sexe = this.state.sexe;\n      formData.password = this.state.password;\n      return formData;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(Config.api_path, \"/city\"), {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        res.json().then(function (response) {\n          console.log(response);\n\n          if (response.cities) {\n            _this2.setState({\n              villes: response.cities\n            });\n          }\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          villes = _this$state.villes,\n          fieldValidationErrors = _this$state.fieldValidationErrors,\n          nom = _this$state.nom,\n          prenom = _this$state.prenom,\n          phone = _this$state.phone,\n          email = _this$state.email,\n          donneIncorecte = _this$state.donneIncorecte,\n          cityId = _this$state.cityId,\n          success = _this$state.success,\n          sexe = _this$state.sexe,\n          sending = _this$state.sending;\n      return /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: this.handleSubmit,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(Col, {\n            xs: \"12\",\n            md: \"6\",\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsx(TextField, {\n              autoFocus: true,\n              error: fieldValidationErrors.nomError,\n              placeholder: \"Votre nom de famille\",\n              label: \"Nom\",\n              InputProps: {\n                classes: {\n                  notchedOutline: {\n                    borderColor: '#38869C !important',\n                    borderWidth: \"2px !important\"\n                  }\n                },\n                style: {\n                  borderRadius: \"10px\"\n                }\n              },\n              InputLabelProps: {\n                style: {\n                  color: '#61788E'\n                }\n              },\n              Icone: FaUserMd,\n              required: true,\n              variant: \"outlined\",\n              name: \"nom\" // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\n              ,\n              onBlur: this.validateField,\n              value: nom,\n              onChange: this.handleChange\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: \"12\",\n            md: \"6\",\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsx(TextField, {\n              placeholder: \"Votre prenom\",\n              variant: \"outlined\",\n              InputProps: {\n                classes: {\n                  notchedOutline: {\n                    borderColor: '#38869C !important',\n                    borderWidth: \"2px !important\"\n                  }\n                },\n                style: {\n                  borderRadius: \"10px\"\n                }\n              },\n              InputLabelProps: {\n                style: {\n                  color: '#61788E'\n                }\n              },\n              required: true,\n              error: fieldValidationErrors.prenomError,\n              label: \"Prenom\",\n              Icone: FaUserMd // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\n              ,\n              onBlur: this.validateField,\n              name: \"prenom\",\n              value: prenom,\n              onChange: this.handleChange\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: \"12\",\n            md: \"6\",\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsx(PhoneField, {\n              label: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n              Icone: FaPhone,\n              name: \"phone\",\n              InputProps: {\n                classes: {\n                  notchedOutline: {\n                    borderColor: '#38869C !important',\n                    borderWidth: \"2px !important\"\n                  }\n                },\n                style: {\n                  borderRadius: \"10px\"\n                }\n              },\n              InputLabelProps: {\n                style: {\n                  color: '#61788E'\n                }\n              },\n              required: true,\n              variant: \"outlined\",\n              error: fieldValidationErrors.numeroError // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\n              ,\n              onBlur: this.validateField,\n              value: phone,\n              placeholder: \"+212 600 000 000\",\n              onChange: this.handleChange\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: \"12\",\n            md: \"6\",\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsx(TextField, {\n              label: \"Adresse email\",\n              Icone: FaMailBulk,\n              placeholder: \"Adresse email\",\n              variant: \"outlined\",\n              InputProps: {\n                classes: {\n                  notchedOutline: {\n                    borderColor: '#38869C !important',\n                    borderWidth: \"2px !important\"\n                  }\n                },\n                style: {\n                  borderRadius: \"10px\"\n                }\n              },\n              InputLabelProps: {\n                style: {\n                  color: '#61788E'\n                }\n              },\n              name: \"email\",\n              error: fieldValidationErrors.emailError,\n              required: true // InputLabelProps={{style:{right: 0, left:\"auto\"}}}\n              ,\n              onBlur: this.validateField,\n              value: email,\n              onChange: this.handleChange\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: \"12\",\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxs(FormControl, {\n              fullWidth: true,\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsx(InputLabel, {\n                htmlFor: \"standard-adornment-password\",\n                style: {\n                  color: \"#61788E\"\n                },\n                children: \" Mot de passe \"\n              }), /*#__PURE__*/_jsx(OutlinedInput, {\n                id: \"standard-adornment-password\",\n                type: this.state.showPassword ? 'text' : 'password',\n                value: this.state.password,\n                onChange: this.handleChange,\n                required: true,\n                label: \"Mot de passe\",\n                name: \"password\",\n                endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsx(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: function onClick() {\n                      return _this3.setState(function (old) {\n                        return _objectSpread(_objectSpread({}, old), {}, {\n                          showPassword: !_this3.state.showPassword\n                        });\n                      });\n                    },\n                    children: this.state.showPassword ? /*#__PURE__*/_jsx(MdVisibility, {}) : /*#__PURE__*/_jsx(MdVisibilityOff, {})\n                  })\n                })\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: \"12\",\n            md: \"12\",\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxs(FormControl, {\n              variant: \"outlined\",\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsx(InputLabel, {\n                children: \"Ville\"\n              }), /*#__PURE__*/_jsx(Select, {\n                value: cityId,\n                onChange: this.handleChange,\n                label: \"Ville\",\n                name: \"cityId\",\n                required: true,\n                children: villes.map(function (ville, index) {\n                  return /*#__PURE__*/_jsx(MenuItem, {\n                    value: ville.id,\n                    children: ville.name\n                  }, index);\n                })\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: \"12\",\n            md: \"12\",\n            className: \"my-3\",\n            children: /*#__PURE__*/_jsxs(FormControl, {\n              component: \"div\",\n              children: [/*#__PURE__*/_jsx(FormLabel, {\n                component: \"legend\",\n                children: \"Sexe\"\n              }), /*#__PURE__*/_jsxs(RadioGroup, {\n                className: \"flex-row\",\n                \"aria-label\": \"Sexe\",\n                name: \"sexe\",\n                value: sexe,\n                onClick: function onClick(event) {\n                  _this3.setState({\n                    sexe: event.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsx(FormControlLabel, {\n                  value: 'homme',\n                  control: /*#__PURE__*/_jsx(Radio, {}),\n                  label: \"Homme\"\n                }), /*#__PURE__*/_jsx(FormControlLabel, {\n                  value: 'femme',\n                  control: /*#__PURE__*/_jsx(Radio, {}),\n                  label: \"Femme\"\n                })]\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsx(Row, {\n          children: /*#__PURE__*/_jsx(Collapse, {\n            \"in\": donneIncorecte,\n            children: /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(Alert, {\n                variant: \"danger\",\n                children: \"les information sont incorrecte\"\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Row, {\n          children: /*#__PURE__*/_jsx(Collapse, {\n            \"in\": success,\n            children: /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(Alert, {\n                variant: \"success\",\n                children: \"Demande envoyer avec succ\\xE9s\"\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Row, {\n          className: \"left-content \",\n          children: /*#__PURE__*/_jsx(Col, {\n            xs: \"12\",\n            md: \"12\",\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsx(Button, {\n              type: \"submit\",\n              className: \"btn-save\",\n              color: \"primary\",\n              children: \" Enregistrer \"\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return ElementForm;\n}(Component);\n\nexport { ElementForm as default };","map":null,"metadata":{},"sourceType":"module"}