{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\admin-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\admin-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\admin-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\admin-doctolive\\\\src\\\\views\\\\Patients\\\\ListParameters.js\";\nimport React from 'react'; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport StyledCheckbox from 'components/Checkbox/Checkbox';\nexport default function ListParameters(props) {\n  var _React$useState = React.useState({\n    unblocked: true,\n    validate: true,\n    allDay: true,\n    onlyNight: true,\n    allWeek: true,\n    onlyWeekend: true,\n    moto: true,\n    bycicle: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      changedState = _React$useState4[0],\n      setChangedState = _React$useState4[1];\n\n  var handleChange = function handleChange(e) {\n    var field = e.target;\n\n    if (field !== null) {\n      setState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, field.name, field.checked));\n      });\n    }\n\n    setChangedState(true);\n  };\n\n  var rerenderElement = function rerenderElement() {\n    props.changeElementToShow(state);\n    setChangedState(false);\n  };\n\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    xl: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \" Afficher patients selon la validit\\xE9 : \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledCheckbox, {\n    checked: state.validate,\n    onChange: handleChange,\n    label: \"Patients valid\\xE9\",\n    name: \"validate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StyledCheckbox, {\n    checked: state.invalidate,\n    onChange: handleChange,\n    label: \"Patients non valid\\xE9\",\n    name: \"invalidate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: !changedState,\n    onClick: rerenderElement,\n    round: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \" rafraichir l'affichage  \"))));\n}","map":{"version":3,"names":["React","GridItem","GridContainer","Button","StyledCheckbox","ListParameters","props","useState","unblocked","validate","allDay","onlyNight","allWeek","onlyWeekend","moto","bycicle","state","setState","changedState","setChangedState","handleChange","e","field","target","name","checked","rerenderElement","changeElementToShow","invalidate"],"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/admin-doctolive/src/views/Patients/ListParameters.js"],"sourcesContent":["import React from 'react';\r\n\r\n\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport StyledCheckbox from 'components/Checkbox/Checkbox'\r\n\r\n\r\nexport default function ListParameters(props) {\r\n    const [state, setState] = React.useState({\r\n        unblocked: true,\r\n        validate: true,\r\n        allDay: true,\r\n        onlyNight: true,\r\n        allWeek: true,\r\n        onlyWeekend: true,\r\n        moto: true,\r\n        bycicle : true,\r\n    });\r\n    const [changedState, setChangedState] = React.useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        let field = e.target;\r\n\r\n        if(field !== null){\r\n            setState(state => {return {...state, [field.name] :  field.checked  }})\r\n        }\r\n        setChangedState(true);\r\n    }\r\n\r\n    const rerenderElement = () => {\r\n        props.changeElementToShow(state);\r\n        setChangedState(false);\r\n    }\r\n\r\n    return (\r\n        <GridContainer >\r\n        <GridItem xs={12} sm={12} md={6} xl={4}>\r\n            <label> Afficher patients selon la validité : </label>\r\n            <div>\r\n                <StyledCheckbox checked={state.validate} onChange={handleChange} label=\"Patients validé\" name=\"validate\" />\r\n                <StyledCheckbox checked={state.invalidate} onChange={handleChange} label=\"Patients non validé\" name=\"invalidate\" />\r\n            </div>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer justify=\"center\" alignItems=\"center\" >\r\n            <Button disabled={!changedState} onClick={rerenderElement} round color=\"primary\"> rafraichir l'affichage  </Button>\r\n          </GridContainer>\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC1C,sBAA0BN,KAAK,CAACO,QAAN,CAAe;IACrCC,SAAS,EAAE,IAD0B;IAErCC,QAAQ,EAAE,IAF2B;IAGrCC,MAAM,EAAE,IAH6B;IAIrCC,SAAS,EAAE,IAJ0B;IAKrCC,OAAO,EAAE,IAL4B;IAMrCC,WAAW,EAAE,IANwB;IAOrCC,IAAI,EAAE,IAP+B;IAQrCC,OAAO,EAAG;EAR2B,CAAf,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAUA,uBAAwCjB,KAAK,CAACO,QAAN,CAAe,KAAf,CAAxC;EAAA;EAAA,IAAOW,YAAP;EAAA,IAAqBC,eAArB;;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;IACxB,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAd;;IAEA,IAAGD,KAAK,KAAK,IAAb,EAAkB;MACdL,QAAQ,CAAC,UAAAD,KAAK,EAAI;QAAC,uCAAWA,KAAX,2BAAmBM,KAAK,CAACE,IAAzB,EAAkCF,KAAK,CAACG,OAAxC;MAAmD,CAA9D,CAAR;IACH;;IACDN,eAAe,CAAC,IAAD,CAAf;EACH,CAPD;;EASA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC1BpB,KAAK,CAACqB,mBAAN,CAA0BX,KAA1B;IACAG,eAAe,CAAC,KAAD,CAAf;EACH,CAHD;;EAKA,oBACI,oBAAC,aAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,QAAD;IAAU,EAAE,EAAE,EAAd;IAAkB,EAAE,EAAE,EAAtB;IAA0B,EAAE,EAAE,CAA9B;IAAiC,EAAE,EAAE,CAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gDADJ,eAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,cAAD;IAAgB,OAAO,EAAEH,KAAK,CAACP,QAA/B;IAAyC,QAAQ,EAAEW,YAAnD;IAAiE,KAAK,EAAC,oBAAvE;IAAyF,IAAI,EAAC,UAA9F;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,cAAD;IAAgB,OAAO,EAAEJ,KAAK,CAACY,UAA/B;IAA2C,QAAQ,EAAER,YAArD;IAAmE,KAAK,EAAC,wBAAzE;IAA+F,IAAI,EAAC,YAApG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CAFJ,CADA,eAQA,oBAAC,QAAD;IAAU,EAAE,EAAE,EAAd;IAAkB,EAAE,EAAE,EAAtB;IAA0B,EAAE,EAAE,EAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,aAAD;IAAe,OAAO,EAAC,QAAvB;IAAgC,UAAU,EAAC,QAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,QAAQ,EAAE,CAACF,YAAnB;IAAiC,OAAO,EAAEQ,eAA1C;IAA2D,KAAK,MAAhE;IAAiE,KAAK,EAAC,SAAvE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+BADF,CADF,CARA,CADJ;AAgBH"},"metadata":{},"sourceType":"module"}