{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\admin-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport Axios from 'axios';\nimport Config from 'Config';\n\nfunction activateElement(id, access_token) {\n  return new Promise(function (resolve, reject) {\n    Axios.patch(\"\".concat(Config.BACKEND_URL, \"admin/medecin/activate/\").concat(id), {}, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction _blockingElement(id, access_token) {\n  return new Promise(function (resolve, reject) {\n    Axios.patch(\"\".concat(Config.BACKEND_URL, \"admin/medecin/inactivate/\").concat(id), {}, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction _deblockingElement(id, access_token) {\n  return new Promise(function (resolve, reject) {\n    Axios.patch(\"\".concat(Config.BACKEND_URL, \"admin/medecin/deblock/\").concat(id), {}, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction deleteElement(id, access_token) {\n  return new Promise(function (resolve, reject) {\n    Axios[\"delete\"](\"\".concat(Config.BACKEND_URL, \"admin/medecin/\").concat(id), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction addElement(data, access_token) {\n  var postData = _objectSpread(_objectSpread({}, data), {}, {\n    cityId: data.city.id\n  });\n\n  return new Promise(function (resolve, reject) {\n    Axios.post(\"\".concat(Config.BACKEND_URL, \"admin/medecin\"), postData, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n}\n\nfunction updateElement(data, access_token) {\n  var postData = _objectSpread(_objectSpread({}, data), {}, {\n    cityId: data.city.id\n  });\n\n  return new Promise(function (resolve, reject) {\n    Axios.put(\"\".concat(Config.BACKEND_URL, \"admin/medecin/\").concat(data.id), postData, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n}\n\nfunction getAllElement(access_token) {\n  return new Promise(function (resolve, reject) {\n    Axios.get(\"\".concat(Config.BACKEND_URL, \"medecin\"), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n}\n\nfunction getMedecinConsultation(id, access_token) {\n  return new Promise(function (resolve, reject) {\n    Axios.get(\"\".concat(Config.BACKEND_URL, \"admin/medecin/consultations/\").concat(id), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n}\n\nfunction getOneElement(id, access_token) {\n  return new Promise(function (resolve, reject) {\n    Axios.get(\"\".concat(Config.BACKEND_URL, \"medecin/\").concat(id), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"token \".concat(access_token)\n      }\n    }).then(function (result) {\n      resolve(result);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n}\n\nexport { activateElement, addElement, getAllElement, getOneElement, updateElement, getMedecinConsultation, deleteElement, _blockingElement, _deblockingElement };","map":{"version":3,"names":["Axios","Config","activateElement","id","access_token","Promise","resolve","reject","patch","BACKEND_URL","headers","then","result","e","_blockingElement","_deblockingElement","deleteElement","addElement","data","postData","cityId","city","post","err","updateElement","put","getAllElement","get","getMedecinConsultation","getOneElement"],"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/admin-doctolive/src/services/Medecins/MedecinsService.js"],"sourcesContent":["\r\nimport Axios from 'axios'\r\nimport Config from 'Config';\r\n\r\n\r\nfunction activateElement (id, access_token) {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n        Axios.patch(`${Config.BACKEND_URL}admin/medecin/activate/${id}`,{} , { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then(result => {\r\n            resolve(result);\r\n        }).catch(e => {\r\n            reject(e)\r\n        });\r\n    })\r\n}\r\n\r\nfunction _blockingElement (id, access_token) {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n        Axios.patch(`${Config.BACKEND_URL}admin/medecin/inactivate/${id}`,{} , { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then(result => {\r\n            resolve(result);\r\n        }).catch(e => {\r\n            reject(e)\r\n        });\r\n    })\r\n}\r\n\r\nfunction _deblockingElement (id, access_token) {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n        Axios.patch(`${Config.BACKEND_URL}admin/medecin/deblock/${id}`,{} , { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then(result => {\r\n            resolve(result);\r\n        }).catch(e => {\r\n            reject(e)\r\n        });\r\n    })\r\n}\r\n\r\nfunction deleteElement (id, access_token) {\r\n    return new Promise( (resolve, reject) => {\r\n        Axios.delete(`${Config.BACKEND_URL}admin/medecin/${id}` , { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then(result => {\r\n            resolve(result);\r\n        }).catch(e => {\r\n            reject(e)\r\n        });\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nfunction addElement (data, access_token) {\r\n\r\n    let postData = {...data, cityId:data.city.id, };\r\n    return new Promise( (resolve, reject) => {\r\n        Axios.post(`${Config.BACKEND_URL}admin/medecin`, postData, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then((result) => {\r\n            resolve(result);\r\n        })\r\n        .catch(err => {\r\n            reject(err)\r\n        });\r\n    })\r\n}\r\n\r\nfunction updateElement (data, access_token) {\r\n    let postData = {...data, cityId:data.city.id, };\r\n\r\n    return new Promise( (resolve, reject) => {\r\n        Axios.put(`${Config.BACKEND_URL}admin/medecin/${data.id}`, postData, { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then((result) => {\r\n            resolve(result);\r\n        })\r\n        .catch(err => {\r\n            reject(err)\r\n        });\r\n    })\r\n}\r\n\r\nfunction getAllElement (access_token) {  \r\n    return new Promise( (resolve, reject) => {\r\n        Axios.get(`${Config.BACKEND_URL}medecin`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then((result) => {\r\n            resolve(result);\r\n        })\r\n        .catch(err => {\r\n            reject(err)\r\n        });\r\n    })\r\n}\r\n\r\nfunction getMedecinConsultation (id, access_token) {  \r\n    return new Promise( (resolve, reject) => {\r\n        Axios.get(`${Config.BACKEND_URL}admin/medecin/consultations/${id}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then((result) => {\r\n            resolve(result);\r\n        })\r\n        .catch(err => {\r\n            reject(err)\r\n        });\r\n    })\r\n}\r\n\r\nfunction getOneElement (id, access_token) {  \r\n    return new Promise( (resolve, reject) => {\r\n        Axios.get(`${Config.BACKEND_URL}medecin/${id}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${access_token}`,\r\n            }\r\n        })\r\n        .then((result) => {\r\n            resolve(result);\r\n        })\r\n        .catch(err => {\r\n            reject(err)\r\n        });\r\n    })\r\n}\r\n\r\n\r\nexport {\r\n    activateElement, \r\n    addElement,\r\n    getAllElement,\r\n    getOneElement,\r\n    updateElement,\r\n    getMedecinConsultation,\r\n    deleteElement,\r\n    _blockingElement,\r\n    _deblockingElement,\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}