{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\admin-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\admin-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\admin-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';// core components\nimport GridItem from\"components/Grid/GridItem.js\";import GridContainer from\"components/Grid/GridContainer.js\";import Button from\"components/CustomButtons/Button.js\";import StyledCheckbox from'components/Checkbox/Checkbox';import{getCity}from'services/Ville/VilleService';import{getAllElement}from'services/Speciality/SpecialityService';export default function ListParameters(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),villes=_useState2[0],setVilles=_useState2[1];// const [categories, setCategories] = useState([]);\nvar _useState3=useState({unblocked:true,teleactive:true,teleinactive:true,invalidate:true,validate:true,cities:{},categories:{}}),_useState4=_slicedToArray(_useState3,2),state=_useState4[0],setState=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),changedState=_useState6[0],setChangedState=_useState6[1];var handleChangeCity=function handleChangeCity(e){var field=e.target;if(field!==null){setState(function(state){return _objectSpread(_objectSpread({},state),{},{cities:_objectSpread(_objectSpread({},state.cities),{},_defineProperty({},field.name,field.checked))});});}setChangedState(true);};// const handleChangeCategory  = (e) => {\n//     let field = e.target;\n//     if(field !== null){\n//         setState(state => {return {...state, categories:{ ...state.categories, [field.name] :  field.checked } }})\n//     }\n//     setChangedState(true);\n// }\nvar handleChange=function handleChange(e){var field=e.target;if(field!==null){setState(function(state){return _objectSpread(_objectSpread({},state),{},_defineProperty({},field.name,field.checked));});}setChangedState(true);};var rerenderElement=function rerenderElement(){props.changeElementToShow(state);setChangedState(false);};useEffect(function(){getCity().then(function(response){if(!response.data.error){if(response.data.cities!==undefined){response.data.cities.map(function(city){setState(function(state){return _objectSpread(_objectSpread({},state),{},{cities:_objectSpread(_objectSpread({},state.cities),{},_defineProperty({},city.name,true))});});});setVilles(response.data.cities);}}}).catch(function(err){// console.log(err.response);\n});// getAllElement()\n// .then((response) => {\n//     if(!response.data.error){\n//         if(response.data.categories !== undefined){\n//             response.data.categories.map(element => {\n//                 setState((state) => {\n//                     return {...state, categories:{ ...state.categories, [element.name] :  true } }\n//                 })\n//             })\n//             setCategories(response.data.categories)\n//         }\n//     }\n// })\n// .catch(err => {\n//     // console.log(err.response);\n// });\nreturn function(){};},[]);return/*#__PURE__*/React.createElement(GridContainer,null,/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:6,xl:4},/*#__PURE__*/React.createElement(\"label\",null,\" Afficher medecin selon la validit\\xE9 : \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(StyledCheckbox,{checked:state.validate,onChange:handleChange,label:\"Medecin valid\\xE9\",name:\"validate\"}),/*#__PURE__*/React.createElement(StyledCheckbox,{checked:state.invalidate,onChange:handleChange,label:\"Medecin non valid\\xE9\",name:\"invalidate\"}))),/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:6,xl:4},/*#__PURE__*/React.createElement(\"label\",null,\" Afficher medecin selon la disponibilit\\xE9 de la t\\xE9l\\xE9consultation : \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(StyledCheckbox,{checked:state.teleactive,onChange:handleChange,label:\"T\\xE9l\\xE9consultation activ\\xE9\",name:\"teleactive\"}),/*#__PURE__*/React.createElement(StyledCheckbox,{checked:state.teleinactive,onChange:handleChange,label:\"T\\xE9leconsultation non activ\\xE9\",name:\"teleinactive\"}))),/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:6,xl:4},/*#__PURE__*/React.createElement(\"label\",null,\" Afficher medecin selon la ville : \"),/*#__PURE__*/React.createElement(\"div\",null,villes.map(function(ville,index){return/*#__PURE__*/React.createElement(StyledCheckbox,{key:index,checked:state.cities[ville.name],onChange:handleChangeCity,label:ville.name,name:ville.name});}))),/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:12},/*#__PURE__*/React.createElement(GridContainer,{justify:\"center\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Button,{disabled:!changedState,onClick:rerenderElement,round:true,color:\"primary\"},\" rafraichir l'affichage  \"))));}","map":{"version":3,"names":["React","useEffect","useState","GridItem","GridContainer","Button","StyledCheckbox","getCity","getAllElement","ListParameters","props","villes","setVilles","unblocked","teleactive","teleinactive","invalidate","validate","cities","categories","state","setState","changedState","setChangedState","handleChangeCity","e","field","target","name","checked","handleChange","rerenderElement","changeElementToShow","then","response","data","error","undefined","map","city","catch","err","ville","index"],"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/admin-doctolive/src/views/Medecin/ListParameters.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\n\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport StyledCheckbox from 'components/Checkbox/Checkbox'\r\n\r\nimport { getCity } from 'services/Ville/VilleService'\r\nimport { getAllElement } from 'services/Speciality/SpecialityService'\r\n\r\n\r\nexport default function ListParameters(props) {\r\n    const [villes, setVilles] = useState([ ]);\r\n    // const [categories, setCategories] = useState([]);\r\n\r\n    const [state, setState] = useState({\r\n        unblocked: true,\r\n        teleactive: true,\r\n        teleinactive: true,\r\n        invalidate:true,\r\n        validate: true,\r\n        cities:{},\r\n        categories: {}\r\n    });\r\n    const [changedState, setChangedState] = useState(false)\r\n\r\n    const handleChangeCity  = (e) => {\r\n        let field = e.target;\r\n\r\n        if(field !== null){\r\n            setState(state => {return {...state, cities:{ ...state.cities, [field.name] :  field.checked } }})\r\n        }\r\n        setChangedState(true);\r\n    }\r\n\r\n    // const handleChangeCategory  = (e) => {\r\n    //     let field = e.target;\r\n\r\n    //     if(field !== null){\r\n    //         setState(state => {return {...state, categories:{ ...state.categories, [field.name] :  field.checked } }})\r\n    //     }\r\n    //     setChangedState(true);\r\n    // }\r\n\r\n    const handleChange = (e) => {\r\n        let field = e.target;\r\n\r\n        if(field !== null){\r\n            setState(state => {return {...state, [field.name] :  field.checked  }})\r\n        }\r\n        setChangedState(true);\r\n    }\r\n\r\n    const rerenderElement = () => {\r\n        props.changeElementToShow(state);\r\n        setChangedState(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCity()\r\n        .then((response) => {\r\n            if(!response.data.error){\r\n                if(response.data.cities !== undefined){\r\n                    response.data.cities.map(city => {\r\n                        setState((state) => {\r\n                            return {...state, cities:{ ...state.cities, [city.name] :  true } }\r\n                        })\r\n                    })\r\n                    setVilles(response.data.cities)\r\n                }\r\n            }\r\n        })\r\n        .catch(err => {\r\n            // console.log(err.response);\r\n        });\r\n\r\n        // getAllElement()\r\n        // .then((response) => {\r\n        //     if(!response.data.error){\r\n        //         if(response.data.categories !== undefined){\r\n        //             response.data.categories.map(element => {\r\n        //                 setState((state) => {\r\n        //                     return {...state, categories:{ ...state.categories, [element.name] :  true } }\r\n        //                 })\r\n        //             })\r\n        //             setCategories(response.data.categories)\r\n        //         }\r\n        //     }\r\n        // })\r\n        // .catch(err => {\r\n        //     // console.log(err.response);\r\n        // });\r\n        \r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <GridContainer >\r\n        <GridItem xs={12} sm={12} md={6} xl={4}>\r\n            <label> Afficher medecin selon la validité : </label>\r\n            <div>\r\n                <StyledCheckbox checked={state.validate} onChange={handleChange} label=\"Medecin validé\" name=\"validate\" />\r\n                <StyledCheckbox checked={state.invalidate} onChange={handleChange} label=\"Medecin non validé\" name=\"invalidate\" />\r\n            </div>\r\n        </GridItem>\r\n        {/* <GridItem xs={12} sm={12} md={6} xl={4} >\r\n            <label> Afficher medecin selon la specialité : </label>\r\n            <div>\r\n            {categories.map((category, index) => {\r\n                    return(\r\n                        <StyledCheckbox key={index} checked={state.categories[category.name]} onChange={handleChangeCategory} label={category.name} name={category.name} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </GridItem> */}\r\n        <GridItem xs={12} sm={12} md={6} xl={4} >\r\n            <label> Afficher medecin selon la disponibilité de la téléconsultation : </label>\r\n            <div>\r\n                <StyledCheckbox checked={state.teleactive} onChange={handleChange} label=\"Téléconsultation activé\" name=\"teleactive\" />\r\n                <StyledCheckbox checked={state.teleinactive} onChange={handleChange} label=\"Téleconsultation non activé\" name=\"teleinactive\" />\r\n            </div>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={6} xl={4} >\r\n            <label> Afficher medecin selon la ville : </label>\r\n            <div>\r\n                {villes.map((ville, index) => {\r\n                    return(\r\n                        <StyledCheckbox key={index} checked={state.cities[ville.name]} onChange={handleChangeCity} label={ville.name} name={ville.name} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </GridItem>\r\n        \r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer justify=\"center\" alignItems=\"center\" >\r\n            <Button disabled={!changedState} onClick={rerenderElement} round color=\"primary\"> rafraichir l'affichage  </Button>\r\n          </GridContainer>\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}