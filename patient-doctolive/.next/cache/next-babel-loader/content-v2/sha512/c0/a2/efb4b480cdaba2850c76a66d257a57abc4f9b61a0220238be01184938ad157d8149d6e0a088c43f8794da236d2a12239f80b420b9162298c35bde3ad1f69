{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\context\\\\AppointementContext.js\";\n// src/context/state.js\nimport { createContext, useContext } from 'react';\nimport { useState, useEffect } from 'react';\nconst AppContext = /*#__PURE__*/createContext();\nexport function AppWrapper({\n  children\n}) {\n  const {\n    0: temporary_appointment,\n    1: setTemporary_appointment\n  } = useState({});\n\n  const setUserTemporary = data => {\n    localStorage.setItem(\"temporary_appointment\", JSON.stringify(data));\n    setTemporary_appointment(data);\n  };\n\n  useEffect(() => {\n    let existingtemporary_appointment = localStorage.getItem(\"temporary_appointment\");\n    existingtemporary_appointment = existingtemporary_appointment != \"undefined\" ? JSON.parse(existingtemporary_appointment) : {};\n    setTemporary_appointment(existingtemporary_appointment);\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      temporary_appointment,\n      setUserTemporary\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\nexport function useAppContext() {\n  return useContext(AppContext);\n}","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/context/AppointementContext.js"],"names":["createContext","useContext","useState","useEffect","AppContext","AppWrapper","children","temporary_appointment","setTemporary_appointment","setUserTemporary","data","localStorage","setItem","JSON","stringify","existingtemporary_appointment","getItem","parse","useAppContext"],"mappings":";;AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,UAAU,gBAAGJ,aAAa,EAAhC;AAEA,OAAO,SAASK,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AAGrC,QAAM;AAAA,OAACC,qBAAD;AAAA,OAAwBC;AAAxB,MAAoDN,QAAQ,CAAC,EAAD,CAAlE;;AAEA,QAAMO,gBAAgB,GAAIC,IAAD,IAAU;AAC/BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,uBAArB,EAA8CC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA9C;AACAF,IAAAA,wBAAwB,CAACE,IAAD,CAAxB;AACH,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AAChB,QAAIY,6BAA6B,GAAGJ,YAAY,CAACK,OAAb,CAAqB,uBAArB,CAApC;AAEAD,IAAAA,6BAA6B,GAAIA,6BAA6B,IAAI,WAAlC,GAAiDF,IAAI,CAACI,KAAL,CAAWF,6BAAX,CAAjD,GAA6F,EAA7H;AAEAP,IAAAA,wBAAwB,CAACO,6BAAD,CAAxB;AACI,WAAO,MAAM,CAEZ,CAFD;AAGH,GATQ,EASN,EATM,CAAT;AAYF,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAER,MAAAA,qBAAF;AAAyBE,MAAAA;AAAzB,KAA5B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,OAAO,SAASY,aAAT,GAAyB;AAC9B,SAAOjB,UAAU,CAACG,UAAD,CAAjB;AACD","sourcesContent":["// src/context/state.js\r\nimport { createContext, useContext } from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport function AppWrapper({ children }) {\r\n\r\n    \r\n    const [temporary_appointment, setTemporary_appointment] = useState({});\r\n\r\n    const setUserTemporary = (data) => {\r\n        localStorage.setItem(\"temporary_appointment\", JSON.stringify(data));\r\n        setTemporary_appointment(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n    let existingtemporary_appointment = localStorage.getItem(\"temporary_appointment\");\r\n\r\n    existingtemporary_appointment = (existingtemporary_appointment != \"undefined\") ? JSON.parse(existingtemporary_appointment) : {};\r\n\r\n    setTemporary_appointment(existingtemporary_appointment);\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n \r\n      \r\n  return (\r\n    <AppContext.Provider value={{ temporary_appointment, setUserTemporary }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}