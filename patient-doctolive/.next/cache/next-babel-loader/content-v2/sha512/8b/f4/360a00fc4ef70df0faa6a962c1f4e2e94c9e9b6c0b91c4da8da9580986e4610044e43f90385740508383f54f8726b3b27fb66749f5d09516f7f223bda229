{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// components/Review.js or components/Review.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { MdOutlineStarPurple500 } from 'react-icons/md';\n\nconst Review = (_ref) => {\n  let {\n    rating: initialRating,\n    reviews,\n    className,\n    editable,\n    large,\n    ratingText,\n    medium\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"rating\", \"reviews\", \"className\", \"editable\", \"large\", \"ratingText\", \"medium\"]);\n\n  const {\n    0: rating,\n    1: setRating\n  } = useState(initialRating);\n  useEffect(() => {\n    setRating(initialRating);\n  }, [initialRating]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: `rating d-flex align-items-center ${className}`,\n    children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, rest), {}, {\n      hidden: true,\n      value: rating,\n      onChange: () => console.log\n    })), Array(5).fill('').map((el, index) => /*#__PURE__*/_jsx(MdOutlineStarPurple500, {\n      color: index < rating ? \"#FFC546\" : \"rgba(0,0,0,.2)\",\n      className: `me-1 ${index} èè ${initialRating}`,\n      size: 24,\n      \"aria-disabled\": !editable,\n      onClick: () => editable && setRating(index + 1)\n    }, index.toString())), reviews && /*#__PURE__*/_jsxs(\"span\", {\n      className: \"review-number\",\n      children: [\"(\", reviews, \")\"]\n    }), ratingText && /*#__PURE__*/_jsx(\"span\", {\n      className: \"rating-text\",\n      children: rating\n    })]\n  });\n};\n\nexport default Review;","map":null,"metadata":{},"sourceType":"module"}