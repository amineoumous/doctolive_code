{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _classCallCheck from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from 'moment'; // import Cookies from 'js-cookie'\n// import content from './../../Content'\n// let lang = Cookies.get('lang')\n// lang = (lang === undefined)? \"fr\" : lang\n\nvar Countdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(Countdown, _React$Component);\n\n  var _super = _createSuper(Countdown);\n\n  function Countdown() {\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined,\n      difference: _this.props.difference\n    });\n\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        if (_this2.state.difference >= 1000) {\n          var diff = _this2.state.difference - 1000;\n          var days = moment(diff).format('DDD') - 1;\n          var hours = moment(diff).format('HH');\n          var minutes = moment(diff).format('mm');\n          var seconds = moment(diff).format('s');\n\n          _this2.setState({\n            days: days,\n            hours: hours,\n            minutes: minutes,\n            seconds: seconds,\n            difference: diff\n          });\n        } else {// clearInterval(this.interval)\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          days = _this$state.days,\n          hours = _this$state.hours,\n          minutes = _this$state.minutes,\n          seconds = _this$state.seconds;\n      var daysRadius = mapNumber(days, 30, 0, 0, 360);\n      var hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n      var minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n      var secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n      if (!seconds) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsxs(\"h2\", {\n          children: [\" La consultation commancera  \", moment.utc(this.props.now + this.props.difference).calendar(), \" \"]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"countdown-wrapper\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"countdown-item\",\n            children: [/*#__PURE__*/_jsx(SVGCircle, {\n              radius: daysRadius\n            }), Math.floor(days), /*#__PURE__*/_jsx(\"span\", {\n              children: \" jours \"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"countdown-item\",\n            children: [/*#__PURE__*/_jsx(SVGCircle, {\n              radius: hoursRadius\n            }), Math.floor(hours), /*#__PURE__*/_jsx(\"span\", {\n              children: \" heurs \"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"countdown-item\",\n            children: [/*#__PURE__*/_jsx(SVGCircle, {\n              radius: minutesRadius\n            }), Math.floor(minutes), /*#__PURE__*/_jsx(\"span\", {\n              children: \" minutes \"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"countdown-item\",\n            children: [/*#__PURE__*/_jsx(SVGCircle, {\n              radius: secondsRadius\n            }), seconds, /*#__PURE__*/_jsx(\"span\", {\n              children: \" secondes \"\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Countdown;\n}(React.Component);\n\nexport { Countdown as default };\n\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\nvar SVGCircle = function SVGCircle(_ref) {\n  var radius = _ref.radius;\n  return /*#__PURE__*/_jsx(\"svg\", {\n    className: \"countdown-svg\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"none\",\n      stroke: \"#333\",\n      strokeWidth: \"4\",\n      d: describeArc(50, 50, 48, 0, radius)\n    })\n  });\n};\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n  var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n  var d = ['M', start.x, start.y, 'A', radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(' ');\n  return d;\n}","map":null,"metadata":{},"sourceType":"module"}