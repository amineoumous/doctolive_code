{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Config from './../../../EndPoint';\nimport MedecinWidget from './../../../components/MedecinWidget/MedecinWidget';\nimport MapAccess from './../../../components/MedecinWidget/MapAccess';\nimport Search from './../../../components/Search/Search';\nimport { useRouter } from 'next/router';\nimport contentFR from './../../../contentFR';\nimport contentEN from './../../../contentEN';\nimport contentAR from './../../../contentAR';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"./../../../assets/jss/recherchePage.js\";\nconst useStyles = makeStyles(styles);\nexport default function magasin({\n  medecins,\n  locations\n}) {\n  const router = useRouter();\n  const {\n    locale\n  } = router;\n  const content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n  const {\n    0: screenWidth,\n    1: setScreenWidth\n  } = useState(1);\n  const classes = useStyles();\n  useEffect(() => {\n    function updateSize() {\n      setScreenWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => {\n      window.removeEventListener('resize', updateSize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \" DOCTOLIVE - Rechercher m\\xE9decin \"\n      })\n    }), medecins.length > 0 ? /*#__PURE__*/_jsxs(Row, {\n      className: \"content-recherche m-0\",\n      children: [/*#__PURE__*/_jsx(Col, {\n        lg: \"7\",\n        md: \"12\",\n        xs: \"12\",\n        children: !medecins ? null : medecins.map((researched, index) => {\n          return /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(MedecinWidget, {\n              medecin: researched,\n              locale: locale,\n              content: content.resultResearch.widget\n            })\n          }, index);\n        })\n      }), /*#__PURE__*/_jsx(Col, {\n        lg: \"5\",\n        md: \"12\",\n        xs: \"12\",\n        className: \"order-sm-last\",\n        children: /*#__PURE__*/_jsx(MapAccess, {\n          apiKey: Config.apiKey,\n          locations: locations\n        })\n      })]\n    }) : /*#__PURE__*/_jsx(\"div\", {\n      className: \" \",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \" m-0\",\n        children: /*#__PURE__*/_jsx(\"section\", {\n          className: classes.header,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: classes.bakgroudContainer,\n            style: locale === \"ar\" ? {\n              backgroundImage: `url(/image/search.svg)`,\n              backgroundPosition: \"bottom left\",\n              textAlign: \"right\"\n            } : {\n              backgroundImage: `url(/image/search.svg)`,\n              backgroundPosition: \"85% 75%\"\n            },\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"container-fluid\",\n              id: \"recherche-medecin\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxs(\"h1\", {\n                  className: classes.h1,\n                  children: [\"  \", content.resultResearch.noReseault, \" \"]\n                }), /*#__PURE__*/_jsxs(\"h2\", {\n                  className: classes.h2,\n                  children: [\" \", content.heading2, \" \"]\n                })]\n              }), /*#__PURE__*/_jsx(Search, {\n                content: content.resultResearch,\n                locale: locale\n              })]\n            })\n          })\n        })\n      })\n    })]\n  });\n}\nexport async function getServerSideProps(context) {\n  const res = await fetch(`${Config.BACKEND_URL}/medecin/${context.params.specialite}/${context.params.ville}`);\n  const data = await res.json();\n\n  if (data.error) {\n    return {\n      // props: {medecins: data.medecins, locations: data.medecins.map((medecin) => medecin.adress)},\n      props: {\n        medecins: [],\n        locations: []\n      }\n    };\n  }\n\n  return {\n    props: {\n      medecins: data.medecins,\n      locations: data.medecins.map(medecin => medecin.adress)\n    } //   props: {medecins: [], locations: []},\n\n  };\n}","map":null,"metadata":{},"sourceType":"module"}