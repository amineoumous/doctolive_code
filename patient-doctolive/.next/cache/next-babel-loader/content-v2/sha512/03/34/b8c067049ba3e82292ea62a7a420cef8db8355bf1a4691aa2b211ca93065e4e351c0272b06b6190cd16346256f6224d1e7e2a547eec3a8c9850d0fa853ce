{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport Link from 'next/link';\nimport Config from './../../../EndPoint';\nimport moment from 'moment';\nimport Button from './../../../components/CustomButtons/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { BsX, BsFillCameraVideoFill } from 'react-icons/bs';\nimport { MdUpdate } from 'react-icons/md';\nimport { useAuth } from './../../../context/AuthContext';\nimport { useRouter } from 'next/router';\nimport MapAccess from './../../../components/MedecinWidget/MapAccess';\nimport CalendarAvailability from './../../../components/MedecinWidget/CalendarAvailability';\nimport contentFR from './../../../contentFR';\nimport contentEN from './../../../contentEN';\nimport contentAR from './../../../contentAR';\nconst Transition = /*#__PURE__*/React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/_jsx(Slide, _objectSpread({\n    direction: \"up\",\n    ref: ref\n  }, props));\n});\n\nfunction CardAppointment({\n  consultation,\n  app_id,\n  content\n}) {\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: app_id == consultation.id ? \"card selected\" : \"card\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxs(\"h2\", {\n          children: [\" \", moment(consultation.date + consultation.time, 'YYYY/MM/DDHH:mm').calendar()]\n        }), consultation.teleconsultation ? /*#__PURE__*/_jsx(BsFillCameraVideoFill, {}) : null]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"card-body d-flex\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"doctor-img\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: consultation.medecin.image ? `${Config.BACKEND_URL}/${consultation.medecin.image}` : \"/image/medecin/homme.jpg\",\n              className: \"img-fluid\",\n              alt: \"User Image\"\n            })\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"doc-info-cont\",\n          children: [/*#__PURE__*/_jsxs(\"h4\", {\n            children: [\"  \", consultation.title, \" \"]\n          }), /*#__PURE__*/_jsx(\"h5\", {\n            className: \"doc-name\",\n            children: /*#__PURE__*/_jsxs(\"a\", {\n              href: `/doctor/${consultation.medecin.id}`,\n              children: [\"Dr. \", `${consultation.medecin.nom} ${consultation.medecin.prenom}`]\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"card-action justify-content-center\",\n        children: /*#__PURE__*/_jsx(Link, {\n          href: `/account/appointments?app_id=${consultation.id}`,\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            className: \"link btn btn-primary\",\n            children: [\" \", content.appointments.cardApps.link, \" \"]\n          })\n        })\n      })]\n    })\n  });\n}\n\nexport default function Appointments() {\n  const {\n    0: consultations,\n    1: setConsultations\n  } = useState([]);\n  const {\n    0: consultation,\n    1: setConsultation\n  } = useState();\n  const router = useRouter();\n  const {\n    locale\n  } = router;\n  const content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n  const {\n    app_id\n  } = router.query;\n  const {\n    userData\n  } = useAuth();\n  console.log(userData);\n  useEffect(() => {\n    if (app_id) {\n      fetch(`${Config.BACKEND_URL}/consultation/${app_id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `token ${userData.token}`\n        }\n      }).then(r => r.json().then(res => {\n        if (!res.error) {\n          setConsultation(res.consultation);\n        }\n      }).catch(error => {})).catch(error => {});\n    } else {\n      setConsultation();\n    }\n\n    return () => {};\n  }, [app_id]);\n  useEffect(async () => {\n    if (!userData.token) return router.push('account/new');\n    const res = await fetch(`${Config.BACKEND_URL}/patient/appointments/venir`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `token ${userData.token}`\n      }\n    });\n    const data = await res.json();\n    setConsultations(data.consultations);\n    return () => {};\n  }, []);\n\n  const handleCanceledApp = id => {\n    let index = consultations.findIndex(cns => cns.id === id);\n\n    if (index > -1) {\n      setConsultations(old => {\n        let cloneOld = [...old];\n        cloneOld.splice(index, 1);\n        return cloneOld;\n      });\n    }\n  };\n\n  const handleUpdatedApp = (id, consultation) => {\n    let index = consultations.findIndex(cns => cns.id === id);\n\n    if (index > -1) {\n      setConsultations(old => {\n        let cloneOld = [...old];\n        cloneOld[index] = consultation;\n        return cloneOld;\n      });\n    }\n  };\n\n  if (!consultations) return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"container section-content\",\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      className: \"text-center\",\n      children: \"  \"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"text-center\"\n    })]\n  });\n\n  if (consultations.length === 0) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"container section-content\",\n      children: [/*#__PURE__*/_jsxs(\"h1\", {\n        className: \"text-center\",\n        children: [\" \", content.appointments.myapp, \" \"]\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        className: \"text-center\",\n        children: [\" \", content.appointments.noApp, \" \"]\n      }), /*#__PURE__*/_jsx(Row, {\n        className: \"m-0 justify-content-center\",\n        children: /*#__PURE__*/_jsx(Link, {\n          href: `/account/appointments/historique`,\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            className: \"link black\",\n            children: [\" \", content.appointments.history, \"  \"]\n          })\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            className: \"link btn btn-primary\",\n            children: [\" \", content.appointments.takeapp, \"  \"]\n          })\n        })\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"section-content-app\",\n    children: [/*#__PURE__*/_jsx(Row, {\n      className: \"m-5 justify-content-center\",\n      children: /*#__PURE__*/_jsxs(\"h3\", {\n        children: [\" \", content.appointments.myapp, \" \"]\n      })\n    }), /*#__PURE__*/_jsx(Row, {\n      className: \"m-0 justify-content-center\",\n      children: /*#__PURE__*/_jsx(Link, {\n        href: `/account/appointments/historique`,\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          className: \"link black\",\n          children: [\" \", content.appointments.history, \" \"]\n        })\n      })\n    }), /*#__PURE__*/_jsxs(Row, {\n      className: \"m-0\",\n      children: [/*#__PURE__*/_jsx(Col, {\n        lg: \"3\",\n        className: \"apointements-left\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"patient-appointments\",\n          children: consultations.map((consultation, index) => {\n            return /*#__PURE__*/_jsx(Row, {\n              className: \"justify-content-center patient-appointment m-0\",\n              children: /*#__PURE__*/_jsx(CardAppointment, {\n                content: content,\n                consultation: consultation,\n                handleUpdatedApp: handleUpdatedApp,\n                handleCanceledApp: handleCanceledApp,\n                app_id: app_id\n              })\n            }, index);\n          })\n        })\n      }), /*#__PURE__*/_jsx(Col, {\n        lg: \"9\",\n        children: !consultation ? null : /*#__PURE__*/_jsx(Row, {\n          className: \"justify-content-center patient-appointment m-0\",\n          children: /*#__PURE__*/_jsx(CardDetailsAppointment, {\n            content: content,\n            consultation: consultation,\n            handleUpdatedApp: handleUpdatedApp,\n            handleCanceledApp: handleCanceledApp\n          })\n        })\n      })]\n    })]\n  });\n}\n\nfunction CardDetailsAppointment({\n  consultation,\n  handleCanceledApp,\n  content,\n  handleUpdatedApp\n}) {\n  var _consultation$medecin, _consultation$medecin2, _consultation$medecin3, _consultation$medecin4;\n\n  const {\n    userData\n  } = useAuth();\n  const {\n    0: ShowonfirmCancel,\n    1: setConfirmCancel\n  } = useState(false);\n  const {\n    0: ShowonfirmUpdate,\n    1: setConfirmUpdate\n  } = useState(false);\n  const {\n    0: selectedHour,\n    1: setSelectedHour\n  } = useState();\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState();\n\n  const setDetails = (day, hour) => {\n    setSelectedDate(day);\n    setSelectedHour(hour);\n  };\n\n  const cancelAppointement = () => {\n    fetch(`${Config.BACKEND_URL}/consultation/cancel/${consultation.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `token ${userData.token}`\n      },\n      body: JSON.stringify({})\n    }).then(r => r.json().then(res => {\n      if (!res.error) {\n        setConfirmCancel(false);\n        handleCanceledApp(consultation.id);\n      } else {\n        if (res.validator) {} else {}\n      }\n    })).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const validateTime = () => {\n    fetch(`${Config.BACKEND_URL}/consultation/deplacer/${consultation.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `token ${userData.token}`\n      },\n      body: JSON.stringify({\n        date: selectedDate,\n        time: selectedHour\n      })\n    }).then(r => r.json().then(res => {\n      if (!res.error) {\n        setConfirmUpdate(false);\n        handleUpdatedApp(consultation.id, res.consultation);\n      } else {\n        if (res.validator) {} else {}\n      }\n    })).catch(error => {\n      console.log(error); // setResponse({sending: false, success:false, donneIncorecte:true})\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxs(\"h2\", {\n          children: [\" \", moment(consultation.date + consultation.time, 'YYYY/MM/DDHH:mm').calendar()]\n        }), consultation.teleconsultation ? /*#__PURE__*/_jsx(BsFillCameraVideoFill, {}) : null]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(Col, {\n            lg: \"7\",\n            md: \"12\",\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxs(Row, {\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"doctor-img\",\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  children: /*#__PURE__*/_jsx(\"img\", {\n                    src: consultation.medecin.image ? `${Config.BACKEND_URL}/${consultation.medecin.image}` : \"/image/medecin/homme.jpg\",\n                    className: \"img-fluid\",\n                    alt: \"User Image\"\n                  })\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"doc-info-cont\",\n                children: [/*#__PURE__*/_jsxs(\"h4\", {\n                  children: [\"  \", consultation.title, \" \"]\n                }), /*#__PURE__*/_jsx(\"h5\", {\n                  className: \"doc-name\",\n                  children: /*#__PURE__*/_jsxs(\"a\", {\n                    href: `/doctor/${consultation.medecin.id}`,\n                    children: [\"Dr. \", `${consultation.medecin.nom} ${consultation.medecin.prenom}`]\n                  })\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"doc-info-cont ml-5\",\n                children: /*#__PURE__*/_jsxs(\"ul\", {\n                  className: \"contacts\",\n                  children: [/*#__PURE__*/_jsxs(\"li\", {\n                    children: [/*#__PURE__*/_jsxs(\"h6\", {\n                      children: [\" \", content.appointments.cardApp.accessInfos, \"   \"]\n                    }), !consultation.medecin.adress ? \"Vous n'avez pas encore spécifier vos information d'accés\" : (consultation.medecin.adress.streetName ? consultation.medecin.adress.streetName : \"\") + \" \" + (consultation.medecin.adress.buildingName ? consultation.medecin.adress.buildingName : \"\") + \" \" + (consultation.medecin.adress.floor ? \"étage \" + consultation.medecin.adress.floor : \"\") + \" \" + (consultation.medecin.adress.sector ? consultation.medecin.adress.sector : \"\") + \", \" + (consultation.medecin.adress.codePostal ? consultation.medecin.adress.codePostal : \"\") + \" - \" + (consultation.medecin.city ? consultation.medecin.city.name : \"\")]\n                  }), /*#__PURE__*/_jsxs(\"li\", {\n                    children: [/*#__PURE__*/_jsxs(\"h6\", {\n                      children: [\" \", content.appointments.cardApp.secretariat, \" \"]\n                    }), consultation.medecin.phone, \" \"]\n                  })]\n                })\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"5\",\n            md: \"12\",\n            xs: \"12\",\n            className: \"order-sm-last\",\n            children: /*#__PURE__*/_jsx(MapAccess, {\n              apiKey: Config.apiKey,\n              locations: [{\n                latitude: consultation === null || consultation === void 0 ? void 0 : (_consultation$medecin = consultation.medecin) === null || _consultation$medecin === void 0 ? void 0 : (_consultation$medecin2 = _consultation$medecin.adress) === null || _consultation$medecin2 === void 0 ? void 0 : _consultation$medecin2.latitude,\n                longitude: consultation === null || consultation === void 0 ? void 0 : (_consultation$medecin3 = consultation.medecin) === null || _consultation$medecin3 === void 0 ? void 0 : (_consultation$medecin4 = _consultation$medecin3.adress) === null || _consultation$medecin4 === void 0 ? void 0 : _consultation$medecin4.longitude\n              }]\n            })\n          })]\n        }), !consultation.teleconsultation ? null : /*#__PURE__*/_jsxs(Row, {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsx(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"  \", content.appointments.cardApp.click, \" \"]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsx(Link, {\n              href: `/consultation/${consultation.id}`,\n              children: /*#__PURE__*/_jsxs(\"a\", {\n                className: \"link btn btn-primary\",\n                children: [\" \", content.appointments.cardApp.rejoindre, \" \"]\n              })\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"card-action\",\n        children: [/*#__PURE__*/_jsxs(Button, {\n          onClick: () => setConfirmUpdate(true),\n          color: \"transparent\",\n          children: [\" \", /*#__PURE__*/_jsx(MdUpdate, {}), \" \", content.appointments.cardApp.deplacer, \" \"]\n        }), /*#__PURE__*/_jsxs(Button, {\n          color: \"transparent\",\n          onClick: () => setConfirmCancel(true),\n          style: {\n            color: \"#f1000f\"\n          },\n          children: [\" \", /*#__PURE__*/_jsx(BsX, {\n            size: \"32px\"\n          }), \" \", content.appointments.cardApp.annuler, \" \"]\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(Dialog, {\n      open: ShowonfirmCancel,\n      maxWidth: \"lg\" // fullWidth={true}\n      ,\n      TransitionComponent: Transition,\n      keepMounted: false,\n      onClose: () => setConfirmCancel(false),\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxs(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: [\" \", content.appointments.cardApp.confirmCancel, \"  \"]\n      }), /*#__PURE__*/_jsxs(DialogContent, {\n        children: [content.appointments.cardApp.wantYou, \"  \", moment(consultation.date + consultation.time, 'YYYY/MM/DDHH:mm').calendar(), \" \", content.appointments.cardApp.with, \" Dr. \", `${consultation.medecin.nom} ${consultation.medecin.prenom}`]\n      }), /*#__PURE__*/_jsxs(DialogActions, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: () => setConfirmCancel(false),\n          color: \"transparent\",\n          children: content.appointments.cardApp.retour\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: cancelAppointement,\n          color: \"danger\",\n          children: content.appointments.cardApp.annuler\n        })]\n      })]\n    }), !ShowonfirmUpdate ? null : /*#__PURE__*/_jsxs(Dialog, {\n      open: ShowonfirmUpdate,\n      maxWidth: \"lg\",\n      TransitionComponent: Transition,\n      keepMounted: true,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxs(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: [\" \", content.appointments.cardApp.docAvai, \" \"]\n      }), /*#__PURE__*/_jsx(DialogContent, {\n        children: /*#__PURE__*/_jsx(CalendarAvailability, {\n          showDisponibilite: consultation.medecin,\n          setSelectedHour: setDetails\n        })\n      }), /*#__PURE__*/_jsxs(DialogActions, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          children: !selectedHour && !selectedDate ? null : content.appointments.cardApp.selecTtime + \" : \" + moment(selectedDate + selectedHour, 'YYYY/MM/DDHH:mm').calendar()\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(Button, {\n            onClick: () => {\n              setConfirmUpdate(false);\n            },\n            color: \"transparent\",\n            children: content.appointments.cardApp.retour\n          }), /*#__PURE__*/_jsx(Button, {\n            disabled: !selectedHour,\n            onClick: validateTime,\n            color: \"primary\",\n            children: content.appointments.cardApp.confirm\n          })]\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}