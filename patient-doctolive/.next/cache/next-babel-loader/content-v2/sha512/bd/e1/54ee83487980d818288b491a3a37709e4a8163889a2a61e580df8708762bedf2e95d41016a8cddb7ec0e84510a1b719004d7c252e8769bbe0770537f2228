{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// src/context/state.js\nimport { createContext, useContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { useRouter } from 'next/router';\nimport Button from './../components/CustomButtons/Button';\nimport contentFR from './../contentFR';\nimport contentEN from './../contentEN';\nimport contentAR from './../contentAR'; // @material-ui/icons\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\nimport Config from './../EndPoint';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nvar AppContext = /*#__PURE__*/createContext();\nexport function AuthWrapper(_ref) {\n  var children = _ref.children;\n  var existinguserData = Cookies.get(\"patientData\");\n  existinguserData = existinguserData != undefined ? JSON.parse(existinguserData) : {};\n  var router = useRouter();\n  var locale = router.locale;\n  var content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n\n  var _useState = useState(existinguserData),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  var _useState2 = useState(false),\n      addedByAdmin = _useState2[0],\n      setAddedByAdmin = _useState2[1];\n\n  var _useState3 = useState({\n    password_confirmation: \"\",\n    password: \"\",\n    old_password: \"\"\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var setUser = function setUser(data) {\n    if (!data.token) {\n      Cookies.set('patientData', {}, {\n        expires: -1000\n      });\n      setUserData({\n        isAuth: false\n      });\n      return router.push({\n        pathname: \"/account/new\"\n      });\n    } else {\n      setAddedByAdmin(data.user.addedByAdmin && !data.user.passwordChanged);\n      Cookies.set('patientData', JSON.stringify(data));\n      Cookies.set('token', data.token);\n      setUserData(data);\n    }\n  };\n\n  useEffect(function () {\n    if (userData.token) {\n      setAddedByAdmin(userData.user.addedByAdmin && !userData.user.passwordChanged);\n      fetch(\"\".concat(Config.BACKEND_URL, \"/patient/verify\"), {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"token \".concat(userData.token)\n        }\n      }).then(function (r) {\n        return r.json().then(function (res) {\n          if (!res.error) {// setUserData(existinguserData);\n          } else {\n            setUserData({\n              isAuth: false\n            });\n          }\n        });\n      })[\"catch\"](function (error) {\n        setUserData({\n          isAuth: false\n        });\n      });\n    }\n\n    return function () {};\n  }, []);\n\n  var handleConfirmation = function handleConfirmation() {\n    var testPass = state.password.trimStart();\n\n    if (testPass.length > 6) {\n      var data = {\n        password: state.password,\n        password_confirmation: state.password_confirmation,\n        old_password: state.old_password,\n        email: userData.user.email\n      };\n      fetch(\"\".concat(Config.BACKEND_URL, \"/patient/new-password\"), {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"token \".concat(userData.token)\n        }\n      }).then(function (res) {\n        console.log(res);\n        setAddedByAdmin(false);\n        setUserData(res.data.updatePatient);\n      })[\"catch\"](function (err) {\n        console.log(err.response);\n      });\n    }\n  };\n\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n        value = _ref2$target.value,\n        name = _ref2$target.name;\n    setState(function (old) {\n      return _objectSpread(_objectSpread({}, old), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(AppContext.Provider, {\n    value: {\n      userData: userData,\n      setUser: setUser\n    },\n    children: [children, /*#__PURE__*/_jsxs(Dialog // open={false}\n    , {\n      open: addedByAdmin,\n      onClose: function onClose() {},\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsx(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \" Renouveler le mot de passe \"\n      }), /*#__PURE__*/_jsxs(DialogContent, {\n        children: [/*#__PURE__*/_jsx(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Ce compte \\xE0 tait cr\\xE9er avec un administrateur, alors ce mot de passe \\xE0 \\xE9tait g\\xE9n\\xE9rer d'une mani\\xE9re al\\xE9atoir. On vous recomande de saisir un nouveau mot de passe pour la scuit\\xE9 de vos information.\"\n        }), /*#__PURE__*/_jsxs(FormControl, {\n          className: \"mt-3\",\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxs(InputLabel, {\n            htmlFor: \"standard-adornment-password\",\n            children: [\" \", content[\"new\"].oldpassLabel, \" \"]\n          }), /*#__PURE__*/_jsx(OutlinedInput, {\n            id: \"standard-adornment-password\",\n            type: state.showPassword ? 'text' : 'password',\n            value: state.old_password,\n            onChange: handleChange,\n            required: true,\n            label: content[\"new\"].oldpassLabel,\n            name: \"old_password\",\n            endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsx(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return setState(function (old) {\n                    return _objectSpread(_objectSpread({}, old), {}, {\n                      showPassword: !state.showPassword\n                    });\n                  });\n                },\n                children: state.showPassword ? /*#__PURE__*/_jsx(MdVisibility, {}) : /*#__PURE__*/_jsx(MdVisibilityOff, {})\n              })\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(FormControl, {\n          className: \"mt-3\",\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxs(InputLabel, {\n            htmlFor: \"standard-adornment-password\",\n            children: [\" \", content[\"new\"].passLabel, \" \"]\n          }), /*#__PURE__*/_jsx(OutlinedInput, {\n            id: \"standard-adornment-password\",\n            type: state.showPassword ? 'text' : 'password',\n            value: state.password,\n            onChange: handleChange,\n            required: true,\n            label: content[\"new\"].passLabel,\n            name: \"password\",\n            endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsx(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return setState(function (old) {\n                    return _objectSpread(_objectSpread({}, old), {}, {\n                      showPassword: !state.showPassword\n                    });\n                  });\n                },\n                children: state.showPassword ? /*#__PURE__*/_jsx(MdVisibility, {}) : /*#__PURE__*/_jsx(MdVisibilityOff, {})\n              })\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(FormControl, {\n          className: \"mt-3\",\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxs(InputLabel, {\n            htmlFor: \"standard-adornment-password\",\n            children: [\" \", content[\"new\"].confirmpassLabel, \" \"]\n          }), /*#__PURE__*/_jsx(OutlinedInput, {\n            id: \"standard-adornment-password\",\n            type: state.showPassword ? 'text' : 'password',\n            value: state.password_confirmation,\n            onChange: handleChange,\n            required: true,\n            label: content[\"new\"].confirmpassLabel,\n            name: \"password_confirmation\",\n            endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsx(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return setState(function (old) {\n                    return _objectSpread(_objectSpread({}, old), {}, {\n                      showPassword: !state.showPassword\n                    });\n                  });\n                },\n                children: state.showPassword ? /*#__PURE__*/_jsx(MdVisibility, {}) : /*#__PURE__*/_jsx(MdVisibilityOff, {})\n              })\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(DialogActions, {\n        children: /*#__PURE__*/_jsx(Button, {\n          onClick: handleConfirmation,\n          color: \"danger\",\n          children: \"Confirmer\"\n        })\n      })]\n    })]\n  });\n}\nexport function useAuth() {\n  return useContext(AppContext);\n}","map":null,"metadata":{},"sourceType":"module"}