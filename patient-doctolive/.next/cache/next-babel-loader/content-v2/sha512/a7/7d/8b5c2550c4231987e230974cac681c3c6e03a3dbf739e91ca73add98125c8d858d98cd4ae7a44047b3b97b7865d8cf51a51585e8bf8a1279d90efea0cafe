{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport { Divider } from '@material-ui/core';\nimport Config from './../../EndPoint';\nimport { useAuth } from './../../context/AuthContext';\nexport default function CalendarAvailability(props) {\n  var _useState = useState(moment()),\n      startDate = _useState[0],\n      setStartDate = _useState[1];\n\n  var _useState2 = useState([]),\n      calandar = _useState2[0],\n      setMedecinCalendar = _useState2[1];\n\n  var _useAuth = useAuth(),\n      userData = _useAuth.userData;\n\n  var selectHour = function selectHour(day, hour, disable) {\n    console.log(hour);\n\n    if (disable) {//    this.setState({ error: true, expired:true, message: 'ce moment est indisponible' })\n      //    setTimeout(() => {\n      //        this.setState({expired: false})\n      //    }, 5000);\n    } else {\n      props.setSelectedHour(day.format('YYYY/MM/DD'), hour);\n    }\n  };\n\n  var changeDate = function changeDate(direction) {\n    if (direction === 'next') {\n      setStartDate(moment(startDate).add(7, 'days'));\n    } else {\n      if (moment(startDate).isAfter(moment())) {\n        setStartDate(moment(startDate).subtract(7, 'days')); //    this.setState({ startDate: moment(this.state.startDate).subtract(7, 'days') })\n      }\n    }\n  };\n\n  var createHoursSoir = function createHoursSoir(day) {\n    var disponibiliteDay = props.showDisponibilite.horaires.find(function (h) {\n      return h.jour === day.format('dddd');\n    });\n    if (!disponibiliteDay) return [];\n    var table = [];\n    var endHour = moment(disponibiliteDay.fin_soir, 'HH:mm:ss');\n    var hour = moment(disponibiliteDay.debut_soir, 'HH:mm:ss');\n    var i = 0;\n\n    var _loop = function _loop() {\n      var element = undefined;\n\n      if (calandar) {\n        // element = calandar.find( e => moment.utc(e.date).format('HH:mm') === hour)\n        element = calandar.find(function (e) {\n          // return moment(e.date).isSame(day.format('YYYY-MM-DDT') + hour.format('HH:mm')+\":00.000Z\", \"minutes\")\n          return e.time === hour.format('HH:mm:ss') && day.format('YYYY-MM-DD') === e.date;\n        });\n      }\n\n      var HourInTheDay = moment(moment(day).format('YYYY/MM/DD') + hour.format('HH:mm'), 'YYYY/MM/DDHH:mm');\n      var isDisabled = element !== undefined || moment().isAfter(HourInTheDay);\n      var cloneHour = hour.format('HH:mm');\n      var hourDiv = !isDisabled ? /*#__PURE__*/_jsx(\"div\", {\n        disabled: isDisabled,\n        className: isDisabled ? \"cell hours-element disabled\" : \"cell hours-element\",\n        onClick: function onClick() {\n          return selectHour(day, cloneHour, isDisabled);\n        },\n        children: /*#__PURE__*/_jsxs(\"span\", {\n          className: \"hour\",\n          children: [\" \", hour.format('HH:mm'), \" \"]\n        })\n      }, i) : /*#__PURE__*/_jsxs(\"div\", {\n        className: \" hours-element-disabled\",\n        children: [\" \", /*#__PURE__*/_jsx(\"div\", {\n          className: \"hour-empty\",\n          children: \" \"\n        }), \" \"]\n      }, i);\n      table.push(hourDiv);\n      i++;\n      hour = hour.add(disponibiliteDay.duree, 'minutes');\n    };\n\n    while (hour.isBefore(endHour) && i < 100) {\n      _loop();\n    }\n\n    return table;\n  };\n\n  var createHoursMatin = function createHoursMatin(day) {\n    var disponibiliteDay = props.showDisponibilite.horaires.find(function (h) {\n      return h.jour === day.lang(\"fr\").format('dddd');\n    });\n    if (!disponibiliteDay) return [];\n    var table = [];\n    var endHour = moment(disponibiliteDay.fin_matin, 'HH:mm:ss');\n    var hour = moment(disponibiliteDay.debut_matin, 'HH:mm:ss');\n    var i = 0;\n\n    var _loop2 = function _loop2() {\n      var element = undefined;\n\n      if (calandar) {\n        element = calandar.find(function (e) {\n          return e.time === hour.format('HH:mm:ss') && day.format('YYYY-MM-DD') === e.date;\n        });\n      }\n\n      var HourInTheDay = moment(moment(day).format('YYYY/MM/DD') + hour, 'YYYY/MM/DDHH:mm');\n      var cloneHour = hour.format('HH:mm');\n      var isDisabled = element !== undefined || moment().isAfter(HourInTheDay);\n      var hourDiv = !isDisabled ? /*#__PURE__*/_jsx(\"div\", {\n        disabled: isDisabled,\n        className: isDisabled ? \"cell hours-element disabled\" : \"cell hours-element\",\n        onClick: function onClick() {\n          return selectHour(day, cloneHour, isDisabled);\n        },\n        children: /*#__PURE__*/_jsxs(\"span\", {\n          className: \"hour\",\n          children: [hour.format('HH:mm'), \"  \"]\n        })\n      }, i) : /*#__PURE__*/_jsxs(\"div\", {\n        className: \" hours-element-disabled\",\n        children: [\" \", /*#__PURE__*/_jsx(\"div\", {\n          className: \"hour-empty\",\n          children: \" \"\n        }), \" \"]\n      }, i);\n      table.push(hourDiv);\n      i++;\n      hour = hour.add(disponibiliteDay.duree, 'minutes');\n    };\n\n    while (hour.isBefore(endHour) && i < 100) {\n      _loop2();\n    }\n\n    return table;\n  };\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(Config.BACKEND_URL, \"/consultation/medecin-calendar/\").concat(props.showDisponibilite.id, \"/\").concat(startDate), {\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': \"token \".concat(userData.token)\n              }\n            });\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            setMedecinCalendar(data.medecinCalendar);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [startDate]);\n\n  var createCalendar = function createCalendar() {\n    var table = [];\n\n    for (var i = 0; i <= 6; i++) {\n      var date = moment(startDate).add(i, 'days');\n\n      var dayAvailability = /*#__PURE__*/_jsxs(\"div\", {\n        className: \"calendar-day\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"calendar-day-title\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"cell-content\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"calendar-day-name\",\n              children: [date.format('dddd'), \" \"]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"calendar-day-date\",\n              children: date.format('D') + \" \" + date.format(\"MMM\")\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [createHoursMatin(date), /*#__PURE__*/_jsx(Divider, {}), createHoursSoir(date)]\n        })]\n      }, i);\n\n      table.push(dayAvailability);\n    }\n\n    return table;\n  };\n\n  return /*#__PURE__*/_jsx(\"section\", {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"date-range-calendar\",\n      style: props.locale === \"ar\" ? {\n        direction: \"rtl\",\n        textAlign: \"right\"\n      } : {\n        direction: \"ltr\"\n      },\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"range-calendar\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"calendar-pagination\",\n          children: /*#__PURE__*/_jsxs(\"button\", {\n            className: \"\",\n            id: \"date-range-preview\",\n            onClick: function onClick() {\n              return changeDate('preview');\n            },\n            children: [\"  \", props.locale === \"ar\" ? /*#__PURE__*/_jsx(MdChevronRight, {}) : /*#__PURE__*/_jsx(MdChevronLeft, {}), \"  \"]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"calendar\",\n          children: props.showDisponibilite ? createCalendar() : null\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"calendar-pagination\",\n          children: /*#__PURE__*/_jsxs(\"button\", {\n            className: \"\",\n            id: \"date-range-next\",\n            onClick: function onClick() {\n              return changeDate('next');\n            },\n            children: [\"  \", props.locale === \"ar\" ? /*#__PURE__*/_jsx(MdChevronLeft, {}) : /*#__PURE__*/_jsx(MdChevronRight, {}), \" \"]\n          })\n        })]\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}