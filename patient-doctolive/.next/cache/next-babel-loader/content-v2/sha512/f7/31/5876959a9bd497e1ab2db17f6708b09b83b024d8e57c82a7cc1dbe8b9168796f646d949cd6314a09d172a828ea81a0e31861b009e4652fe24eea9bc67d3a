{"ast":null,"code":"var MomentLangue = {\n  fr: {\n    invalidDate: \"Date non précisée\",\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY à HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'LLL'\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'quelques secondes',\n      m: 'une minute',\n      mm: '%d minutes',\n      h: 'une heure',\n      hh: '%d heures',\n      d: 'un jour',\n      dd: '%d jours',\n      M: 'un mois',\n      MM: '%d mois',\n      y: 'un an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal: function ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM: function isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem: function meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // Used to determine first week of the year.\n\n    }\n  },\n  ma: {\n    invalidDate: \"تاريخ غير محدد\",\n    months: [\"يناير\", \"فبراير\", \"مارس\", \"ابريل\", \"مايو\", \"يونيو\", \"يوليو\", \"أغسطس\", \"سبتمبر\", \"أكتوبر\", \"نوفمبر\", \"ديسمبر\"],\n    monthsShort: [\"يناير\", \"فبراير\", \"مارس\", \"ابريل\", \"مايو\", \"يونيو\", \"يوليو\", \"أغسطس\", \"سبتمبر\", \"أكتوبر\", \"نوفمبر\", \"ديسمبر\"],\n    monthsParseExact: true,\n    weekdays: [\"َالأَحَدِ\", \"الاثْنَيْنِ\", \"الثُّلاَثَاءِ\", \"الأَرْبِعَاءِ\", \"الْخَمِيسِ\", \"الْجُمُعَةِ\", \"السَّبْتِ\"],\n    weekdaysShort: [\"َالأَحَدِ\", \"الاثْنَيْنِ\", \"الثُّلاَثَاءِ\", \"الأَرْبِعَاءِ\", \"الْخَمِيسِ\", \"الْجُمُعَةِ\", \"السَّبْتِ\"],\n    weekdaysMin: [\"َالأَحَدِ\", \"الاثْنَيْنِ\", \"الثُّلاَثَاءِ\", \"الأَرْبِعَاءِ\", \"الْخَمِيسِ\", \"الْجُمُعَةِ\", \"السَّبْتِ\"],\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'dddd D MMMM YYYY على الساعة HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[اليوم على الساعة] LT',\n      nextDay: '[غدا على الساعة] LT',\n      nextWeek: 'dddd [على الساعة] LT',\n      lastDay: '[الامس على الساعة] LT',\n      lastWeek: 'dddd [الماضي على الساعة] LT',\n      sameElse: 'LLL'\n    },\n    relativeTime: {\n      future: 'خلال %s',\n      past: 'قبل %s',\n      s: 'غضون ثواني',\n      m: 'دقيقة',\n      mm: '%d دقائق',\n      h: 'ساعة',\n      hh: '%d ساعات',\n      d: 'يوم',\n      dd: '%d أَيَّام',\n      M: 'أَيَّام',\n      MM: '%d شهور',\n      y: 'سنة',\n      yy: '%d سنوات'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal: function ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM: function isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem: function meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // Used to determine first week of the year.\n\n    }\n  },\n  en: {\n    invalidDate: \"Invalide date\",\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_')\n  }\n};\nexport default MomentLangue;","map":null,"metadata":{},"sourceType":"module"}