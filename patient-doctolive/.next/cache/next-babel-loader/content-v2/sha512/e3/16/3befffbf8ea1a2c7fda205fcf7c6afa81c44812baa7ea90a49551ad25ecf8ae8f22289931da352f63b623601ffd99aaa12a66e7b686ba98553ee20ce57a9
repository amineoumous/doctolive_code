{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Button, TextField, FormControlLabel, Checkbox, Box, Typography, Container } from '@material-ui/core';\nimport Config from './../EndPoint';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from 'next/router';\nimport contentFR from './../contentFR';\nimport contentEN from './../contentEN';\nimport contentAR from './../contentAR';\nimport { Row, Collapse, Alert } from 'react-bootstrap';\nconst useOutlinedInputStyles = makeStyles(theme => ({\n  root: {\n    \"& $notchedOutline\": {\n      borderColor: \"#38869C\",\n      borderWidth: \"2px !important\"\n    },\n    \"&:hover $notchedOutline\": {\n      borderColor: \"#38869C\",\n      borderWidth: \"2px !important\"\n    },\n    \"&$focused $notchedOutline\": {\n      borderColor: \"#38869C\",\n      borderWidth: \"2px !important\"\n    }\n  },\n  focused: {},\n  notchedOutline: {}\n}));\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  textField: {\n    borderRadius: 13,\n    borderColor: \"#38869C\",\n    color: \"#61788E\"\n  },\n  text_info: {\n    color: \"#61788E\",\n    fontSize: 14,\n    fontWeight: 500\n  },\n  notchedOutline: {\n    borderColor: '#38869C !important',\n    borderWidth: \"2px !important\"\n  }\n}));\nexport default function AuthForm(props) {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    locale\n  } = router;\n  const content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: messageError,\n    1: setErrorMessage\n  } = useState(\"Information incorrect\");\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    sending: false,\n    success: false,\n    donneIncorecte: false\n  });\n\n  const validateField = e => {\n    if (e.target.name === \"email\") {\n      let re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      let emailErr = !re.test(String(email).toLowerCase());\n      setEmailError(emailErr);\n    } else if (e.target.name === \"password\") {\n      let passwordLeng = password.length;\n      setPasswordError(passwordLeng < 8);\n    }\n  };\n\n  const submiting = e => {\n    e.preventDefault();\n    setResponse(old => {\n      return _objectSpread(_objectSpread({}, old), {}, {\n        sending: true\n      });\n    });\n    alert(\"jj\");\n\n    if (!emailError && !passwordError) {\n      alert(\"jj1\");\n      let data = {\n        email,\n        password\n      };\n      fetch(`${Config.BACKEND_URL}/patient/auth`, {\n        method: \"post\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(_objectSpread({}, data))\n      }).then(r => r.json().then(res => {\n        console.log(res);\n\n        if (!res.error) {\n          props.submiting(res);\n          setResponse({\n            sending: false,\n            success: true,\n            donneIncorecte: false\n          });\n        } else {\n          setResponse({\n            sending: false,\n            success: false,\n            donneIncorecte: true\n          });\n\n          if (res.validator) {} else {\n            setErrorMessage(res.message);\n          }\n        }\n      }).catch(e => {\n        console.log(e.response);\n        setResponse({\n          sending: false,\n          success: false,\n          donneIncorecte: true\n        });\n\n        if (e.response.data.error) {\n          setErrorMessage(e.response.data.message);\n        } else {\n          setErrorMessage(\"Une éreur inconue est survenue\");\n        }\n      })).catch(e => {\n        console.log(e.response);\n        setResponse({\n          sending: false,\n          success: false,\n          donneIncorecte: true\n        });\n\n        if (e.response.data.error) {\n          setErrorMessage(e.response.data.message);\n        } else {\n          setErrorMessage(\"Une éreur inconue est survenue\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        className: classes.form,\n        onSubmit: e => submiting(e, {\n          email,\n          password\n        }),\n        children: [/*#__PURE__*/_jsx(TextField, {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          error: emailError,\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          },\n          id: \"email\",\n          variant: \"outlined\",\n          onBlur: validateField,\n          label: content.new.emailLabel,\n          name: \"email\",\n          autoComplete: \"email\"\n        }), /*#__PURE__*/_jsx(TextField, {\n          margin: \"normal\",\n          value: password,\n          variant: \"outlined\",\n          onChange: e => setPassword(e.target.value),\n          error: passwordError,\n          required: true,\n          fullWidth: true,\n          onBlur: validateField,\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          },\n          name: \"password\",\n          label: content.new.passLabel,\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\"\n        }), /*#__PURE__*/_jsx(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: content.new.signin\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Box, {\n      mt: 8,\n      children: /*#__PURE__*/_jsx(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsx(Collapse, {\n          in: response.donneIncorecte,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            id: \"example-collapse-text\",\n            children: /*#__PURE__*/_jsxs(Alert, {\n              variant: \"danger\",\n              children: [\" \", messageError, \" \"]\n            })\n          })\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}