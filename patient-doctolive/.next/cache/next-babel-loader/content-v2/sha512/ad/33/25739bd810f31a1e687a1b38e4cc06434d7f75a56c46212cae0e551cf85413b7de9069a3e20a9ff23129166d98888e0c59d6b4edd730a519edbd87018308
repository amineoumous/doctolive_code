{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\InscriptionForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Col, Row, Alert, Collapse } from 'react-bootstrap';\nimport Config from './../EndPoint';\nimport { makeStyles } from '@material-ui/core/styles'; // @material-ui/icons\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md'; // import TextField from 'components/Inputs/InputIcone/index';\n\nimport Button from './CustomButtons/Button';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport contentFR from './../contentFR';\nimport contentEN from './../contentEN';\nimport contentAR from './../contentAR';\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    borderRadius: 13,\n    borderColor: \"#38869C\",\n    color: \"#61788E\"\n  },\n  text_info: {\n    color: \"#61788E\",\n    fontSize: 14,\n    fontWeight: 500\n  },\n  notchedOutline: {\n    borderColor: '#38869C !important',\n    borderWidth: \"2px !important\"\n  }\n}));\nexport default function ElementForm(props) {\n  var _response$message;\n\n  const router = useRouter();\n  const {\n    locale\n  } = router;\n  const content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n  const classes = useStyles();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    nom: \"\",\n    prenom: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    email_confirmation: \"\"\n  });\n  const {\n    0: fieldValidationErrors,\n    1: setfieldValidationErrors\n  } = useState({\n    nomError: false,\n    prenomError: false,\n    numeroError: false,\n    emailError: false\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    sending: false,\n    success: false,\n    donneIncorecte: false\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setResponse(old => {\n      return _objectSpread(_objectSpread({}, old), {}, {\n        sending: true\n      });\n    });\n    let data = traitementDonnee();\n    fetch(`${Config.BACKEND_URL}/patient`, {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(_objectSpread({}, data))\n    }).then(r => r.json().then(res => {\n      console.log(res);\n\n      if (!res.error) {\n        props.setUserData(res);\n        setResponse({\n          sending: false,\n          success: true,\n          donneIncorecte: false\n        });\n      } else {\n        if (res.validator) {\n          setResponse({\n            sending: false,\n            success: false,\n            donneIncorecte: false,\n            validator: true,\n            message: res.message\n          });\n        } else {\n          setResponse({\n            sending: false,\n            success: false,\n            donneIncorecte: true\n          });\n        }\n      }\n    })).catch(error => {\n      console.log(error);\n      setResponse({\n        sending: false,\n        success: false,\n        donneIncorecte: true\n      });\n    });\n  };\n\n  const traitementDonnee = () => {\n    let formData = {};\n    formData.nom = state.nom;\n    formData.phone = state.phone;\n    formData.email = state.email;\n    formData.prenom = state.prenom;\n    formData.password = state.password;\n    formData.email_confirmation = state.email_confirmation;\n    return formData;\n  };\n\n  const validateField = () => {};\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    if (name === \"phone\") {\n      value = value // Remove all non-digits, turn initial 33 into nothing\n      .replace(/[^\\d+]/g, '').replace(/^0/, '+212') // Stick to first 10, ignore later digits\n      .slice(0, 13) // Add a space after any 2-digit group followed by more digits\n      .replace(/(\\d{3})(?=\\d)/g, '$1 ');\n    }\n\n    setState(old => {\n      return _objectSpread(_objectSpread({}, old), {}, {\n        [name]: value\n      });\n    });\n  }; // let {password, showPassword, email_confirmation, fieldValidationErrors, nom, prenom, phone, email, donneIncorecte, success} = state\n\n\n  console.log(response);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        md: \"12\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Saisissez vos informations pour continuer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          error: fieldValidationErrors.nomError,\n          placeholder: \"\",\n          label: content.new.labelNom,\n          required: false,\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          },\n          variant: \"outlined\",\n          name: \"nom\",\n          onBlur: validateField,\n          value: state.nom,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"\",\n          variant: \"outlined\",\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          },\n          required: false,\n          error: fieldValidationErrors.prenomError,\n          label: content.new.labelPrenom,\n          onBlur: validateField,\n          name: \"prenom\",\n          value: state.prenom,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 12,\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"phone-text\",\n          value: state.phone,\n          onChange: handleChange,\n          fullWidth: true,\n          variant: \"outlined\",\n          type: \"text\",\n          onBlur: validateField,\n          error: state.phoneError,\n          helperText: state.phoneError ? content.new.phoneError : \"\",\n          margin: \"normal\",\n          required: true,\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          },\n          id: \"patientPhone\",\n          label: content.new.phoneLabel,\n          name: \"phone\",\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: content.new.emailLabel,\n          placeholder: \"Adresse email\",\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          },\n          variant: \"outlined\",\n          name: \"email\",\n          error: fieldValidationErrors.emailError,\n          required: true,\n          onBlur: validateField,\n          value: state.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: content.new.labelEmailC,\n          placeholder: content.new.labelEmailCP,\n          variant: \"outlined\",\n          name: \"email_confirmation\",\n          error: fieldValidationErrors.emailError,\n          required: true,\n          onBlur: validateField,\n          value: state.email_confirmation,\n          onChange: handleChange,\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"standard-adornment-password\",\n            children: [\" \", content.new.passLabel, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"standard-adornment-password\",\n            type: state.showPassword ? 'text' : 'password',\n            value: state.password,\n            onChange: handleChange,\n            required: true,\n            label: content.new.passLabel,\n            InputProps: {\n              classes: {\n                notchedOutline: classes.notchedOutline\n              },\n              style: {\n                borderRadius: \"10px\"\n              }\n            },\n            InputLabelProps: {\n              style: {\n                color: '#61788E'\n              }\n            },\n            name: \"password\",\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: () => setState(old => {\n                  return _objectSpread(_objectSpread({}, old), {}, {\n                    showPassword: !state.showPassword\n                  });\n                }),\n                children: state.showPassword ? /*#__PURE__*/_jsxDEV(MdVisibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 63\n                }, this) : /*#__PURE__*/_jsxDEV(MdVisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 82\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        in: response.donneIncorecte,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: content.new.errorSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        in: response.validator,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: (_response$message = response.message) === null || _response$message === void 0 ? void 0 : _response$message.map((mess, index) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", mess.msg, \",  \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        in: response.success,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            children: content.new.successSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center text-center mt-1\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.text_info,\n          children: \"Votre mot de passe vous permettra de g\\xE9rer vos rendez-vous m\\xE9dicaux.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center justify-content-around  \",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary \",\n          className: \"signup\",\n          children: [\" \", content.new.signup, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 13\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/components/InscriptionForm.js"],"names":["React","useState","Col","Row","Alert","Collapse","Config","makeStyles","InputLabel","TextField","FormControl","OutlinedInput","InputAdornment","IconButton","MdVisibility","MdVisibilityOff","Button","fetch","useRouter","contentFR","contentEN","contentAR","useStyles","theme","textField","borderRadius","borderColor","color","text_info","fontSize","fontWeight","notchedOutline","borderWidth","ElementForm","props","router","locale","content","classes","state","setState","nom","prenom","phone","email","password","email_confirmation","fieldValidationErrors","setfieldValidationErrors","nomError","prenomError","numeroError","emailError","response","setResponse","sending","success","donneIncorecte","handleSubmit","e","preventDefault","old","data","traitementDonnee","BACKEND_URL","method","headers","body","JSON","stringify","then","r","json","res","console","log","error","setUserData","validator","message","catch","formData","validateField","handleChange","target","value","name","replace","slice","new","labelNom","style","labelPrenom","phoneError","phoneLabel","emailLabel","labelEmailC","labelEmailCP","passLabel","showPassword","errorSignup","map","mess","index","msg","successSignup","signup"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAASC,GAAT,EAAaC,GAAb,EAAkBC,KAAlB,EAAyBC,QAAzB,QAAyC,iBAAzC;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAAQC,YAAR,EAAsBC,eAAtB,QAA4C,gBAA5C,C,CAEA;;AACA,OAAOC,MAAP,MAAoB,wBAApB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAY;AACrCC,EAAAA,SAAS,EAAE;AACRC,IAAAA,YAAY,EAAC,EADL;AAERC,IAAAA,WAAW,EAAC,SAFJ;AAGRC,IAAAA,KAAK,EAAC;AAHE,GAD0B;AAMrCC,EAAAA,SAAS,EAAC;AACND,IAAAA,KAAK,EAAC,SADA;AAENE,IAAAA,QAAQ,EAAC,EAFH;AAEMC,IAAAA,UAAU,EAAC;AAFjB,GAN2B;AAUrCC,EAAAA,cAAc,EAAE;AAAEL,IAAAA,WAAW,EAAE,oBAAf;AAAoCM,IAAAA,WAAW,EAAC;AAAhD;AAVqB,CAAZ,CAAD,CAA5B;AAaA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAAA;;AACtC,QAAMC,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAM;AAACkB,IAAAA;AAAD,MAAWD,MAAjB;AACA,QAAME,OAAO,GAAGD,MAAM,KAAK,IAAX,GAAkBf,SAAlB,GAA8Be,MAAM,KAAK,IAAX,GAAkBhB,SAAlB,GAA8BD,SAA5E;AACA,QAAMmB,OAAO,GAAGhB,SAAS,EAAzB;AAEA,QAAM;AAAA,OAACiB,KAAD;AAAA,OAAQC;AAAR,MAAoBvC,QAAQ,CAAC;AACvBwC,IAAAA,GAAG,EAAE,EADkB;AAEvBC,IAAAA,MAAM,EAAC,EAFgB;AAGvBC,IAAAA,KAAK,EAAC,EAHiB;AAIvBC,IAAAA,KAAK,EAAE,EAJgB;AAKvBC,IAAAA,QAAQ,EAAC,EALc;AAMvBC,IAAAA,kBAAkB,EAAC;AANI,GAAD,CAAlC;AAQA,QAAM;AAAA,OAACC,qBAAD;AAAA,OAAwBC;AAAxB,MAAoD/C,QAAQ,CAAC;AAC/DgD,IAAAA,QAAQ,EAAC,KADsD;AAE/DC,IAAAA,WAAW,EAAC,KAFmD;AAG/DC,IAAAA,WAAW,EAAC,KAHmD;AAI/DC,IAAAA,UAAU,EAAC;AAJoD,GAAD,CAAlE;AAOA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BrD,QAAQ,CAAC;AACrCsD,IAAAA,OAAO,EAAC,KAD6B;AAErCC,IAAAA,OAAO,EAAC,KAF6B;AAGrCC,IAAAA,cAAc,EAAE;AAHqB,GAAD,CAAxC;;AAMA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,WAAW,CAACO,GAAG,IAAK;AAAE,6CAAWA,GAAX;AAAgBN,QAAAA,OAAO,EAAE;AAAzB;AAA+B,KAA1C,CAAX;AAEA,QAAIO,IAAI,GAAGC,gBAAgB,EAA3B;AAEA9C,IAAAA,KAAK,CAAE,GAAEX,MAAM,CAAC0D,WAAY,UAAvB,EAAiC;AAClCC,MAAAA,MAAM,EAAC,MAD2B;AAElCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFyB;AAKlCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,mBAAmBP,IAAnB;AAL6B,KAAjC,CAAL,CAOCQ,IAPD,CAQKC,CAAD,IAAOA,CAAC,CAACC,IAAF,GACNF,IADM,CACDG,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,UAAG,CAACA,GAAG,CAACG,KAAR,EAAc;AACV1C,QAAAA,KAAK,CAAC2C,WAAN,CAAkBJ,GAAlB;AACAnB,QAAAA,WAAW,CAAC;AAACC,UAAAA,OAAO,EAAE,KAAV;AAAiBC,UAAAA,OAAO,EAAC,IAAzB;AAA+BC,UAAAA,cAAc,EAAE;AAA/C,SAAD,CAAX;AAGH,OALD,MAKM;AACF,YAAGgB,GAAG,CAACK,SAAP,EAAiB;AACbxB,UAAAA,WAAW,CAAC;AAACC,YAAAA,OAAO,EAAE,KAAV;AAAiBC,YAAAA,OAAO,EAAC,KAAzB;AAAgCC,YAAAA,cAAc,EAAC,KAA/C;AAAsDqB,YAAAA,SAAS,EAAE,IAAjE;AAAuEC,YAAAA,OAAO,EAAEN,GAAG,CAACM;AAApF,WAAD,CAAX;AACH,SAFD,MAEK;AACDzB,UAAAA,WAAW,CAAC;AAACC,YAAAA,OAAO,EAAE,KAAV;AAAiBC,YAAAA,OAAO,EAAC,KAAzB;AAAgCC,YAAAA,cAAc,EAAC;AAA/C,WAAD,CAAX;AAEH;AACJ;AAEJ,KAjBM,CARX,EA0BMuB,KA1BN,CA0BYJ,KAAK,IAAG;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAtB,MAAAA,WAAW,CAAC;AAACC,QAAAA,OAAO,EAAE,KAAV;AAAiBC,QAAAA,OAAO,EAAC,KAAzB;AAAgCC,QAAAA,cAAc,EAAC;AAA/C,OAAD,CAAX;AACH,KA7BL;AA8BH,GApCD;;AAsCA,QAAMM,gBAAgB,GAAG,MAAM;AAC3B,QAAIkB,QAAQ,GAAC,EAAb;AAEAA,IAAAA,QAAQ,CAACxC,GAAT,GAAeF,KAAK,CAACE,GAArB;AACAwC,IAAAA,QAAQ,CAACtC,KAAT,GAAgBJ,KAAK,CAACI,KAAtB;AACAsC,IAAAA,QAAQ,CAACrC,KAAT,GAAgBL,KAAK,CAACK,KAAtB;AACAqC,IAAAA,QAAQ,CAACvC,MAAT,GAAiBH,KAAK,CAACG,MAAvB;AACAuC,IAAAA,QAAQ,CAACpC,QAAT,GAAmBN,KAAK,CAACM,QAAzB;AACAoC,IAAAA,QAAQ,CAACnC,kBAAT,GAA6BP,KAAK,CAACO,kBAAnC;AAEA,WAAOmC,QAAP;AACH,GAXD;;AAaA,QAAMC,aAAa,GAAG,MAAM,CAE3B,CAFD;;AAMA,QAAMC,YAAY,GAAG,CAAC;AAACC,IAAAA,MAAM,EAAG;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAAV,GAAD,KAA8B;AAE/C,QAAGA,IAAI,KAAK,OAAZ,EAAoB;AAChBD,MAAAA,KAAK,GAAGA,KAAK,CACb;AADa,OAEZE,OAFO,CAEC,SAFD,EAEY,EAFZ,EAGPA,OAHO,CAGC,IAHD,EAGO,MAHP,EAIR;AAJQ,OAKPC,KALO,CAKD,CALC,EAKE,EALF,EAMR;AANQ,OAOPD,OAPO,CAOC,gBAPD,EAOmB,KAPnB,CAAR;AAQH;;AACD/C,IAAAA,QAAQ,CAACqB,GAAG,IAAI;AAAC,6CAAYA,GAAZ;AAAiB,SAACyB,IAAD,GAAQD;AAAzB;AAAgC,KAAzC,CAAR;AACH,GAbD,CApFsC,CAkGlC;;;AACDX,EAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACH,sBACQ;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAA8B,IAAA,YAAY,EAAC,KAA3C;AAAA,4BAEI,QAAC,GAAD;AAAA,8BACA,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAA,+BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAIQ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA,+BACI,QAAC,SAAD;AACG,UAAA,SAAS,EAAEpB,OAAO,CAACd,SADtB;AAKI,UAAA,KAAK,EAAEuB,qBAAqB,CAACE,QALjC;AAMI,UAAA,WAAW,EAAC,EANhB;AAOI,UAAA,KAAK,EAAEZ,OAAO,CAACoD,GAAR,CAAYC,QAPvB;AAQI,UAAA,QAAQ,EAAE,KARd;AASI,UAAA,UAAU,EAAE;AACRpD,YAAAA,OAAO,EAAE;AACLP,cAAAA,cAAc,EAAEO,OAAO,CAACP;AADnB,aADD;AAIR4D,YAAAA,KAAK,EAAE;AACLlE,cAAAA,YAAY,EAAE;AADT;AAJC,WAThB;AAiBM,UAAA,eAAe,EAAE;AACfkE,YAAAA,KAAK,EAAE;AAAEhE,cAAAA,KAAK,EAAE;AAAT;AADQ,WAjBvB;AAoBI,UAAA,OAAO,EAAC,UApBZ;AAqBI,UAAA,IAAI,EAAC,KArBT;AAsBI,UAAA,MAAM,EAAEuD,aAtBZ;AAuBI,UAAA,KAAK,EAAE3C,KAAK,CAACE,GAvBjB;AAwBI,UAAA,QAAQ,EAAE0C;AAxBd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJR,eAiCQ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,WAAW,EAAC,EADhB;AAEI,UAAA,OAAO,EAAC,UAFZ;AAII,UAAA,UAAU,EAAE;AACR7C,YAAAA,OAAO,EAAE;AACLP,cAAAA,cAAc,EAAEO,OAAO,CAACP;AADnB,aADD;AAIR4D,YAAAA,KAAK,EAAE;AACLlE,cAAAA,YAAY,EAAE;AADT;AAJC,WAJhB;AAYM,UAAA,eAAe,EAAE;AACfkE,YAAAA,KAAK,EAAE;AAAEhE,cAAAA,KAAK,EAAE;AAAT;AADQ,WAZvB;AAgBI,UAAA,QAAQ,EAAE,KAhBd;AAiBI,UAAA,KAAK,EAAEoB,qBAAqB,CAACG,WAjBjC;AAkBI,UAAA,KAAK,EAAEb,OAAO,CAACoD,GAAR,CAAYG,WAlBvB;AAmBI,UAAA,MAAM,EAAEV,aAnBZ;AAoBI,UAAA,IAAI,EAAC,QApBT;AAqBI,UAAA,KAAK,EAAE3C,KAAK,CAACG,MArBjB;AAsBI,UAAA,QAAQ,EAAEyC;AAtBd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjCR,eA6DQ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,SAAS,EAAC,MAA/B;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,SAAS,EAAC,YADd;AAEI,UAAA,KAAK,EAAE5C,KAAK,CAACI,KAFjB;AAGI,UAAA,QAAQ,EAAEwC,YAHd;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,OAAO,EAAC,UALZ;AAMI,UAAA,IAAI,EAAC,MANT;AAOI,UAAA,MAAM,EAAED,aAPZ;AAQI,UAAA,KAAK,EAAE3C,KAAK,CAACsD,UARjB;AASI,UAAA,UAAU,EAAEtD,KAAK,CAACsD,UAAN,GAAmBxD,OAAO,CAACoD,GAAR,CAAYI,UAA/B,GAA4C,EAT5D;AAUI,UAAA,MAAM,EAAC,QAVX;AAWI,UAAA,QAAQ,MAXZ;AAYI,UAAA,UAAU,EAAE;AACRvD,YAAAA,OAAO,EAAE;AACLP,cAAAA,cAAc,EAAEO,OAAO,CAACP;AADnB,aADD;AAIR4D,YAAAA,KAAK,EAAE;AACLlE,cAAAA,YAAY,EAAE;AADT;AAJC,WAZhB;AAoBM,UAAA,eAAe,EAAE;AACfkE,YAAAA,KAAK,EAAE;AAAEhE,cAAAA,KAAK,EAAE;AAAT;AADQ,WApBvB;AAuBI,UAAA,EAAE,EAAC,cAvBP;AAwBI,UAAA,KAAK,EAAEU,OAAO,CAACoD,GAAR,CAAYK,UAxBvB;AAyBI,UAAA,IAAI,EAAC,OAzBT;AA0BI,UAAA,YAAY,EAAC;AA1BjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA7DR,eA4FQ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,KAAK,EAAEzD,OAAO,CAACoD,GAAR,CAAYM,UAFvB;AAGI,UAAA,WAAW,EAAC,eAHhB;AAII,UAAA,UAAU,EAAE;AACRzD,YAAAA,OAAO,EAAE;AACLP,cAAAA,cAAc,EAAEO,OAAO,CAACP;AADnB,aADD;AAIR4D,YAAAA,KAAK,EAAE;AACLlE,cAAAA,YAAY,EAAE;AADT;AAJC,WAJhB;AAYM,UAAA,eAAe,EAAE;AACfkE,YAAAA,KAAK,EAAE;AAAEhE,cAAAA,KAAK,EAAE;AAAT;AADQ,WAZvB;AAeI,UAAA,OAAO,EAAC,UAfZ;AAgBI,UAAA,IAAI,EAAC,OAhBT;AAiBI,UAAA,KAAK,EAAEoB,qBAAqB,CAACK,UAjBjC;AAkBI,UAAA,QAAQ,EAAE,IAlBd;AAmBI,UAAA,MAAM,EAAE8B,aAnBZ;AAoBI,UAAA,KAAK,EAAE3C,KAAK,CAACK,KApBjB;AAqBI,UAAA,QAAQ,EAAEuC;AArBd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5FR,eAsHQ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,KAAK,EAAE9C,OAAO,CAACoD,GAAR,CAAYO,WAFvB;AAGI,UAAA,WAAW,EAAE3D,OAAO,CAACoD,GAAR,CAAYQ,YAH7B;AAII,UAAA,OAAO,EAAC,UAJZ;AAKI,UAAA,IAAI,EAAC,oBALT;AAMI,UAAA,KAAK,EAAElD,qBAAqB,CAACK,UANjC;AAOI,UAAA,QAAQ,EAAE,IAPd;AAQI,UAAA,MAAM,EAAE8B,aARZ;AASI,UAAA,KAAK,EAAE3C,KAAK,CAACO,kBATjB;AAUI,UAAA,QAAQ,EAAEqC,YAVd;AAYI,UAAA,UAAU,EAAE;AACR7C,YAAAA,OAAO,EAAE;AACLP,cAAAA,cAAc,EAAEO,OAAO,CAACP;AADnB,aADD;AAIR4D,YAAAA,KAAK,EAAE;AACLlE,cAAAA,YAAY,EAAE;AADT;AAJC,WAZhB;AAoBM,UAAA,eAAe,EAAE;AACfkE,YAAAA,KAAK,EAAE;AAAEhE,cAAAA,KAAK,EAAE;AAAT;AADQ;AApBvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAtHR,eAgJQ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,SAAS,MAAtB;AAAuB,UAAA,OAAO,EAAC,UAA/B;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,6BAApB;AAAA,4BAAoDU,OAAO,CAACoD,GAAR,CAAYS,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,aAAD;AACI,YAAA,EAAE,EAAC,6BADP;AAEI,YAAA,IAAI,EAAE3D,KAAK,CAAC4D,YAAN,GAAqB,MAArB,GAA8B,UAFxC;AAGI,YAAA,KAAK,EAAE5D,KAAK,CAACM,QAHjB;AAII,YAAA,QAAQ,EAAEsC,YAJd;AAKI,YAAA,QAAQ,EAAE,IALd;AAMI,YAAA,KAAK,EAAE9C,OAAO,CAACoD,GAAR,CAAYS,SANvB;AAOI,YAAA,UAAU,EAAE;AACR5D,cAAAA,OAAO,EAAE;AACLP,gBAAAA,cAAc,EAAEO,OAAO,CAACP;AADnB,eADD;AAIR4D,cAAAA,KAAK,EAAE;AACLlE,gBAAAA,YAAY,EAAE;AADT;AAJC,aAPhB;AAeM,YAAA,eAAe,EAAE;AACfkE,cAAAA,KAAK,EAAE;AAAEhE,gBAAAA,KAAK,EAAE;AAAT;AADQ,aAfvB;AAkBI,YAAA,IAAI,EAAC,UAlBT;AAmBI,YAAA,YAAY,eACZ,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,KAAzB;AAAA,qCACI,QAAC,UAAD;AACI,8BAAW,4BADf;AAEI,gBAAA,OAAO,EAAG,MAAMa,QAAQ,CAACqB,GAAG,IAAG;AAAC,yDAAYA,GAAZ;AAAiBsC,oBAAAA,YAAY,EAAE,CAAC5D,KAAK,CAAC4D;AAAtC;AAAoD,iBAA5D,CAF5B;AAAA,0BAIC5D,KAAK,CAAC4D,YAAN,gBAAqB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,wBAArB,gBAAwC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAJzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AApBJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhJR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAsLI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE9C,QAAQ,CAACI,cAAvB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACI,QAAC,KAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAA,sBACKpB,OAAO,CAACoD,GAAR,CAAYW;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAtLJ,eA+LI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE/C,QAAQ,CAACyB,SAAvB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACI,QAAC,KAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAA,2CAEQzB,QAAQ,CAAC0B,OAFjB,sDAEQ,kBAAkBsB,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,kCAAO;AAAA,gCAAqBD,IAAI,CAACE,GAA1B;AAAA,iBAAYD,KAAZ;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA/LJ,eA6MI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAElD,QAAQ,CAACG,OAAvB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACI,QAAC,KAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAAA,sBACKnB,OAAO,CAACoD,GAAR,CAAYgB;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA7MJ,eAsNI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,6BACA,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAc,QAAA,SAAS,EAAC,MAAxB;AAAA,+BACA;AAAG,UAAA,SAAS,EAAEnE,OAAO,CAACV,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAtNJ,eA4NI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,6BACA,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,UAA5B;AAAuC,UAAA,SAAS,EAAC,QAAjD;AAAA,0BAA4DS,OAAO,CAACoD,GAAR,CAAYiB,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YA5NJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAqOH","sourcesContent":["\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Col,Row, Alert, Collapse } from 'react-bootstrap';\r\n\r\nimport Config from './../EndPoint'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// @material-ui/icons\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport {MdVisibility, MdVisibilityOff} from 'react-icons/md'\r\n\r\n// import TextField from 'components/Inputs/InputIcone/index';\r\nimport Button  from './CustomButtons/Button';\r\n\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { useRouter } from 'next/router'\r\n\r\n\r\nimport contentFR from './../contentFR'\r\nimport contentEN from './../contentEN'\r\nimport contentAR from './../contentAR'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n       borderRadius:13,\r\n       borderColor:\"#38869C\",\r\n       color:\"#61788E\"\r\n    },\r\n    text_info:{\r\n        color:\"#61788E\",\r\n        fontSize:14,fontWeight:500\r\n    },\r\n    notchedOutline: { borderColor: '#38869C !important',borderWidth:\"2px !important\" }\r\n  }));\r\n\r\nexport default function ElementForm(props){\r\n    const router = useRouter();\r\n    const {locale} = router;\r\n    const content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n                nom: \"\",\r\n                prenom:\"\",\r\n                phone:\"\",\r\n                email: \"\",\r\n                password:\"\",\r\n                email_confirmation:\"\",\r\n    });\r\n    const [fieldValidationErrors, setfieldValidationErrors] = useState({\r\n        nomError:false,\r\n        prenomError:false,\r\n        numeroError:false,\r\n        emailError:false,\r\n                    \r\n    })\r\n    const [response, setResponse] = useState({\r\n        sending:false,\r\n        success:false,   \r\n        donneIncorecte: false                 \r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setResponse(old =>  { return {...old, sending: true}});\r\n\r\n        let data = traitementDonnee();\r\n\r\n        fetch(`${Config.BACKEND_URL}/patient`,{\r\n            method:\"post\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body:JSON.stringify({...data})\r\n        })\r\n        .then(\r\n            (r) => r.json()\r\n            .then(res => {\r\n                console.log(res)\r\n                if(!res.error){\r\n                    props.setUserData(res);\r\n                    setResponse({sending: false, success:true, donneIncorecte: false});\r\n                    \r\n                    \r\n                }else {\r\n                    if(res.validator){\r\n                        setResponse({sending: false, success:false, donneIncorecte:false, validator: true, message: res.message})\r\n                    }else{\r\n                        setResponse({sending: false, success:false, donneIncorecte:true})\r\n\r\n                    }\r\n                }\r\n           \r\n            })\r\n            ).catch(error =>{ \r\n                console.log(error)\r\n                setResponse({sending: false, success:false, donneIncorecte:true})\r\n            })\r\n    }\r\n\r\n    const traitementDonnee = () => {\r\n        let formData={};\r\n        \r\n        formData.nom=  state.nom\r\n        formData.phone= state.phone\r\n        formData.email= state.email\r\n        formData.prenom= state.prenom\r\n        formData.password= state.password\r\n        formData.email_confirmation= state.email_confirmation\r\n \r\n        return formData;\r\n    }\r\n \r\n    const validateField = () => {\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleChange = ({target : {value, name}}) => {\r\n        \r\n        if(name === \"phone\"){\r\n            value = value\r\n            // Remove all non-digits, turn initial 33 into nothing\r\n            .replace(/[^\\d+]/g, '')\r\n            .replace(/^0/, '+212')\r\n            // Stick to first 10, ignore later digits\r\n            .slice(0, 13)\r\n            // Add a space after any 2-digit group followed by more digits\r\n            .replace(/(\\d{3})(?=\\d)/g, '$1 ')\r\n        }\r\n        setState(old => {return { ...old, [name]: value}}) ;\r\n    }\r\n        // let {password, showPassword, email_confirmation, fieldValidationErrors, nom, prenom, phone, email, donneIncorecte, success} = state\r\n       console.log(response)\r\n    return (\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            \r\n                <Row>\r\n                <Col xs=\"12\" md=\"12\"> \r\n                <h3>Saisissez vos informations pour continuer.</h3>\r\n                </Col>\r\n                        <Col xs=\"12\" md=\"6\"> \r\n                            <TextField\r\n                               className={classes.textField}\r\n                           \r\n                            \r\n                               \r\n                                error={fieldValidationErrors.nomError}\r\n                                placeholder=\"\"\r\n                                label={content.new.labelNom}\r\n                                required={false}\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    },\r\n                                    style: {\r\n                                      borderRadius: \"10px\"\r\n                                    }\r\n                                  }}\r\n                                  InputLabelProps={{\r\n                                    style: { color: '#61788E' },\r\n                                  }}\r\n                                variant=\"outlined\"\r\n                                name=\"nom\"\r\n                                onBlur={validateField} \r\n                                value={state.nom}\r\n                                onChange={handleChange} \r\n                            />\r\n                             \r\n                        </Col>\r\n                        <Col xs=\"12\" md=\"6\" > \r\n                            <TextField\r\n                                placeholder=\"\"\r\n                                variant=\"outlined\"\r\n                                \r\n                                InputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    },\r\n                                    style: {\r\n                                      borderRadius: \"10px\"\r\n                                    }\r\n                                  }}\r\n                                  InputLabelProps={{\r\n                                    style: { color: '#61788E' },\r\n                                  }}\r\n                                \r\n                                required={false}\r\n                                error={fieldValidationErrors.prenomError}\r\n                                label={content.new.labelPrenom}\r\n                                onBlur={validateField} \r\n                                name=\"prenom\"\r\n                                value={state.prenom}\r\n                                onChange={handleChange} \r\n                            />\r\n                          \r\n                        </Col>\r\n\r\n                        <Col xs={12} sm={12} className=\"mt-3\">\r\n                            <TextField\r\n                                className=\"phone-text\"\r\n                                value={state.phone}\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                onBlur={validateField} \r\n                                error={state.phoneError}\r\n                                helperText={state.phoneError ? content.new.phoneError : \"\"}\r\n                                margin=\"normal\"\r\n                                required\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    },\r\n                                    style: {\r\n                                      borderRadius: \"10px\"\r\n                                    }\r\n                                  }}\r\n                                  InputLabelProps={{\r\n                                    style: { color: '#61788E' },\r\n                                  }}\r\n                                id=\"patientPhone\"\r\n                                label={content.new.phoneLabel}\r\n                                name=\"phone\"\r\n                                autoComplete=\"new-password\"\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col xs=\"12\" className=\"mt-3\">\r\n                            <TextField \r\n                                fullWidth\r\n                                label={content.new.emailLabel}\r\n                                placeholder=\"Adresse email\"\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    },\r\n                                    style: {\r\n                                      borderRadius: \"10px\"\r\n                                    }\r\n                                  }}\r\n                                  InputLabelProps={{\r\n                                    style: { color: '#61788E' },\r\n                                  }}\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                error={fieldValidationErrors.emailError}\r\n                                required={true}\r\n                                onBlur={validateField} \r\n                                value={state.email}\r\n                                onChange={handleChange} \r\n                            />   \r\n                           \r\n                        </Col> \r\n                        <Col xs=\"12\" className=\"mt-3\">\r\n                            <TextField \r\n                                fullWidth\r\n                                label={content.new.labelEmailC}\r\n                                placeholder={content.new.labelEmailCP}\r\n                                variant=\"outlined\"\r\n                                name=\"email_confirmation\"\r\n                                error={fieldValidationErrors.emailError}\r\n                                required={true}\r\n                                onBlur={validateField} \r\n                                value={state.email_confirmation}\r\n                                onChange={handleChange} \r\n\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    },\r\n                                    style: {\r\n                                      borderRadius: \"10px\"\r\n                                    }\r\n                                  }}\r\n                                  InputLabelProps={{\r\n                                    style: { color: '#61788E' },\r\n                                  }}\r\n                            />\r\n                        </Col> \r\n                        <Col xs=\"12\" className=\"mt-3\"> \r\n                            <FormControl fullWidth variant=\"outlined\">\r\n                                <InputLabel htmlFor=\"standard-adornment-password\"> {content.new.passLabel} </InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"standard-adornment-password\"\r\n                                    type={state.showPassword ? 'text' : 'password'}\r\n                                    value={state.password}\r\n                                    onChange={handleChange}\r\n                                    required={true}\r\n                                    label={content.new.passLabel}\r\n                                    InputProps={{\r\n                                        classes: {\r\n                                            notchedOutline: classes.notchedOutline\r\n                                        },\r\n                                        style: {\r\n                                          borderRadius: \"10px\"\r\n                                        }\r\n                                      }}\r\n                                      InputLabelProps={{\r\n                                        style: { color: '#61788E' },\r\n                                      }}\r\n                                    name=\"password\"\r\n                                    endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={ () => setState(old =>{return  {...old, showPassword: !state.showPassword}})} \r\n                                        >\r\n                                        {state.showPassword ? <MdVisibility /> : <MdVisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                    }\r\n                                />\r\n                                </FormControl>\r\n                        </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Collapse in={response.donneIncorecte}>\r\n                        <div className=\"mt-5\">\r\n                            <Alert  variant=\"danger\">\r\n                                {content.new.errorSignup}\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Collapse in={response.validator}>\r\n                        <div className=\"mt-5\">\r\n                            <Alert  variant=\"danger\">\r\n                                {\r\n                                    response.message?.map((mess, index) => {\r\n                                        return(<span key= {index}> {mess.msg},  </span>)\r\n                                    })\r\n                                }\r\n                                {/* {content.new.errorSignup} */}\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Collapse in={response.success}>\r\n                        <div className=\"mt-5\">\r\n                            <Alert  variant=\"success\">\r\n                                {content.new.successSignup}\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                </Row>\r\n                <Row className=\"justify-content-center text-center mt-1\" >\r\n                <Col xs=\"12\"  className=\"mt-3\">\r\n                <p className={classes.text_info}>Votre mot de passe vous permettra de gérer vos rendez-vous médicaux.</p>\r\n                </Col>\r\n                </Row>\r\n\r\n                <Row className=\"align-items-center justify-content-around  \">\r\n                <Col xs=\"12\" className=\"mt-3\"> \r\n                    <Button type=\"submit\" color=\"primary \" className=\"signup\"> {content.new.signup} </Button>\r\n                </Col>\r\n                </Row>\r\n            </form>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}