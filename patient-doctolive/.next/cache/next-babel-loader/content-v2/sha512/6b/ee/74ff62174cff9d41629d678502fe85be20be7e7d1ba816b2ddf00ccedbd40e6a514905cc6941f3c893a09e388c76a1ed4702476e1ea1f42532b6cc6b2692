{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { useAuth } from '../../context/AuthContext.js';\nimport { useRouter } from 'next/router';\nimport Config from '../../EndPoint.js';\nimport contentFR from '../../contentFR.js';\nimport contentEN from '../../contentEN.js';\nimport contentAR from '../../contentAR.js';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Row, Col, Collapse, Alert } from 'react-bootstrap';\nimport SubmitButton from '../../components/CustomButtons/SubmitButton.js';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    textField: {\n      marginBottom: theme.spacing(2),\n      '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n          borderColor: '#61788E',\n          // Change border color here\n          borderRadius: 10\n        },\n        '&:hover fieldset': {\n          borderColor: '#61788E',\n          // Change border color on hover\n          borderRadius: 10\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#61788E',\n          // Change border color when focused\n          borderRadius: 10\n        }\n      },\n      '& .MuiInputLabel-root': {\n        color: '#61788E',\n        borderRadius: 10\n      }\n    }\n  };\n});\nexport default function Profile_edit() {\n  var _useAuth = useAuth(),\n      userData = _useAuth.userData;\n\n  var router = useRouter();\n  var locale = router.locale;\n  var content = locale === \"ar\" ? contentAR.profile : locale === \"en\" ? contentEN.profile : contentFR.profile;\n\n  var _useState = useState({\n    nom: \"\",\n    prenom: \"\",\n    email: \"\",\n    phone: \"\",\n    adresse: \"\",\n    date_naissance: \"\",\n    lieu_naissance: \"\",\n    gender: \"\",\n    image: null\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState({\n    old_password: \"\",\n    new_password: \"\",\n    confirm_password: \"\",\n    showPassword: false\n  }),\n      mdp = _useState2[0],\n      setMdp = _useState2[1];\n\n  var _useState3 = useState(false),\n      profileUpdated = _useState3[0],\n      setProfileUpdated = _useState3[1];\n\n  var _useState4 = useState(false),\n      passwordChanged = _useState4[0],\n      setPasswordChanged = _useState4[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"\".concat(Config.BACKEND_URL, \"/patient/verify\"), {\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Origin': Config.CURRENT_URL,\n                    'Authorization': \"token \".concat(userData.token)\n                  }\n                });\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context.sent;\n\n                if (data.patient) {\n                  setState(data.patient);\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('Error fetching data:', _context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [userData.token]); // Dependency array to rerun the effect if userData.token changes\n\n  var handleConfirmation = function handleConfirmation() {\n    var testPass = state.password.trimStart();\n\n    if (testPass.length > 6) {\n      var data = {\n        password: mdp.new_password,\n        password_confirmation: mdp.confirm_password,\n        old_password: mdp.old_password,\n        email: userData.user.email\n      };\n      fetch(\"\".concat(Config.BACKEND_URL, \"/patient/new-password\"), {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"token \".concat(userData.token)\n        }\n      }).then(function (res) {\n        console.log(res);\n        setPasswordChanged(ture);\n        setMdp({\n          old_password: \"\",\n          new_password: \"\",\n          confirm_password: \"\",\n          showPassword: false\n        });\n        setTimeout(function () {\n          setPasswordChanged(false);\n        }, 8000);\n      })[\"catch\"](function (err) {\n        console.log(err.response);\n      });\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var testPass = state.password.trimStart();\n\n    if (testPass.length > 6) {\n      //   let data = {password: mdp.password, password_confirmation: mdp.password_confirmation, old_password: mdp.old_password, email: userData.user.email }\n      fetch(\"\".concat(Config.BACKEND_URL, \"/patient\"), {\n        method: 'PUT',\n        body: JSON.stringify(state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"token \".concat(userData.token)\n        }\n      }).then(function (res) {\n        console.log(res);\n        setProfileUpdated(true);\n        setTimeout(function () {\n          setProfileUpdated(false);\n        }, 8000);\n      })[\"catch\"](function (err) {\n        console.log(err.response);\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var target = event.target;\n    setState(function (old) {\n      return _objectSpread(_objectSpread({}, old), {}, _defineProperty({}, target.name, target.value));\n    });\n  };\n\n  var handleChangeMdp = function handleChangeMdp(event) {\n    var target = event.target;\n    setMdp(function (old) {\n      return _objectSpread(_objectSpread({}, old), {}, _defineProperty({}, target.name, target.value));\n    });\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"profile-body pt-5 pb-5\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"container rounded  pt-5 pb-5\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"p-3 py-5 \",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"card text-center card-update mb-4 p-20\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsx(\"h4\", {\n                  className: \"title-card\",\n                  children: content.heading\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \" mt-2\",\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-12 mb-2\",\n                  children: /*#__PURE__*/_jsxs(\"div\", {\n                    className: \" gender-group\",\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      className: \"form-check form-check-inline\",\n                      children: [/*#__PURE__*/_jsx(\"input\", {\n                        className: \"form-check-input\",\n                        type: \"radio\",\n                        name: \"gender\",\n                        id: \"male\",\n                        value: \"male\",\n                        onChange: handleChange\n                      }), /*#__PURE__*/_jsx(\"label\", {\n                        className: \"form-check-label\",\n                        htmlFor: \"male\",\n                        children: \"Male\"\n                      })]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"form-check form-check-inline mr-0\",\n                      children: [/*#__PURE__*/_jsx(\"input\", {\n                        className: \"form-check-input\",\n                        type: \"radio\",\n                        name: \"gender\",\n                        id: \"female\",\n                        value: \"female\",\n                        onChange: handleChange\n                      }), /*#__PURE__*/_jsx(\"label\", {\n                        className: \"form-check-label\",\n                        htmlFor: \"female\",\n                        children: \"Female\"\n                      })]\n                    })]\n                  })\n                })\n              }), /*#__PURE__*/_jsxs(Row, {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsx(Col, {\n                  lg: \"6\",\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    fullWidth: true,\n                    required: true,\n                    label: content.nomLabel,\n                    variant: \"outlined\",\n                    value: state.nom,\n                    name: \"nom\",\n                    onChange: handleChange,\n                    placeholder: content.placeholder1,\n                    className: classes.textField\n                  })\n                }), /*#__PURE__*/_jsx(Col, {\n                  lg: \"6\",\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    fullWidth: true,\n                    required: true,\n                    label: content.prenomLabel,\n                    variant: \"outlined\",\n                    value: state.prenom,\n                    name: \"prenom\",\n                    onChange: handleChange,\n                    placeholder: content.placeholder2,\n                    className: classes.textField\n                  })\n                })]\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \"mt-4\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  lg: \"12\",\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    fullWidth: true,\n                    required: true,\n                    label: content.emailLabel,\n                    variant: \"outlined\",\n                    value: state.email,\n                    name: \"email\",\n                    onChange: handleChange,\n                    placeholder: content.placeholder3,\n                    className: classes.textField\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \"mt-4\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  lg: \"12\",\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    fullWidth: true,\n                    required: true,\n                    label: content.phoneLabel,\n                    variant: \"outlined\",\n                    value: state.phone,\n                    name: \"phone\",\n                    onChange: handleChange,\n                    placeholder: content.placeholder2,\n                    className: classes.textField\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \"mt-4\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  lg: \"12\",\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    fullWidth: true,\n                    label: content.dateLabel,\n                    variant: \"outlined\",\n                    value: state.date_naissance,\n                    name: \"date_naissance\",\n                    onChange: handleChange,\n                    placeholder: \"Date de naissance\",\n                    className: classes.textField\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \"mt-4\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  lg: \"12\",\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    fullWidth: true,\n                    label: content.lieuLabel,\n                    variant: \"outlined\",\n                    value: state.lieu_naissance,\n                    name: \"lieu_naissance\",\n                    onChange: handleChange,\n                    placeholder: \"Lieu de naissance\",\n                    className: classes.textField\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \"justify-content-center mt-3\",\n                children: /*#__PURE__*/_jsx(Collapse, {\n                  \"in\": profileUpdated,\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    id: \"example-collapse-text\",\n                    children: /*#__PURE__*/_jsx(Alert, {\n                      variant: \"success\",\n                      children: \" Success \"\n                    })\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \"mt-5 justify-content-center\",\n                children: /*#__PURE__*/_jsx(SubmitButton, {\n                  onClick: handleSubmit,\n                  color: \"primary\",\n                  className: \"btn-update-pro\",\n                  children: \" Enregistrer le profile \"\n                })\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"card text-center card-update mb-5 p-20\",\n              children: [/*#__PURE__*/_jsx(Row, {\n                className: \"mt-4 p-0\",\n                children: /*#__PURE__*/_jsxs(Col, {\n                  lg: \"12\",\n                  className: \"p-0\",\n                  children: [/*#__PURE__*/_jsx(Row, {\n                    children: /*#__PURE__*/_jsx(\"h4\", {\n                      className: \"text-center\",\n                      children: \" Changement de mot de passe \"\n                    })\n                  }), /*#__PURE__*/_jsxs(FormControl, {\n                    className: \"mt-3\",\n                    fullWidth: true,\n                    variant: \"outlined\",\n                    children: [/*#__PURE__*/_jsxs(InputLabel, {\n                      htmlFor: \"standard-adornment-password\",\n                      children: [\" \", content.old_password, \" \"]\n                    }), /*#__PURE__*/_jsx(OutlinedInput, {\n                      id: \"standard-adornment-password\",\n                      type: mdp.showPassword ? 'text' : 'password',\n                      value: mdp.old_password,\n                      onChange: handleChangeMdp,\n                      required: true,\n                      label: content.old_password,\n                      name: \"old_password\",\n                      endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsx(IconButton, {\n                          \"aria-label\": \"toggle password visibility\",\n                          onClick: function onClick() {\n                            return setMdp(function (old) {\n                              return _objectSpread(_objectSpread({}, old), {}, {\n                                showPassword: !state.showPassword\n                              });\n                            });\n                          },\n                          children: mdp.showPassword ? /*#__PURE__*/_jsx(MdVisibility, {}) : /*#__PURE__*/_jsx(MdVisibilityOff, {})\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsxs(FormControl, {\n                    className: \"mt-3\",\n                    fullWidth: true,\n                    variant: \"outlined\",\n                    children: [/*#__PURE__*/_jsxs(InputLabel, {\n                      htmlFor: \"standard-adornment-password\",\n                      children: [\" \", content.new_password, \" \"]\n                    }), /*#__PURE__*/_jsx(OutlinedInput, {\n                      id: \"standard-adornment-password\",\n                      type: mdp.showPassword ? 'text' : 'password',\n                      value: mdp.password,\n                      onChange: handleChangeMdp,\n                      required: true,\n                      label: content.new_password,\n                      name: \"new_password\",\n                      endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsx(IconButton, {\n                          \"aria-label\": \"toggle password visibility\",\n                          onClick: function onClick() {\n                            return setMdp(function (old) {\n                              return _objectSpread(_objectSpread({}, old), {}, {\n                                showPassword: !mdp.showPassword\n                              });\n                            });\n                          },\n                          children: mdp.showPassword ? /*#__PURE__*/_jsx(MdVisibility, {}) : /*#__PURE__*/_jsx(MdVisibilityOff, {})\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsxs(FormControl, {\n                    className: \"mt-3\",\n                    fullWidth: true,\n                    variant: \"outlined\",\n                    children: [/*#__PURE__*/_jsxs(InputLabel, {\n                      htmlFor: \"standard-adornment-password\",\n                      children: [\" \", content.confirm_password, \" \"]\n                    }), /*#__PURE__*/_jsx(OutlinedInput, {\n                      id: \"standard-adornment-password\",\n                      type: mdp.showPassword ? 'text' : 'password',\n                      value: mdp.confirm_password,\n                      onChange: handleChangeMdp,\n                      required: true,\n                      label: content.confirm_password,\n                      name: \"confirm_password\",\n                      endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsx(IconButton, {\n                          \"aria-label\": \"toggle password visibility\",\n                          onClick: function onClick() {\n                            return setMdp(function (old) {\n                              return _objectSpread(_objectSpread({}, old), {}, {\n                                showPassword: !mdp.showPassword\n                              });\n                            });\n                          },\n                          children: state.showPassword ? /*#__PURE__*/_jsx(MdVisibility, {}) : /*#__PURE__*/_jsx(MdVisibilityOff, {})\n                        })\n                      })\n                    })]\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \"justify-content-center mt-3\",\n                children: /*#__PURE__*/_jsx(Collapse, {\n                  \"in\": passwordChanged,\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    id: \"example-collapse-text\",\n                    children: /*#__PURE__*/_jsx(Alert, {\n                      variant: \"success\",\n                      children: \" Success \"\n                    })\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                className: \"mt-5 justify-content-center\",\n                children: /*#__PURE__*/_jsx(SubmitButton, {\n                  onClick: handleConfirmation,\n                  color: \"primary \",\n                  className: \"btn-update-pro\",\n                  children: \" Changer le mot de passe \"\n                })\n              })]\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"p-3 py-5\"\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-md-12 text-center\",\n          children: /*#__PURE__*/_jsx(\"img\", {\n            className: \" mt-5\",\n            src: \"/image/person-with-a-cold-animate2.svg\"\n          })\n        })\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}