{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\Snackbar\\\\Snackbar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { AiOutlineClose } from 'react-icons/ai'; // core components\n\nimport styles from \"../../assets/jss/snackbarContentStyle.js\";\nimport Link from 'next/link';\nvar useStyles = makeStyles(styles);\nexport default function Snackbar(props) {\n  _s();\n\n  var classes = useStyles();\n  var message = props.message,\n      color = props.color,\n      close = props.close,\n      icon = props.icon,\n      place = props.place,\n      open = props.open,\n      rtlActive = props.rtlActive,\n      link = props.link,\n      linkPath = props.linkPath;\n  var action = [];\n  var messageClasses = classNames(_defineProperty({}, classes.iconMessage, icon !== undefined));\n\n  if (close !== undefined) {\n    action = [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: function onClick() {\n        return props.closeNotification();\n      },\n      children: /*#__PURE__*/_jsxDEV(AiOutlineClose, {\n        className: classes.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, \"close\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Snack, {\n    anchorOrigin: {\n      vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n      horizontal: place.indexOf(\"l\") !== -1 ? \"left\" : place.indexOf(\"c\") !== -1 ? \"center\" : \"right\"\n    },\n    open: open,\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [icon !== undefined ? /*#__PURE__*/_jsxDEV(props.icon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: messageClasses,\n        children: [message, link ? /*#__PURE__*/_jsxDEV(Link, {\n          href: linkPath,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"link\",\n            children: [\" \", link, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this),\n    action: action,\n    ContentProps: {\n      classes: {\n        root: classes.root + \" \" + classes[color],\n        message: classes.message,\n        action: classNames(_defineProperty({}, classes.actionRTL, rtlActive))\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Snackbar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Snackbar;\nSnackbar.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  // icon: PropTypes.function,\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n  open: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  closeNotification: PropTypes.func,\n  link: PropTypes.string,\n  linkPath: PropTypes.string // link : propTypes.string,\n  // linkPath: propTypes.string,\n\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Snackbar\");","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/components/Snackbar/Snackbar.js"],"names":["React","classNames","PropTypes","makeStyles","Snack","IconButton","AiOutlineClose","styles","Link","useStyles","Snackbar","props","classes","message","color","close","icon","place","open","rtlActive","link","linkPath","action","messageClasses","iconMessage","undefined","iconButton","closeNotification","vertical","indexOf","horizontal","root","actionRTL","propTypes","node","isRequired","oneOf","bool","func","string"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snack from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport {AiOutlineClose} from 'react-icons/ai'\r\n// core components\r\nimport styles from \"../../assets/jss/snackbarContentStyle.js\";\r\nimport Link from 'next/link'\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Snackbar(props) {\r\n  const classes = useStyles();\r\n  const { message, color, close, icon, place, open, rtlActive, link, linkPath } = props;\r\n  var action = [];\r\n  const messageClasses = classNames({\r\n    [classes.iconMessage]: icon !== undefined\r\n  });\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        key=\"close\"\r\n        aria-label=\"Close\"\r\n        color=\"inherit\"\r\n        onClick={() => props.closeNotification()}\r\n      >\r\n        <AiOutlineClose className={classes.close} />\r\n      </IconButton>\r\n    ];\r\n  }\r\n  return (\r\n    <Snack\r\n      anchorOrigin={{\r\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\r\n        horizontal:\r\n          place.indexOf(\"l\") !== -1\r\n            ? \"left\"\r\n            : place.indexOf(\"c\") !== -1\r\n            ? \"center\"\r\n            : \"right\"\r\n      }}\r\n      open={open}\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\r\n          <span className={messageClasses}>\r\n            {message}\r\n            {link?<Link href={linkPath}>\r\n                        <a className=\"link\"> {link} </a>\r\n                    </Link> : null}\r\n            </span>\r\n          \r\n        </div>\r\n      }\r\n      action={action}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root + \" \" + classes[color],\r\n          message: classes.message,\r\n          action: classNames({ [classes.actionRTL]: rtlActive })\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbar.propTypes = {\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\r\n  close: PropTypes.bool,\r\n  // icon: PropTypes.function,\r\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\r\n  open: PropTypes.bool,\r\n  rtlActive: PropTypes.bool,\r\n  closeNotification: PropTypes.func,\r\n  link: PropTypes.string,\r\n  linkPath: PropTypes.string,\r\n  // link : propTypes.string,\r\n  // linkPath: propTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}