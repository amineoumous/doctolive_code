{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\MedecinWidget\\\\CalendarAvailability.js\";\nimport { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport { Divider } from '@material-ui/core';\nimport Config from './../../EndPoint';\nimport { useAuth } from './../../context/AuthContext';\nexport default function CalendarAvailability(props) {\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(moment());\n  const {\n    0: calandar,\n    1: setMedecinCalendar\n  } = useState([]);\n  const {\n    userData\n  } = useAuth();\n\n  const selectHour = (day, hour, disable) => {\n    console.log(hour);\n\n    if (disable) {//    this.setState({ error: true, expired:true, message: 'ce moment est indisponible' })\n      //    setTimeout(() => {\n      //        this.setState({expired: false})\n      //    }, 5000);\n    } else {\n      props.setSelectedHour(day.format('YYYY/MM/DD'), hour);\n    }\n  };\n\n  const changeDate = direction => {\n    if (direction === 'next') {\n      setStartDate(moment(startDate).add(7, 'days'));\n    } else {\n      if (moment(startDate).isAfter(moment())) {\n        setStartDate(moment(startDate).subtract(7, 'days')); //    this.setState({ startDate: moment(this.state.startDate).subtract(7, 'days') })\n      }\n    }\n  };\n\n  const createHoursSoir = day => {\n    var _props$medecin;\n\n    const disponibiliteDay = (_props$medecin = props.medecin) === null || _props$medecin === void 0 ? void 0 : _props$medecin.horaires.find(h => h.jour === day.format('dddd'));\n    if (!disponibiliteDay) return [];\n    let table = [];\n    let endHour = moment(disponibiliteDay.fin_soir, 'HH:mm:ss');\n    let hour = moment(disponibiliteDay.debut_soir, 'HH:mm:ss');\n    let i = 0;\n\n    while (hour.isBefore(endHour) && i < 100) {\n      let element = undefined;\n\n      if (calandar) {\n        // element = calandar.find( e => moment.utc(e.date).format('HH:mm') === hour)\n        element = calandar.find(e => {\n          // return moment(e.date).isSame(day.format('YYYY-MM-DDT') + hour.format('HH:mm')+\":00.000Z\", \"minutes\")\n          return e.time === hour.format('HH:mm:ss') && day.format('YYYY-MM-DD') === e.date;\n        });\n      }\n\n      let HourInTheDay = moment(moment(day).format('YYYY/MM/DD') + hour.format('HH:mm'), 'YYYY/MM/DDHH:mm');\n      let isDisabled = element !== undefined || moment().isAfter(HourInTheDay);\n      let cloneHour = hour.format('HH:mm');\n      let hourDiv = !isDisabled ? /*#__PURE__*/_jsxDEV(\"div\", {\n        disabled: isDisabled,\n        className: isDisabled ? \"cell hours-element disabled\" : \"cell hours-element\",\n        onClick: () => selectHour(day, cloneHour, isDisabled),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hour\",\n          children: [\" \", hour.format('HH:mm'), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" hours-element-disabled\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hour-empty\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"-:-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 99\n          }, this), \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 71\n        }, this), \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this);\n      table.push(hourDiv);\n      i++;\n      hour = hour.add(disponibiliteDay.duree, 'minutes');\n    }\n\n    return table;\n  };\n\n  const createHoursMatin = day => {\n    var _props$medecin2;\n\n    const disponibiliteDay = (_props$medecin2 = props.medecin) === null || _props$medecin2 === void 0 ? void 0 : _props$medecin2.horaires.find(h => h.jour === day.lang(\"fr\").format('dddd'));\n    if (!disponibiliteDay) return [];\n    let table = [];\n    let endHour = moment(disponibiliteDay.fin_matin, 'HH:mm:ss');\n    let hour = moment(disponibiliteDay.debut_matin, 'HH:mm:ss');\n    let i = 0;\n\n    while (hour.isBefore(endHour) && i < 100) {\n      let element = undefined;\n\n      if (calandar) {\n        element = calandar.find(e => {\n          return e.time === hour.format('HH:mm:ss') && day.format('YYYY-MM-DD') === e.date;\n        });\n      }\n\n      let HourInTheDay = moment(moment(day).format('YYYY/MM/DD') + hour, 'YYYY/MM/DDHH:mm');\n      let cloneHour = hour.format('HH:mm');\n      let isDisabled = element !== undefined || moment().isAfter(HourInTheDay);\n      let hourDiv = !isDisabled ? /*#__PURE__*/_jsxDEV(\"div\", {\n        disabled: isDisabled,\n        className: isDisabled ? \"cell hours-element disabled\" : \"cell hours-element\",\n        onClick: () => selectHour(day, cloneHour, isDisabled),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hour\",\n          children: [hour.format('HH:mm'), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" hours-element-disabled\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hour-empty\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"-:-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 98\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 70\n        }, this), \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }, this);\n      table.push(hourDiv);\n      i++;\n      hour = hour.add(disponibiliteDay.duree, 'minutes');\n    }\n\n    return table;\n  };\n\n  useEffect(async () => {\n    var _props$medecin3;\n\n    const res = await fetch(`${Config.BACKEND_URL}/consultation/medecin-calendar/${(_props$medecin3 = props.medecin) === null || _props$medecin3 === void 0 ? void 0 : _props$medecin3.id}/${startDate}`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `token ${userData.token}`\n      }\n    });\n    const data = await res.json();\n    setMedecinCalendar(data.medecinCalendar);\n  }, [startDate]);\n\n  const createCalendar = () => {\n    let table = [];\n\n    for (let i = 0; i <= 6; i++) {\n      let date = moment(startDate).add(i, 'days');\n\n      let dayAvailability = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-day-title\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-day-name\",\n              children: [date.format('dddd'), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-day-date\",\n              children: date.format('D') + \" \" + date.format(\"MMM\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [createHoursMatin(date), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), createHoursSoir(date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 39\n      }, this);\n\n      table.push(dayAvailability);\n    }\n\n    return table;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-range-calendar\",\n      style: props.locale === \"ar\" ? {\n        direction: \"rtl\",\n        textAlign: \"right\"\n      } : {\n        direction: \"ltr\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-calendar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-pagination\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"\",\n            id: \"date-range-preview\",\n            onClick: () => changeDate('preview'),\n            children: [\"  \", props.locale === \"ar\" ? /*#__PURE__*/_jsxDEV(MdChevronRight, {\n              color: \"#1AB9B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 137\n            }, this) : /*#__PURE__*/_jsxDEV(MdChevronLeft, {\n              color: \"#1AB9B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 172\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar\",\n          children: props.medecin ? createCalendar() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-pagination\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"\",\n            id: \"date-range-next\",\n            onClick: () => changeDate('next'),\n            children: [\"  \", props.locale === \"ar\" ? /*#__PURE__*/_jsxDEV(MdChevronLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 131\n            }, this) : /*#__PURE__*/_jsxDEV(MdChevronRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 150\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/components/MedecinWidget/CalendarAvailability.js"],"names":["useState","useEffect","moment","MdChevronLeft","MdChevronRight","Divider","Config","useAuth","CalendarAvailability","props","startDate","setStartDate","calandar","setMedecinCalendar","userData","selectHour","day","hour","disable","console","log","setSelectedHour","format","changeDate","direction","add","isAfter","subtract","createHoursSoir","disponibiliteDay","medecin","horaires","find","h","jour","table","endHour","fin_soir","debut_soir","i","isBefore","element","undefined","e","time","date","HourInTheDay","isDisabled","cloneHour","hourDiv","push","duree","createHoursMatin","lang","fin_matin","debut_matin","res","fetch","BACKEND_URL","id","headers","token","data","json","medecinCalendar","createCalendar","dayAvailability","locale","textAlign"],"mappings":"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","sourcesContent":["\r\nimport {useState, useEffect} from 'react'\r\n\r\nimport moment from 'moment'\r\nimport { MdChevronLeft, MdChevronRight} from 'react-icons/md'\r\nimport { Divider } from '@material-ui/core';\r\n\r\nimport Config from './../../EndPoint'\r\nimport { useAuth } from './../../context/AuthContext';\r\n\r\nexport default function CalendarAvailability(props) {\r\n    const [startDate, setStartDate] = useState(moment())\r\n    const [calandar, setMedecinCalendar] = useState([])\r\n\r\n    const {userData} = useAuth();\r\n\r\n    const selectHour = (day, hour, disable) => {\r\n        console.log(hour)\r\n        if(disable){\r\n        //    this.setState({ error: true, expired:true, message: 'ce moment est indisponible' })\r\n        //    setTimeout(() => {\r\n        //        this.setState({expired: false})\r\n        //    }, 5000);\r\n        }else{\r\n            props.setSelectedHour(day.format('YYYY/MM/DD'), hour)\r\n        }\r\n    }\r\n\r\n\r\n    const changeDate = (direction) => {\r\n       \r\n        if (direction === 'next'){\r\n            setStartDate( moment(startDate).add(7, 'days'))\r\n        }else{\r\n            if (moment(startDate).isAfter(moment())){\r\n                setStartDate( moment(startDate).subtract(7, 'days') )\r\n            //    this.setState({ startDate: moment(this.state.startDate).subtract(7, 'days') })\r\n           }\r\n        }\r\n    }\r\n\r\n    const createHoursSoir = (day) => {\r\n        const disponibiliteDay = props.medecin?.horaires.find(h => h.jour === day.format('dddd'));\r\n\r\n        if(!disponibiliteDay) return []\r\n\r\n        let table = [];\r\n        let endHour = moment(disponibiliteDay.fin_soir, 'HH:mm:ss');\r\n        let hour = moment(disponibiliteDay.debut_soir, 'HH:mm:ss');\r\n\r\n        let i=0;\r\n\r\n         while (hour.isBefore(endHour) && i< 100 ){\r\n\r\n            \r\n            let element= undefined;\r\n\r\n            if(calandar){\r\n                // element = calandar.find( e => moment.utc(e.date).format('HH:mm') === hour)\r\n                element = calandar.find( e => {\r\n                    // return moment(e.date).isSame(day.format('YYYY-MM-DDT') + hour.format('HH:mm')+\":00.000Z\", \"minutes\")\r\n                    return e.time === hour.format('HH:mm:ss') && day.format('YYYY-MM-DD') === e.date\r\n                })\r\n            }\r\n            let HourInTheDay = moment( moment(day).format('YYYY/MM/DD') + hour.format('HH:mm'), 'YYYY/MM/DDHH:mm');\r\n            let isDisabled = (element !== undefined) || (moment().isAfter(HourInTheDay));\r\n\r\n            let cloneHour = hour.format('HH:mm')\r\n            let hourDiv = !isDisabled ?  <div \r\n                disabled={isDisabled} \r\n                key={i} \r\n                className={isDisabled ? \"cell hours-element disabled\" : \"cell hours-element\"} \r\n                onClick={ () => selectHour(day, cloneHour, isDisabled)}\r\n                >\r\n                    <span className=\"hour\"> {hour.format('HH:mm')} </span>\r\n                </div>\r\n                : <div key={i}  className=\" hours-element-disabled\" > <div className=\"hour-empty\"><span>-:-</span>   </div> </div>\r\n            table.push(hourDiv)\r\n            i++\r\n            hour = hour.add(disponibiliteDay.duree, 'minutes')\r\n        }\r\n\r\n        return table\r\n    }\r\n    \r\n\r\n\r\n    const createHoursMatin = (day) => {\r\n        const disponibiliteDay = props.medecin?.horaires.find(h => h.jour === day.lang(\"fr\").format('dddd'));\r\n\r\n        if(!disponibiliteDay) return []\r\n\r\n        let table = [];\r\n        let endHour = moment(disponibiliteDay.fin_matin, 'HH:mm:ss') ;\r\n        let hour = moment(disponibiliteDay.debut_matin, 'HH:mm:ss');\r\n\r\n        let i=0;\r\n\r\n         while (hour.isBefore(endHour) && i< 100 ){\r\n            let element= undefined;\r\n\r\n            if(calandar){\r\n                element = calandar.find( e => {\r\n                    return e.time === hour.format('HH:mm:ss') && day.format('YYYY-MM-DD') === e.date\r\n                \r\n                })\r\n            }\r\n            \r\n            let HourInTheDay = moment( moment(day).format('YYYY/MM/DD') + hour, 'YYYY/MM/DDHH:mm');\r\n            let cloneHour = hour.format('HH:mm')\r\n\r\n            let isDisabled = (element !== undefined) || (moment().isAfter(HourInTheDay));\r\n            let hourDiv = !isDisabled ?  <div \r\n                disabled={isDisabled} \r\n                key={i} \r\n                className={isDisabled ? \"cell hours-element disabled\" : \"cell hours-element\"} \r\n                onClick={ () => selectHour(day, cloneHour, isDisabled)}\r\n                >\r\n                    <span className=\"hour\">{hour.format('HH:mm')}  </span>\r\n                </div>\r\n                : <div key={i} className=\" hours-element-disabled\" > <div className=\"hour-empty\"><span>-:-</span></div> </div>\r\n\r\n            table.push(hourDiv)\r\n            i++\r\n            hour = hour.add(disponibiliteDay.duree, 'minutes')\r\n        }\r\n\r\n        return table\r\n    }\r\n\r\n    useEffect( async () => {\r\n        const res =  await fetch(`${Config.BACKEND_URL}/consultation/medecin-calendar/${props.medecin?.id}/${startDate}`, {\r\n            headers: {\r\n                'Accept': 'application/json', \r\n                'Content-Type': 'application/json',\r\n                'Authorization': `token ${userData.token}`,\r\n\r\n            },\r\n        })\r\n        const data = await res.json();\r\n        setMedecinCalendar(data.medecinCalendar)\r\n    }, [startDate]);\r\n\r\n\r\n    const createCalendar = () => {\r\n        let table = [];\r\n        for (let i = 0; i <= 6; i++) {\r\n            let date = moment(startDate).add(i, 'days');\r\n                let dayAvailability = <div key={i} className=\"calendar-day\">\r\n                    <div className=\"calendar-day-title\">\r\n                        <div className=\"cell-content\">\r\n                            <div className=\"calendar-day-name\">{date.format('dddd')} </div>\r\n                            <div className=\"calendar-day-date\">{date.format('D')+ \" \" +date.format(\"MMM\")}</div>\r\n                        </div>\r\n                    </div> \r\n                    <div>\r\n                        {createHoursMatin(date)}\r\n                        <Divider />\r\n                        {createHoursSoir(date)}\r\n                    </div>\r\n            </div>\r\n            table.push(dayAvailability)\r\n            \r\n        }\r\n        return table\r\n    }\r\n\r\n    return(\r\n        <section>\r\n            <div className=\"date-range-calendar\" style={props.locale === \"ar\" ? {direction: \"rtl\", textAlign: \"right\"}: {direction: \"ltr\"}}>\r\n\r\n                <div className=\"range-calendar\">\r\n                    <div className=\"calendar-pagination\">\r\n                        <button className=\"\" id=\"date-range-preview\" onClick={() => changeDate('preview')}  >  {props.locale === \"ar\" ? <MdChevronRight color='#1AB9B9'/>: <MdChevronLeft color='#1AB9B9' />}  </button>\r\n                    </div>\r\n                    <div className=\"calendar\">\r\n                        {props.medecin? createCalendar() : null}\r\n                    </div>\r\n                    <div className=\"calendar-pagination\">\r\n                        <button className=\"\" id=\"date-range-next\" onClick={() => changeDate('next')}  >  {props.locale === \"ar\" ? <MdChevronLeft />: <MdChevronRight />} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}