{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\Chat\\\\CountDown\\\\CountDown.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport moment from 'moment'; // import Cookies from 'js-cookie'\n// import content from './../../Content'\n// let lang = Cookies.get('lang')\n// lang = (lang === undefined)? \"fr\" : lang\n\nexport default class Countdown extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined,\n      difference: this.props.difference\n    });\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      if (this.state.difference >= 1000) {\n        let diff = this.state.difference - 1000;\n        const days = moment(diff).format('DDD') - 1;\n        const hours = moment(diff).format('HH');\n        const minutes = moment(diff).format('mm');\n        const seconds = moment(diff).format('s');\n        this.setState({\n          days,\n          hours,\n          minutes,\n          seconds,\n          difference: diff\n        });\n      } else {// clearInterval(this.interval)\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    const daysRadius = mapNumber(days, 30, 0, 0, 360);\n    const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n    const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n    const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n    if (!seconds) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" La consultation commancera  \", moment.utc(this.props.now + this.props.difference).calendar(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-item\",\n          children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n            radius: daysRadius\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), Math.floor(days), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" jours \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-item\",\n          children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n            radius: hoursRadius\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), Math.floor(hours), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" heurs \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-item\",\n          children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n            radius: minutesRadius\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), Math.floor(minutes), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" minutes \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-item\",\n          children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n            radius: secondsRadius\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), seconds, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" secondes \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\nconst SVGCircle = ({\n  radius\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"countdown-svg\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    fill: \"none\",\n    stroke: \"#333\",\n    strokeWidth: \"4\",\n    d: describeArc(50, 50, 48, 0, radius)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 5\n}, this);\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n  var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n  var d = ['M', start.x, start.y, 'A', radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(' ');\n  return d;\n}","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/components/Chat/CountDown/CountDown.js"],"names":["React","moment","Countdown","Component","days","undefined","hours","minutes","seconds","difference","props","componentDidMount","interval","setInterval","state","diff","format","setState","componentWillUnmount","clearInterval","render","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","utc","now","calendar","Math","floor","number","in_min","in_max","out_min","out_max","SVGCircle","radius","describeArc","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","d","join"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n// import Cookies from 'js-cookie'\r\n\r\n// import content from './../../Content'\r\n\r\n// let lang = Cookies.get('lang')\r\n// lang = (lang === undefined)? \"fr\" : lang\r\n\r\nexport default class Countdown extends React.Component {\r\n    state = {\r\n        days: undefined,\r\n        hours: undefined,\r\n        minutes: undefined,\r\n        seconds: undefined,\r\n        difference: this.props.difference\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            if(this.state.difference >= 1000) {\r\n                \r\n                let diff = this.state.difference - 1000;\r\n                const days =  moment(diff).format('DDD') - 1;\r\n                const hours = moment(diff).format('HH') ;\r\n                const minutes = moment(diff).format('mm');\r\n                const seconds = moment(diff).format('s');\r\n                this.setState({ days, hours, minutes, seconds, difference: diff  });\r\n                \r\n            }else {\r\n                // clearInterval(this.interval)\r\n            }\r\n           \r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { days, hours, minutes, seconds } = this.state;\r\n\r\n        const daysRadius = mapNumber(days, 30, 0, 0, 360);\r\n        const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\r\n        const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\r\n        const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\r\n\r\n        if (!seconds) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h2> La consultation commancera  {moment.utc( this.props.now + this.props.difference ).calendar() } </h2>\r\n                <div className=\"countdown-wrapper\">\r\n                    \r\n                    <div className=\"countdown-item\">\r\n                        <SVGCircle radius={daysRadius} />\r\n                        { Math.floor( days)}\r\n                        <span> jours </span>\r\n                    </div>\r\n                \r\n                \r\n                    <div className=\"countdown-item\">\r\n                        <SVGCircle radius={hoursRadius} />\r\n                        {Math.floor(hours)}\r\n                        <span> heurs </span>\r\n                    </div>\r\n                \r\n                \r\n                    <div className=\"countdown-item\">\r\n                        <SVGCircle radius={minutesRadius} />\r\n                        {Math.floor(minutes)}\r\n                        <span> minutes </span>\r\n                    </div>\r\n                \r\n                    <div className=\"countdown-item\">\r\n                        <SVGCircle radius={secondsRadius} />\r\n                        {seconds}\r\n                        <span> secondes </span>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\r\n    return (\r\n        ((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n    );\r\n}\r\nconst SVGCircle = ({ radius }) => (\r\n    <svg className=\"countdown-svg\">\r\n        <path\r\n            fill=\"none\"\r\n            stroke=\"#333\"\r\n            strokeWidth=\"4\"\r\n            d={describeArc(50, 50, 48, 0, radius)}\r\n        />\r\n    </svg>\r\n);\r\n\r\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n    var angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n\r\n    return {\r\n        x: centerX + radius * Math.cos(angleInRadians),\r\n        y: centerY + radius * Math.sin(angleInRadians)\r\n    };\r\n}\r\n\r\nfunction describeArc(x, y, radius, startAngle, endAngle) {\r\n    var start = polarToCartesian(x, y, radius, endAngle);\r\n    var end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n    var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\r\n\r\n    var d = [\r\n        'M',\r\n        start.x,\r\n        start.y,\r\n        'A',\r\n        radius,\r\n        radius,\r\n        0,\r\n        largeArcFlag,\r\n        0,\r\n        end.x,\r\n        end.y\r\n    ].join(' ');\r\n\r\n    return d;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}