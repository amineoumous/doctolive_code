{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react'; // import closeImg from './close.svg'\n// import { Transition } from 'react-transition-group';\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nclass ReactFancyBox extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      show: false,\n      maxHeight: 0\n    });\n\n    _defineProperty(this, \"setShow\", () => {\n      this.setState({\n        show: true\n      }); // this.props.onOpen()\n    });\n\n    _defineProperty(this, \"handleClickBox\", event => {\n      if (this.box.contains(event.target)) {\n        return;\n      }\n\n      this.close();\n    });\n\n    _defineProperty(this, \"close\", () => {\n      this.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(this, \"renderThumbnail\", () => {\n      const {\n        thumbnail,\n        image,\n        defaultThumbnailWidth,\n        defaultThumbnailHeight\n      } = this.props;\n\n      if (!thumbnail) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          onClick: this.setShow,\n          className: \"thumbnail\",\n          children: /*#__PURE__*/_jsx(\"img\", {\n            style: {\n              width: defaultThumbnailWidth,\n              height: defaultThumbnailHeight,\n              objectFit: 'cover'\n            },\n            className: \"img-fluid\",\n            src: image,\n            alt: \"thumbnail\"\n          })\n        });\n      }\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        onClick: this.setShow,\n        className: \"thumbnail\",\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: thumbnail,\n          className: \"img-fluid\",\n          alt: \"thumbnail\"\n        })\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      maxHeight: window.innerHeight * 0.7\n    });\n  }\n\n  render() {\n    const {\n      image,\n      caption\n    } = this.props;\n    const imageStyle = {\n      maxHeight: this.state.maxHeight,\n      height: \"100%\",\n      width: 'auto'\n    };\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"react-fancybox\",\n      children: [this.renderThumbnail(), /*#__PURE__*/_jsx(TransitionGroup, {\n        children: this.state.show ? /*#__PURE__*/_jsx(CSSTransition, {\n          timeout: 500,\n          classNames: \"item\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"box\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              ref: box => this.box = box,\n              className: \"image-box\",\n              children: [/*#__PURE__*/_jsx(\"img\", {\n                onClick: this.close,\n                className: \"img-fluid\",\n                className: \"close-btn\",\n                src: \"/image/close.svg\",\n                alt: \"close\"\n              }), /*#__PURE__*/_jsx(\"img\", {\n                style: imageStyle,\n                className: \"img-fluid\",\n                src: image,\n                alt: \"original\"\n              }), caption && /*#__PURE__*/_jsx(\"div\", {\n                className: \"caption\",\n                children: caption\n              })]\n            })\n          })\n        }) : null\n      })]\n    });\n  }\n\n}\n\nReactFancyBox.defaultProps = {\n  thumbnail: '',\n  image: '',\n  defaultThumbnailWidth: 300,\n  defaultThumbnailHeight: 250,\n  caption: '',\n  onOpen: () => {},\n  onClose: () => {},\n  showCloseBtn: true\n};\nexport default ReactFancyBox;","map":null,"metadata":{},"sourceType":"module"}