{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './../styles/globals.css';\nimport './../styles/fancybox.css';\nimport Layout from './../components/Layout';\nimport React from 'react';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\nimport { AppWrapper } from './../context/AppointementContext';\nimport { AuthWrapper } from './../context/AuthContext';\nimport Config from './../EndPoint';\nimport io from \"socket.io-client\";\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\nimport MomentLangue from './../components/MomentLangu';\nconst jss = create({\n  plugins: [...jssPreset().plugins, rtl()]\n});\nexport default function MyApp(props) {\n  const router = useRouter();\n  const {\n    locale\n  } = router;\n  const momentLoc = locale === \"ar\" ? \"ma\" : locale;\n  moment.updateLocale(momentLoc, MomentLangue[momentLoc]);\n  const [socket, setSocket] = React.useState();\n  const {\n    Component,\n    pageProps\n  } = props;\n  React.useEffect(() => {\n    const options = {\n      path: \"/socket.io\",\n      reconnection: true,\n      reconnectionAttempts: Infinity,\n      transports: ['websocket']\n    };\n    let connection = io.connect(Config.BACKEND_URL, options);\n    connection.on('connect', () => {\n      console.log('connect');\n      connection.emit('join-patient', {\n        id: \"p\" + 1\n      }, ({\n        error,\n        message\n      }) => {\n        console.log(error, message);\n\n        if (error) {\n          setSocketError(error, message);\n        } else {}\n      });\n    });\n    connection.on('connect_error', error => {\n      console.log('connect_error', error);\n    });\n    connection.on('disconnect', reason => {\n      console.log('disconnect', reason);\n    });\n    connection.on('reconnect_attempt', () => {\n      console.log('reconnect_attempt');\n    });\n    connection.on('reconnecting', () => {\n      console.log('reconnecting');\n    });\n    connection.on('reconnect', () => {\n      console.log('reconnect');\n    });\n    setSocket(connection);\n  }, []);\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n\n    return () => {};\n  }, []);\n  React.useEffect(() => {\n    switch (locale) {\n      case \"ar\":\n        document.documentElement.lang = 'ar';\n        document.documentElement.dir = 'rtl';\n        break;\n\n      case \"en\":\n        document.documentElement.lang = 'en';\n        document.documentElement.dir = 'ltr';\n        break;\n\n      default:\n        document.documentElement.lang = 'fr';\n        document.documentElement.dir = 'ltr';\n        break;\n    }\n\n    return () => {};\n  }, [locale]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \" Doctolive \"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n      })]\n    }), /*#__PURE__*/_jsx(StylesProvider, {\n      jss: jss,\n      children: /*#__PURE__*/_jsxs(ThemeProvider, {\n        theme: createMuiTheme({\n          direction: locale === \"ar\" ? 'rtl' : \"ltr\",\n          palette: {\n            primary: {\n              main: '#1ab9b9'\n            },\n            secondary: {\n              main: '#19857b'\n            },\n            error: {\n              main: red.A400\n            },\n            background: {\n              default: '#fff'\n            },\n            typography: {\n              fontFamily: ['Barlow', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(',')\n            }\n          }\n        }),\n        children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(AppWrapper, {\n          children: /*#__PURE__*/_jsx(AuthWrapper, {\n            children: /*#__PURE__*/_jsx(Layout, {\n              locale: locale,\n              pathname: router.pathname,\n              children: /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n                socket: socket\n              }))\n            })\n          })\n        })]\n      })\n    })]\n  });\n} // Create a theme instance.","map":null,"metadata":{},"sourceType":"module"}