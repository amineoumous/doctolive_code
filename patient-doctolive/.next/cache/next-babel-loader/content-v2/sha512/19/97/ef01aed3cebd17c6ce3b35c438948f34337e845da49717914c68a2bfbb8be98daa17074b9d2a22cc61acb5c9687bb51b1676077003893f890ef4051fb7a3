{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Card from \"../../../../components/Card/Card.js\";\nimport CardBody from \"../../../../components/Card/CardBody.js\";\nimport { Row, Col, Collapse, Alert } from 'react-bootstrap';\nimport Button from './../../../../components/CustomButtons/Button';\nimport moment from 'moment';\nimport { useAppContext } from './../../../../context/AppointementContext';\nimport { useAuth } from './../../../../context/AuthContext';\nimport StepperManaging from './../../../../components/Stepper/Stepper';\nimport StyledCheckbox from './../../../../components/Checkbox/Checkbox';\nimport { Divider, Select, FormControl, InputLabel, MenuItem, TextField } from '@material-ui/core';\nimport Config from './../../../../EndPoint';\nimport CalendarAvailability from './../../../../components/MedecinWidget/CalendarAvailability';\nimport AuthForm from './../../../../components/Login';\nimport InscriptionForm from './../../../../components/InscriptionForm';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport contentFR from './../../../../contentFR';\nimport contentEN from './../../../../contentEN';\nimport contentAR from './../../../../contentAR';\nexport default function Appointement({\n  medecinInfo\n}) {\n  const router = useRouter();\n  const {\n    locale\n  } = router;\n  const content = locale === \"ar\" ? contentAR.appointment : locale === \"en\" ? contentEN.appointment : contentFR.appointment;\n  const {\n    0: activeStep,\n    1: setActiveStep\n  } = useState(0);\n  const {\n    0: isStepOneValide,\n    1: setIsStepOneValide\n  } = useState(false);\n  const {\n    0: appointementInfo,\n    1: setAppointementInfo\n  } = useState({\n    medecin: medecinInfo,\n    typeConsultation: medecinInfo.teleconsultationIsDisponible ? \"\" : \"consultation_cabinet\"\n  });\n  const {\n    0: addedConsultation,\n    1: setAddedConsultation\n  } = useState({});\n  const {\n    temporary_appointment,\n    setUserTemporary\n  } = useAppContext();\n  const {\n    userData,\n    setUser\n  } = useAuth();\n  useEffect(() => {\n    let changedApp = JSON.stringify(temporary_appointment) !== JSON.stringify(appointementInfo);\n\n    if (changedApp) {\n      setAppointementInfo(oldapp => {\n        return _objectSpread(_objectSpread(_objectSpread({}, oldapp), temporary_appointment), {}, {\n          typeConsultation: medecinInfo.teleconsultationIsDisponible ? temporary_appointment.typeConsultation : \"consultation_cabinet\"\n        });\n      });\n\n      if (temporary_appointment.isStepOneValide) {\n        handleSubmitStepOne();\n      }\n    }\n\n    return () => {};\n  }, [temporary_appointment]);\n  useEffect(() => {\n    let isValideDate = appointementInfo.date ? moment(appointementInfo.date).isValid() : false;\n    let isValideType = appointementInfo.typeConsultation === \"teleconsultation\" || appointementInfo.typeConsultation === \"consultation_cabinet\";\n    let isValideMotif = appointementInfo.motif !== null && appointementInfo.motif !== undefined;\n    setIsStepOneValide(isValideDate && isValideType && isValideMotif);\n    return () => {};\n  }, [appointementInfo]);\n\n  const setApponitementInfo = data => {\n    setAppointementInfo(data);\n    setUserTemporary(data);\n  };\n\n  const StepTwoValid = () => {\n    setActiveStep(2);\n  };\n\n  const stepTreeValide = () => {\n    setActiveStep(3);\n  };\n\n  const stepFourValid = () => {\n    setActiveStep(4);\n  };\n\n  const verification = () => {\n    fetch(`${Config.BACKEND_URL}/patient/info`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `token ${userData.token}`\n      }\n    }).then(r => r.json().then(res => {\n      if (!res.error) {\n        setUser(_objectSpread(_objectSpread({}, userData), {}, {\n          user: res.thisUser\n        }));\n      }\n    })).catch(error => {});\n  };\n\n  const getActiveStepContent = () => {\n    switch (activeStep) {\n      case 0:\n        return /*#__PURE__*/_jsx(StepOne, {\n          apponitementInfo: appointementInfo,\n          setApponitementInfo: setApponitementInfo,\n          medecinInfo: medecinInfo,\n          content: content.step1,\n          locale: locale\n        });\n\n      case 1:\n        return /*#__PURE__*/_jsx(StepTwo, {\n          apponitementInfo: appointementInfo,\n          StepTwoValid: StepTwoValid,\n          activeStep: activeStep,\n          content: content.step2\n        });\n\n      case 2:\n        return /*#__PURE__*/_jsx(StepTree, {\n          apponitementInfo: appointementInfo,\n          verification: verification,\n          stepTreeValide: stepTreeValide,\n          content: content.step3\n        });\n\n      case 3:\n        return /*#__PURE__*/_jsx(StepFour, {\n          apponitementInfo: appointementInfo,\n          stepFourValid: stepFourValid,\n          setAddedConsultation: setAddedConsultation,\n          content: content.step4\n        });\n\n      case 4:\n        return /*#__PURE__*/_jsx(StepFive, {\n          apponitementInfo: addedConsultation,\n          setAddedConsultation: setAddedConsultation,\n          content: content.step5\n        });\n\n      default:\n        return 'Unknown step';\n    }\n  };\n\n  const handleSubmitStepOne = () => {\n    // setFormData({medecin: appointementInfo.medecin.id, typeConsultation: appointementInfo.typeConsultation, motif: appointementInfo.motif, date: appointementInfo.selectedDate});\n    setUserTemporary(_objectSpread(_objectSpread({}, temporary_appointment), {}, {\n      isStepOneValide: true\n    }));\n    setActiveStep(1);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"bg-white p-3\",\n      children: /*#__PURE__*/_jsxs(\"h3\", {\n        className: \"text-center\",\n        children: [\" \", content.takeApp, \" \"]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"scrollable-div\",\n      children: /*#__PURE__*/_jsx(StepperManaging, {\n        activeStep: activeStep,\n        steps: content.steps\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"container\",\n      children: appointementInfo.medecin ? getActiveStepContent() : null\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: isStepOneValide && activeStep === 0 ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxs(Button, {\n          onClick: handleSubmitStepOne,\n          color: \"success\",\n          children: [\" \", content.takeApp, \" \"]\n        })\n      }) : null\n    })]\n  });\n} // export async function getServerSideProps(context) {\n//     const res = await fetch(`${Config.BACKEND_URL}/medecin/${context.params.id}`);\n//     if(!res) {\n//         return {\n//             props: {medecinInfo: {}, error: true, message: \"request failed\"},\n//           }\n//     }\n//     const data = await res.json();\n//     if(!data || data.error) {\n//         return {\n//             props: {medecinInfo: {}, error: true, message: data.message},\n//           }\n//     }\n//     return {\n//       props: {medecinInfo: data.medecin},\n//     }\n// }\n\nexport async function getServerSideProps(context) {\n  try {\n    const res = await fetch(`${Config.BACKEND_URL}/medecin/${context.params.id}`, {\n      headers: {\n        'Origin': Config.CURRENT_URL // Use environment variable\n\n      }\n    });\n\n    if (!res.ok) {\n      console.error(\"Failed to fetch data:\", res.statusText);\n      return {\n        notFound: true\n      };\n    }\n\n    const data = await res.json();\n    console.log(\"Fetched data:\", data);\n    const medecinInfo = (data === null || data === void 0 ? void 0 : data.medecin) || {\n      specialites: [],\n      tarifs: [],\n      diplomes: [],\n      info: {},\n      horaires: []\n    };\n    return {\n      props: {\n        medecinInfo\n      }\n    };\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return {\n      notFound: true\n    };\n  }\n}\n\nfunction StepOne(props) {\n  const {\n    content\n  } = props;\n\n  const handleTile = e => {\n    let target = e.target;\n    props.setApponitementInfo(_objectSpread(_objectSpread({}, props.apponitementInfo), {}, {\n      title: target.value\n    }));\n  };\n\n  const handleDescription = e => {\n    let target = e.target;\n    props.setApponitementInfo(_objectSpread(_objectSpread({}, props.apponitementInfo), {}, {\n      description: target.value\n    }));\n  };\n\n  const handleChange = e => {\n    let target = e.target;\n    props.setApponitementInfo(_objectSpread(_objectSpread({}, props.apponitementInfo), {}, {\n      typeConsultation: target.name\n    }));\n  };\n\n  const handleChangeMotif = e => {\n    let target = e.target;\n    props.setApponitementInfo(_objectSpread(_objectSpread({}, props.apponitementInfo), {}, {\n      motif: target.value\n    }));\n  };\n\n  const handleSelectHour = (day, hour) => {\n    props.setApponitementInfo(_objectSpread(_objectSpread({}, props.apponitementInfo), {}, {\n      date: day,\n      time: hour\n    }));\n  };\n\n  console.log(props.apponitementInfo.typeConsultation);\n  return /*#__PURE__*/_jsx(Card, {\n    children: /*#__PURE__*/_jsx(CardBody, {\n      children: /*#__PURE__*/_jsxs(Col, {\n        dir: props.locale === \"ar\" ? \"rtl\" : \"ltr\",\n        children: [/*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              className: \"renez-vous-label\",\n              children: [\"  \", content.label1, \" \"]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"titre-consultation\",\n              children: /*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                required: true,\n                label: content.label1,\n                variant: \"outlined\",\n                value: props.apponitementInfo.title,\n                name: \"title\",\n                onChange: handleTile,\n                placeholder: content.placeholder1\n              })\n            })\n          })]\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              className: \"renez-vous-label\",\n              children: [\" \", content.label2, \" \"]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"titre-consultation\",\n              children: /*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                required: false,\n                label: content.label2,\n                variant: \"outlined\",\n                value: props.apponitementInfo.description,\n                name: \"description\",\n                onChange: handleDescription,\n                placeholder: content.placeholder2\n              })\n            })\n          })]\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              className: \"renez-vous-label\",\n              children: [\" \", content.label3, \"  \"]\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"pe-layout\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"type-consultation\" + (!props.apponitementInfo.medecin.teleconsultationIsDisponible ? \" disabled\" : \"\"),\n              children: /*#__PURE__*/_jsx(StyledCheckbox, {\n                checked: props.apponitementInfo.typeConsultation === \"teleconsultation\",\n                name: \"teleconsultation\",\n                label: content.inp3,\n                disabled: !props.apponitementInfo.medecin.teleconsultationIsDisponible,\n                onChange: handleChange,\n                rtl: props.locale === \"ar\" ? true : false\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"type-consultation\" + (!props.apponitementInfo.medecin.teleconsultationIsDisponible ? \" disabled\" : \"\"),\n              children: /*#__PURE__*/_jsx(StyledCheckbox, {\n                checked: props.apponitementInfo.typeConsultation === \"consultation_cabinet\",\n                name: \"consultation_cabinet\",\n                label: content.inp4,\n                disabled: !props.apponitementInfo.medecin.teleconsultationIsDisponible,\n                onChange: handleChange,\n                rtl: props.locale === \"ar\" ? true : false\n              })\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              className: \"renez-vous-label\",\n              children: [\" \", content.label4, \" \"]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: !props.apponitementInfo.medecin ? null : /*#__PURE__*/_jsxs(\"p\", {\n              className: \"renez-vous-paragraphe\",\n              children: [\" Dr. \", props.apponitementInfo.medecin.nom + \" \" + props.apponitementInfo.medecin.prenom, \" \"]\n            })\n          })]\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              className: \"renez-vous-label\",\n              children: [\" \", content.label5, \" \"]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: props.apponitementInfo.typeConsultation === \"teleconsultation\" ? /*#__PURE__*/_jsxs(\"p\", {\n              className: \"renez-vous-paragraphe\",\n              children: [\" \", content.teleconsult, \" \"]\n            }) : props.apponitementInfo.typeConsultation === \"consultation_cabinet\" ? /*#__PURE__*/_jsx(\"p\", {\n              className: \"renez-vous-paragraphe\",\n              children: !props.apponitementInfo.medecin ? null : !props.apponitementInfo.medecin.adress ? null : (props.apponitementInfo.medecin.adress.streetName ? props.apponitementInfo.medecin.adress.streetName : \"\") + \" \" + (props.apponitementInfo.medecin.adress.buildingName ? props.apponitementInfo.medecin.adress.buildingName : \"\") + \" \" + (props.apponitementInfo.medecin.adress.floor ? \"étage \" + props.apponitementInfo.medecin.adress.floor : \"\") + \" \" + (props.apponitementInfo.medecin.adress.sector ? props.apponitementInfo.medecin.adress.sector : \"\") + \", \" + (props.apponitementInfo.medecin.adress.codePostal ? props.apponitementInfo.medecin.adress.codePostal : \"\") + \" - \" + (props.apponitementInfo.medecin.city ? props.apponitementInfo.medecin.city.name : \"\")\n            }) : null\n          })]\n        }), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              className: \"renez-vous-label\",\n              children: [\" \", content.label6, \" \"]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(FormControl, {\n              fullWidth: true,\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxs(InputLabel, {\n                id: \"demo-simple-select-label\",\n                children: [\" \", content.motif]\n              }), props.medecinInfo ? props.medecinInfo.tarifs ? /*#__PURE__*/_jsx(Select, {\n                labelId: \"demo-simple-select-label\",\n                id: \"demo-simple-select\",\n                name: \"motif\",\n                label: content.motif,\n                value: props.apponitementInfo.motif ? props.apponitementInfo.motif : \"\",\n                onChange: handleChangeMotif,\n                children: props.medecinInfo.tarifs.length > 0 ? props.medecinInfo.tarifs.map((tarif, index) => {\n                  return /*#__PURE__*/_jsx(MenuItem, {\n                    value: tarif.id,\n                    children: tarif.name\n                  }, index);\n                }) : /*#__PURE__*/_jsxs(MenuItem, {\n                  value: null,\n                  children: [\" \", content.noMotifs, \" \"]\n                })\n              }) : null : null]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              className: \"renez-vous-label\",\n              children: [\" \", content.label7, \" \"]\n            })\n          }), props.apponitementInfo.date && props.apponitementInfo.time ? /*#__PURE__*/_jsx(\"div\", {\n            className: \"pe-layout\",\n            children: /*#__PURE__*/_jsxs(\"p\", {\n              className: \"renez-vous-paragraphe\",\n              children: [\" \", moment(props.apponitementInfo.date + props.apponitementInfo.time, 'YYYY/MM/DDHH:mm').calendar(), \" \"]\n            })\n          }) : /*#__PURE__*/_jsxs(\"div\", {\n            className: \"pe-calendar-layout\",\n            children: [\" \", /*#__PURE__*/_jsx(CalendarAvailability, {\n              showDisponibilite: props.apponitementInfo.medecin,\n              setSelectedHour: handleSelectHour\n            }), \" \"]\n          })]\n        })]\n      })\n    })\n  });\n}\n\nfunction StepTwo(props) {\n  const {\n    userData,\n    setUser\n  } = useAuth();\n  const {\n    content\n  } = props;\n  const {\n    0: signinWay,\n    1: setSigninWay\n  } = useState(\"notSpecified\");\n\n  const postLogin = data => {\n    setUser({\n      isAuth: true,\n      user: data.user,\n      token: data.token\n    });\n  };\n\n  const setUserData = data => {\n    setUser({\n      isAuth: true,\n      user: data.addedUser,\n      token: data.token\n    });\n  };\n\n  useEffect(() => {\n    if (userData.isAuth && props.activeStep === 1) {\n      props.StepTwoValid();\n    }\n\n    return () => {};\n  }, [userData, props]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(Row, {\n      children: [/*#__PURE__*/_jsx(Col, {\n        sm: \"8\",\n        children: signinWay === \"auth\" ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(AuthForm, {\n                submiting: postLogin\n              })\n            })\n          }), /*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsxs(CardBody, {\n              className: \"justify-content-center d-flex flex-column aligh-items-center\",\n              children: [/*#__PURE__*/_jsxs(\"h4\", {\n                className: \"text-center\",\n                children: [\" \", content.new, \" \"]\n              }), /*#__PURE__*/_jsxs(Button, {\n                onClick: () => {\n                  setSigninWay(\"inscription\");\n                },\n                color: \"transparent\",\n                children: [\"  \", content.signup, \"  \"]\n              })]\n            })\n          })]\n        }) : signinWay === \"inscription\" ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(InscriptionForm, {\n                setUserData: setUserData\n              })\n            })\n          }), /*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsxs(CardBody, {\n              className: \"justify-content-center d-flex flex-column aligh-items-center\",\n              children: [/*#__PURE__*/_jsxs(\"h4\", {\n                className: \"text-center\",\n                children: [\" \", content.old, \"   \"]\n              }), /*#__PURE__*/_jsxs(Button, {\n                onClick: () => {\n                  setSigninWay(\"auth\");\n                },\n                color: \"transparent\",\n                children: [\" \", content.signin, \"  \"]\n              })]\n            })\n          })]\n        }) : /*#__PURE__*/_jsxs(Col, {\n          children: [/*#__PURE__*/_jsx(Row, {\n            children: /*#__PURE__*/_jsx(Card, {\n              children: /*#__PURE__*/_jsxs(CardBody, {\n                className: \"justify-content-center d-flex flex-column aligh-items-center\",\n                children: [/*#__PURE__*/_jsxs(\"h4\", {\n                  className: \"text-center\",\n                  children: [\" \", content.new, \" \"]\n                }), /*#__PURE__*/_jsxs(Button, {\n                  onClick: () => {\n                    setSigninWay(\"inscription\");\n                  },\n                  color: \"primary\",\n                  children: [\"  \", content.signup, \"  \"]\n                })]\n              })\n            })\n          }), /*#__PURE__*/_jsx(Row, {\n            children: /*#__PURE__*/_jsx(Card, {\n              children: /*#__PURE__*/_jsxs(CardBody, {\n                className: \"justify-content-center d-flex flex-column aligh-items-center\",\n                children: [/*#__PURE__*/_jsxs(\"h4\", {\n                  className: \"text-center\",\n                  children: [\" \", content.old, \"  \"]\n                }), /*#__PURE__*/_jsxs(Button, {\n                  onClick: () => {\n                    setSigninWay(\"auth\");\n                  },\n                  color: \"info\",\n                  children: [\" \", content.signin, \" \"]\n                })]\n              })\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Col, {\n        sm: \"4\",\n        children: /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsx(CardBody, {\n            children: /*#__PURE__*/_jsxs(Col, {\n              children: [/*#__PURE__*/_jsx(Row, {\n                children: /*#__PURE__*/_jsxs(\"p\", {\n                  className: \"renez-vous-paragraphe\",\n                  children: [\" \", moment(props.apponitementInfo.date + props.apponitementInfo.time, 'YYYY/MM/DDHH:mm').calendar(), \" \"]\n                })\n              }), /*#__PURE__*/_jsx(Row, {\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"\",\n                  children: props.apponitementInfo.typeConsultation === \"teleconsultation\" ? /*#__PURE__*/_jsxs(\"p\", {\n                    className: \"renez-vous-paragraphe\",\n                    children: [\" \", content.teleconsult, \" \"]\n                  }) : props.apponitementInfo.typeConsultation === \"consultation_cabinet\" ? /*#__PURE__*/_jsx(\"p\", {\n                    className: \"renez-vous-paragraphe\",\n                    children: !props.apponitementInfo.medecin ? null : !props.apponitementInfo.medecin.adress ? null : (props.apponitementInfo.medecin.adress.streetName ? props.apponitementInfo.medecin.adress.streetName : \"\") + \" \" + (props.apponitementInfo.medecin.adress.buildingName ? props.apponitementInfo.medecin.adress.buildingName : \"\") + \" \" + (props.apponitementInfo.medecin.adress.floor ? \"étage \" + props.apponitementInfo.medecin.adress.floor : \"\") + \" \" + (props.apponitementInfo.medecin.adress.sector ? props.apponitementInfo.medecin.adress.sector : \"\") + \", \" + (props.apponitementInfo.medecin.adress.codePostal ? props.apponitementInfo.medecin.adress.codePostal : \"\") + \" - \" + (props.apponitementInfo.medecin.city ? props.apponitementInfo.medecin.city.name : \"\")\n                  }) : null\n                })\n              }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Row, {\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"\",\n                  children: !props.apponitementInfo.medecin ? null : /*#__PURE__*/_jsxs(\"p\", {\n                    className: \"renez-vous-paragraphe\",\n                    children: [\" Dr. \", props.apponitementInfo.medecin.nom + \" \" + props.apponitementInfo.medecin.prenom, \" \"]\n                  })\n                })\n              })]\n            })\n          })\n        })\n      })]\n    })\n  });\n}\n\nfunction StepTree(props) {\n  const {\n    userData\n  } = useAuth();\n  const {\n    content\n  } = props;\n  useEffect(() => {\n    if (userData.user) {\n      if (userData.user.active) {\n        props.stepTreeValide();\n      }\n    }\n\n    return () => {};\n  }, [userData]);\n\n  const GenererLink = () => {\n    fetch(`${Config.BACKEND_URL}/patient/generer-link`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `token ${userData.token}`\n      }\n    }).then(r => r.json().then(res => {})).catch(error => {});\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(\"h3\", {\n      children: [\" \", content.title, \" \"]\n    }), /*#__PURE__*/_jsxs(Button, {\n      color: \"primary\",\n      onClick: GenererLink,\n      children: [\" \", content.generate, \" \"]\n    }), /*#__PURE__*/_jsxs(Button, {\n      color: \"primary\",\n      onClick: props.verification,\n      children: [\"  \", content.revirify, \" \"]\n    })]\n  });\n}\n\nfunction StepFour(props) {\n  const {\n    userData\n  } = useAuth();\n  const {\n    content\n  } = props;\n  const {\n    temporary_appointment,\n    setUserTemporary\n  } = useAppContext();\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(\"\");\n\n  const handleConfirm = () => {\n    let data = {\n      medecinId: temporary_appointment.medecin.id,\n      date: temporary_appointment.date,\n      time: temporary_appointment.time,\n      type: temporary_appointment.typeConsultation,\n      tarifId: temporary_appointment.motif,\n      title: temporary_appointment.title,\n      description: temporary_appointment.description\n    };\n    fetch(`${Config.BACKEND_URL}/patient/consultation`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `token ${userData.token}`\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(r => r.json().then(res => {\n      if (!res.error) {\n        setUserTemporary({});\n        props.setAddedConsultation(res.addedConsultation);\n        props.stepFourValid();\n      } else {\n        if (res.validator) {} else {\n          setErrorMessage(res.message);\n        }\n      }\n    }).catch(err => {\n      if (err.response) {\n        if (err.response.validator) {} else {\n          setErrorMessage(err.response.message);\n        }\n      }\n    })).catch(error => {\n      if (error.response) {\n        if (error.response.validator) {} else {\n          setErrorMessage(error.response.message);\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsx(Card, {\n    children: /*#__PURE__*/_jsxs(CardBody, {\n      children: [/*#__PURE__*/_jsxs(\"h3\", {\n        children: [\" \", content.title, \" \"]\n      }), /*#__PURE__*/_jsxs(Col, {\n        children: [/*#__PURE__*/_jsx(Row, {\n          children: /*#__PURE__*/_jsxs(\"p\", {\n            className: \"renez-vous-paragraphe\",\n            children: [\" \", moment(temporary_appointment.date + temporary_appointment.time, 'YYYY/MM/DDHH:mm').calendar(), \" \"]\n          })\n        }), /*#__PURE__*/_jsx(Row, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"\",\n            children: temporary_appointment.typeConsultation === \"teleconsultation\" ? /*#__PURE__*/_jsxs(\"p\", {\n              className: \"renez-vous-paragraphe\",\n              children: [\" \", content.teleconsult, \" \"]\n            }) : temporary_appointment.typeConsultation === \"consultation_cabinet\" ? /*#__PURE__*/_jsx(\"p\", {\n              className: \"renez-vous-paragraphe\",\n              children: !temporary_appointment.medecin ? null : !props.apponitementInfo.medecin.adress ? null : (temporary_appointment.medecin.adress.streetName ? temporary_appointment.medecin.adress.streetName : \"\") + \" \" + (temporary_appointment.medecin.adress.buildingName ? temporary_appointment.medecin.adress.buildingName : \"\") + \" \" + (temporary_appointment.medecin.adress.floor ? \"étage \" + temporary_appointment.medecin.adress.floor : \"\") + \" \" + (temporary_appointment.medecin.adress.sector ? temporary_appointment.medecin.adress.sector : \"\") + \", \" + (temporary_appointment.medecin.adress.codePostal ? temporary_appointment.medecin.adress.codePostal : \"\") + \" - \" + (temporary_appointment.medecin.city ? temporary_appointment.medecin.city.name : \"\")\n            }) : null\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Row, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"\",\n            children: !temporary_appointment.medecin ? null : /*#__PURE__*/_jsxs(\"p\", {\n              className: \"renez-vous-paragraphe\",\n              children: [\" Dr. \", temporary_appointment.medecin.nom + \" \" + temporary_appointment.medecin.prenom, \" \"]\n            })\n          })\n        }), /*#__PURE__*/_jsx(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsx(Collapse, {\n            in: errorMessage !== \"\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"mt-5\",\n              children: /*#__PURE__*/_jsx(Alert, {\n                variant: \"danger\",\n                children: errorMessage\n              })\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(Button, {\n        color: \"primary\",\n        onClick: handleConfirm,\n        children: [\" \", content.confirm, \" \"]\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [\" \", content.rmind, \"  \"]\n      })]\n    })\n  });\n}\n\nfunction StepFive(props) {\n  return /*#__PURE__*/_jsx(Card, {\n    children: /*#__PURE__*/_jsxs(CardBody, {\n      children: [/*#__PURE__*/_jsxs(\"h3\", {\n        children: [\" \", props.content.title, \" \"]\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/account/appointments\",\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          className: \"link btn btn-primary\",\n          children: [\" \", props.content.gerer, \" \"]\n        })\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}