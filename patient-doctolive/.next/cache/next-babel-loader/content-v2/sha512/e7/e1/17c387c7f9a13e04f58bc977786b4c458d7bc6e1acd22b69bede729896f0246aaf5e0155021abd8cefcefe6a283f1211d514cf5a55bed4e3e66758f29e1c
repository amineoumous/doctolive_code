{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n// src/context/state.js\nimport { createContext, useContext } from 'react';\nimport { useState, useEffect } from 'react';\nconst AppContext = /*#__PURE__*/createContext();\nexport function AppWrapper({\n  children\n}) {\n  const {\n    0: temporary_appointment,\n    1: setTemporary_appointment\n  } = useState({});\n\n  const setUserTemporary = data => {\n    localStorage.setItem(\"temporary_appointment\", JSON.stringify(data));\n    setTemporary_appointment(data);\n  };\n\n  useEffect(() => {\n    let existingtemporary_appointment = localStorage.getItem(\"temporary_appointment\");\n    existingtemporary_appointment = existingtemporary_appointment != \"undefined\" ? JSON.parse(existingtemporary_appointment) : {};\n    setTemporary_appointment(existingtemporary_appointment);\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsx(AppContext.Provider, {\n    value: {\n      temporary_appointment,\n      setUserTemporary\n    },\n    children: children\n  });\n}\nexport function useAppContext() {\n  return useContext(AppContext);\n}","map":null,"metadata":{},"sourceType":"module"}