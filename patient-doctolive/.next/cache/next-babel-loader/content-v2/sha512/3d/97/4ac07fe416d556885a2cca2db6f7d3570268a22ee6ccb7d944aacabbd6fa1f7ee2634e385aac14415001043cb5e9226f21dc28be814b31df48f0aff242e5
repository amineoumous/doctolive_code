{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\review\\\\Review.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// components/Review.js or components/Review.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { MdOutlineStarPurple500 } from 'react-icons/md';\n\nconst Review = (_ref) => {\n  let {\n    rating: initialRating,\n    reviews,\n    className,\n    editable,\n    large,\n    ratingText,\n    medium\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"rating\", \"reviews\", \"className\", \"editable\", \"large\", \"ratingText\", \"medium\"]);\n\n  const {\n    0: rating,\n    1: setRating\n  } = useState(initialRating);\n  useEffect(() => {\n    setRating(initialRating);\n  }, [initialRating]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `rating d-flex align-items-center ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, rest), {}, {\n      hidden: true,\n      value: rating,\n      onChange: () => console.log\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), Array(5).fill('').map((el, index) => /*#__PURE__*/_jsxDEV(MdOutlineStarPurple500, {\n      color: index < rating ? \"#FFC546\" : \"rgba(0,0,0,.2)\",\n      className: `me-1 ${index} èè ${initialRating}`,\n      size: 24,\n      \"aria-disabled\": !editable,\n      onClick: () => editable && setRating(index + 1)\n    }, index.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)), reviews && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"review-number\",\n      children: [\"(\", reviews, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this), ratingText && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"rating-text\",\n      children: rating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Review;","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/components/review/Review.jsx"],"names":["React","useEffect","useState","MdOutlineStarPurple500","Review","rating","initialRating","reviews","className","editable","large","ratingText","medium","rest","setRating","console","log","Array","fill","map","el","index","toString"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,sBAAT,QAAuC,gBAAvC;;AAEA,MAAMC,MAAM,GAAG,UAAgG;AAAA,MAA/F;AAAEC,IAAAA,MAAM,EAACC,aAAT;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA,SAAjC;AAA4CC,IAAAA,QAA5C;AAAsDC,IAAAA,KAAtD;AAA6DC,IAAAA,UAA7D;AAAyEC,IAAAA;AAAzE,GAA+F;AAAA,MAAXC,IAAW;;AAC3G,QAAM;AAAA,OAACR,MAAD;AAAA,OAASS;AAAT,MAAsBZ,QAAQ,CAACI,aAAD,CAApC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,SAAS,CAACR,aAAD,CAAT;AACH,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAG,oCAAmCE,SAAU,EAA9D;AAAA,4BACI,iDAAWK,IAAX;AAAiB,MAAA,MAAM,MAAvB;AAAwB,MAAA,KAAK,EAAER,MAA/B;AAAuC,MAAA,QAAQ,EAAE,MAAMU,OAAO,CAACC;AAA/D;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,EAAkBC,GAAlB,CAAsB,CAACC,EAAD,EAAKC,KAAL,kBACnB,QAAC,sBAAD;AAEI,MAAA,KAAK,EAAEA,KAAK,GAAGhB,MAAR,GAAiB,SAAjB,GAA6B,gBAFxC;AAGI,MAAA,SAAS,EAAG,QAAOgB,KAAM,OAAMf,aAAc,EAHjD;AAII,MAAA,IAAI,EAAE,EAJV;AAKI,uBAAe,CAACG,QALpB;AAMI,MAAA,OAAO,EAAE,MAAMA,QAAQ,IAAIK,SAAS,CAACO,KAAK,GAAG,CAAT;AANxC,OACSA,KAAK,CAACC,QAAN,EADT;AAAA;AAAA;AAAA;AAAA,YADH,CAFL,EAYKf,OAAO,iBAAI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA,sBAAkCA,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAZhB,EAaKI,UAAU,iBAAI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,gBAA+BN;AAA/B;AAAA;AAAA;AAAA;AAAA,YAbnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAxBD;;AA0BA,eAAeD,MAAf","sourcesContent":["// components/Review.js or components/Review.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdOutlineStarPurple500 } from 'react-icons/md';\r\n\r\nconst Review = ({ rating:initialRating, reviews, className, editable, large, ratingText, medium, ...rest }) => {\r\n    const [rating, setRating] = useState(initialRating);\r\n\r\n    useEffect(() => {\r\n        setRating(initialRating);\r\n    }, [initialRating]);\r\n\r\n    return (\r\n        <div className={`rating d-flex align-items-center ${className}`}>\r\n            <input {...rest} hidden value={rating} onChange={() => console.log} />\r\n            {Array(5).fill('').map((el, index) => (\r\n                <MdOutlineStarPurple500\r\n                    key={index.toString()}\r\n                    color={index < rating ? \"#FFC546\" : \"rgba(0,0,0,.2)\"}\r\n                    className={`me-1 ${index} èè ${initialRating}`}\r\n                    size={24}\r\n                    aria-disabled={!editable}\r\n                    onClick={() => editable && setRating(index + 1)}\r\n                />\r\n            ))}\r\n            {reviews && <span className=\"review-number\">({reviews})</span>}\r\n            {ratingText && <span className=\"rating-text\">{rating}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Review;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}