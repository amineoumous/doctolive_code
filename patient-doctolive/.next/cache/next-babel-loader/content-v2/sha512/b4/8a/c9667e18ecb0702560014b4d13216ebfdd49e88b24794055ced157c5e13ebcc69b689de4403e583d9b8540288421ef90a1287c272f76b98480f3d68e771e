{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n// src/context/state.js\nimport { createContext, useContext } from 'react';\nimport { useState, useEffect } from 'react';\nvar AppContext = /*#__PURE__*/createContext();\nexport function AppWrapper(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      temporary_appointment = _useState[0],\n      setTemporary_appointment = _useState[1];\n\n  var setUserTemporary = function setUserTemporary(data) {\n    localStorage.setItem(\"temporary_appointment\", JSON.stringify(data));\n    setTemporary_appointment(data);\n  };\n\n  useEffect(function () {\n    var existingtemporary_appointment = localStorage.getItem(\"temporary_appointment\");\n    existingtemporary_appointment = existingtemporary_appointment != \"undefined\" ? JSON.parse(existingtemporary_appointment) : {};\n    setTemporary_appointment(existingtemporary_appointment);\n    return function () {};\n  }, []);\n  return /*#__PURE__*/_jsx(AppContext.Provider, {\n    value: {\n      temporary_appointment: temporary_appointment,\n      setUserTemporary: setUserTemporary\n    },\n    children: children\n  });\n}\nexport function useAppContext() {\n  return useContext(AppContext);\n}","map":null,"metadata":{},"sourceType":"module"}