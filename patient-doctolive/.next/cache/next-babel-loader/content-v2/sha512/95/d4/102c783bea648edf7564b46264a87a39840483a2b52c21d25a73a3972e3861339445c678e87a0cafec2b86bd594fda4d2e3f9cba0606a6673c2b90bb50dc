{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\pages\\\\recherche\\\\[specialite]\\\\[ville].js\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head';\nimport { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Config from './../../../EndPoint';\nimport MedecinWidget from './../../../components/MedecinWidget/MedecinWidget';\nimport MapAccess from './../../../components/MedecinWidget/MapAccess';\nimport Search from './../../../components/Search/Search';\nimport { useRouter } from 'next/router';\nimport contentFR from './../../../contentFR';\nimport contentEN from './../../../contentEN';\nimport contentAR from './../../../contentAR';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"./../../../assets/jss/recherchePage.js\";\nvar useStyles = makeStyles(styles);\nexport var __N_SSP = true;\nexport default function magasin(_ref) {\n  _s();\n\n  var _this = this;\n\n  var medecins = _ref.medecins,\n      locations = _ref.locations;\n  var router = useRouter();\n  var locale = router.locale;\n  var content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n\n  var _useState = useState(1),\n      screenWidth = _useState[0],\n      setScreenWidth = _useState[1];\n\n  var classes = useStyles();\n  useEffect(function () {\n    function updateSize() {\n      setScreenWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return function () {\n      window.removeEventListener('resize', updateSize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" DOCTOLIVE - Rechercher m\\xE9decin \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), medecins.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n      className: \"content-recherche m-0\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: \"7\",\n        md: \"12\",\n        xs: \"12\",\n        children: !medecins ? null : medecins.map(function (researched, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MedecinWidget, {\n              medecin: researched,\n              locale: locale,\n              content: content.resultResearch.widget\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"5\",\n        md: \"12\",\n        xs: \"12\",\n        className: \"order-sm-last\",\n        children: /*#__PURE__*/_jsxDEV(MapAccess, {\n          apiKey: Config.apiKey,\n          locations: locations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" m-0\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: classes.header,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.bakgroudContainer,\n            style: locale === \"ar\" ? {\n              backgroundImage: \"url(/image/search.svg)\",\n              backgroundPosition: \"bottom left\",\n              textAlign: \"right\"\n            } : {\n              backgroundImage: \"url(/image/search.svg)\",\n              backgroundPosition: \"85% 75%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-fluid\",\n              id: \"recherche-medecin\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: classes.h1,\n                  children: [\"  \", content.resultResearch.noReseault, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: classes.h2,\n                  children: [\" \", content.heading2, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Search, {\n                content: content.resultResearch,\n                locale: locale\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(magasin, \"QFuAJhWeXMQR9o9fv0E2fie1oIA=\", false, function () {\n  return [useRouter, useStyles];\n});","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/pages/recherche/[specialite]/[ville].js"],"names":["Head","useState","useEffect","Row","Col","Config","MedecinWidget","MapAccess","Search","useRouter","contentFR","contentEN","contentAR","makeStyles","styles","useStyles","magasin","medecins","locations","router","locale","content","screenWidth","setScreenWidth","classes","updateSize","window","innerWidth","addEventListener","removeEventListener","length","map","researched","index","resultResearch","widget","apiKey","header","bakgroudContainer","backgroundImage","backgroundPosition","textAlign","h1","noReseault","h2","heading2"],"mappings":"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","sourcesContent":["import Head from 'next/head'\r\nimport {useState, useEffect} from 'react'\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\nimport Config from './../../../EndPoint'\r\n\r\nimport MedecinWidget from './../../../components/MedecinWidget/MedecinWidget';\r\nimport MapAccess from './../../../components/MedecinWidget/MapAccess';\r\n\r\nimport Search from './../../../components/Search/Search'\r\n\r\nimport { useRouter } from 'next/router';\r\n\r\nimport contentFR from './../../../contentFR'\r\nimport contentEN from './../../../contentEN'\r\nimport contentAR from './../../../contentAR'\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport styles from \"./../../../assets/jss/recherchePage.js\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function magasin({medecins, locations}) {\r\n    const router = useRouter();\r\n    const {locale} = router;\r\n  \r\n    const content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\r\n\r\n    const [screenWidth, setScreenWidth] = useState(1);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        function updateSize() {\r\n            setScreenWidth(window.innerWidth)\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', updateSize)\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <>\r\n            <Head>\r\n                <title> DOCTOLIVE - Rechercher médecin </title>\r\n            </Head>\r\n             \r\n            {\r\n                medecins.length> 0 ?\r\n                <Row className=\"content-recherche m-0\">\r\n                    <Col lg=\"7\" md=\"12\" xs=\"12\">\r\n                        { !medecins ? null :\r\n                            medecins.map((researched, index) => {\r\n                                return(\r\n                                    <div key= {index}>\r\n                                        <MedecinWidget medecin={researched} locale={locale} content={content.resultResearch.widget} />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Col>\r\n                    <Col lg=\"5\" md=\"12\" xs=\"12\" className=\"order-sm-last\">\r\n                        <MapAccess apiKey={Config.apiKey} locations={locations} />\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <div className= \" \">\r\n                    <div className=\" m-0\">\r\n                        <section className= {classes.header}>\r\n                            <div className= {classes.bakgroudContainer} style={locale === \"ar\" ? {backgroundImage: `url(/image/search.svg)`, backgroundPosition: \"bottom left\", textAlign: \"right\"} : {backgroundImage: `url(/image/search.svg)`, backgroundPosition: \"85% 75%\"}}>\r\n                                <div className=\"container-fluid\" id=\"recherche-medecin\">\r\n                                    <div className=\"mb-3\">\r\n                                        <h1 className={classes.h1}>  {content.resultResearch.noReseault} </h1>\r\n                                        <h2 className={classes.h2}> {content.heading2} </h2>\r\n                                    </div>\r\n                                    <Search content={content.resultResearch} locale={locale} />\r\n                                    </div>\r\n                            </div>\r\n                        </section>\r\n                       \r\n                    </div>\r\n                    \r\n                </div>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n    const res = await fetch(`${Config.BACKEND_URL}/medecin/${context.params.specialite}/${context.params.ville}`)\r\n    const data = await res.json()\r\n    if(data.error){\r\n        return {\r\n             props: {medecins: data.medecins, locations: data.medecins.map((medecin) => medecin.adress)},\r\n            props: {medecins: [], locations: []},\r\n          }\r\n    }\r\n    return {\r\n      props: {medecins: data.medecins, locations: data.medecins.map((medecin) => medecin.adress)},\r\n    //   props: {medecins: [], locations: []},\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}