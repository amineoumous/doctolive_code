{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\Checkbox\\\\Checkbox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './../../assets/jss/CheckboxStyle';\nconst useStyles = makeStyles(styles); // Inspired by blueprintjs\n\nexport default function StyledCheckbox(_ref) {\n  let {\n    name,\n    label,\n    rtl\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"label\", \"rtl\"]);\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: classes.checkboxLabel,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      name: name,\n      type: \"checkbox\",\n      className: classes.input + (rtl ? \" rtl\" : \" ltr\")\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.span\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.spanText,\n      children: [\" \", label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\nStyledCheckbox.defaultProps = {\n  checked: false,\n  onClick: () => {},\n  label: \"\",\n  name: \"checkbox\",\n  rtl: false\n};\nStyledCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  name: PropTypes.string,\n  rtl: PropTypes.bool,\n  label: PropTypes.string,\n  onChange: PropTypes.func\n};","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/components/Checkbox/Checkbox.js"],"names":["React","PropTypes","makeStyles","styles","useStyles","StyledCheckbox","name","label","rtl","rest","classes","checkboxLabel","input","span","spanText","defaultProps","checked","onClick","propTypes","bool","string","onChange","func"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,MAAMC,SAAS,GAAGF,UAAU,CAACC,MAAD,CAA5B,C,CAEA;;AACA,eAAe,SAASE,cAAT,OAAqD;AAAA,MAA7B;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAaC,IAAAA;AAAb,GAA6B;AAAA,MAAPC,IAAO;;AAClE,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,sBACE;AAAO,IAAA,SAAS,EAAEM,OAAO,CAACC,aAA1B;AAAA,4BACA;AACI,MAAA,IAAI,EAAEL,IADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,SAAS,EAAGI,OAAO,CAACE,KAAR,IAAiBJ,GAAG,GAAG,MAAH,GAAY,MAAhC;AAHhB,OAIQC,IAJR;AAAA;AAAA;AAAA;AAAA,YADA,eAOA;AAAM,MAAA,SAAS,EAAGC,OAAO,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA,YAPA,eAQA;AAAM,MAAA,SAAS,EAAGH,OAAO,CAACI,QAA1B;AAAA,sBAAsCP,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;AAEGF,cAAc,CAACU,YAAf,GAA8B;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,OAAO,EAAE,MAAM,CAAI,CAFO;AAG1BV,EAAAA,KAAK,EAAC,EAHoB;AAI1BD,EAAAA,IAAI,EAAC,UAJqB;AAK1BE,EAAAA,GAAG,EAAE;AALqB,CAA9B;AAQAH,cAAc,CAACa,SAAf,GAA2B;AACvBF,EAAAA,OAAO,EAAEf,SAAS,CAACkB,IADI;AAEvBb,EAAAA,IAAI,EAAEL,SAAS,CAACmB,MAFO;AAGvBZ,EAAAA,GAAG,EAAEP,SAAS,CAACkB,IAHQ;AAIvBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,MAJM;AAKvBC,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB;AALG,CAA3B","sourcesContent":["\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './../../assets/jss/CheckboxStyle'\r\nconst useStyles = makeStyles(styles);\r\n\r\n// Inspired by blueprintjs\r\nexport default function StyledCheckbox({name, label,rtl,  ...rest}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <label className={classes.checkboxLabel}> \r\n    <input\r\n        name={name}\r\n        type=\"checkbox\"\r\n        className={ classes.input + (rtl ? \" rtl\" : \" ltr\")}\r\n        {...rest}\r\n    />\r\n    <span className= {classes.span} ></span>\r\n    <span className= {classes.spanText}> {label} </span>  \r\n    </label>\r\n  );\r\n}\r\n\r\n    StyledCheckbox.defaultProps = {\r\n        checked: false,\r\n        onClick: () => {  },\r\n        label:\"\",\r\n        name:\"checkbox\",\r\n        rtl: false\r\n    };\r\n\r\n    StyledCheckbox.propTypes = {\r\n        checked: PropTypes.bool,\r\n        name: PropTypes.string,\r\n        rtl: PropTypes.bool,\r\n        label: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n\r\n\r\n    };\r\n  "]},"metadata":{},"sourceType":"module"}