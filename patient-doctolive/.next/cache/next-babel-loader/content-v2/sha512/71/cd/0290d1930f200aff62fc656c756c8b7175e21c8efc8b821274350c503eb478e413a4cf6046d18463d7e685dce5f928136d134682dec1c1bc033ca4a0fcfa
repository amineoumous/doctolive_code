{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\MedecinWidget\\\\MapAccess.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\"; // import markerIcon from 'assets/img/marker.png'\n\nvar libraries = [\"places\"];\nvar mapContainerStyle = {\n  height: \"50vh\",\n  width: \"100%\"\n};\nvar mapStyles = [{\n  \"featureType\": \"road\",\n  \"elementType\": \"labels\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"labels\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"transit\",\n  \"elementType\": \"labels.text\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}];\nvar options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  scrollwheel: false\n};\nexport default function App(props) {\n  _s();\n\n  var _this = this;\n\n  var _useLoadScript = useLoadScript({\n    googleMapsApiKey: props.apiKey,\n    libraries: libraries\n  }),\n      isLoaded = _useLoadScript.isLoaded,\n      loadError = _useLoadScript.loadError;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      markers = _React$useState2[0],\n      setMarkers = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    lat: 33.5795703,\n    lng: -7.5874518\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      center = _React$useState4[0],\n      setCenter = _React$useState4[1];\n\n  var handleClickMarker = function handleClickMarker() {};\n\n  React.useEffect(function () {\n    if (props.locations) {\n      if (props.locations.length > 0) {\n        if (props.locations[0]) {\n          setMarkers(props.locations);\n          setCenter({\n            lat: props.locations[0][\"latitude\"],\n            lng: props.locations[0][\"longitude\"]\n          });\n        }\n      }\n    }\n  }, [props.locations]);\n  var mapRef = React.useRef();\n  var onMapLoad = React.useCallback(function (map) {\n    mapRef.current = map;\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: mapContainerStyle,\n      zoom: 8,\n      center: center,\n      options: options,\n      onLoad: onMapLoad,\n      children: markers.map(function (marker, index) {\n        if (!marker) {\n          return null;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: marker.latitude,\n            lng: marker.longitude\n          },\n          animation: window.google.maps.Animation.DROP,\n          icon: \"/image/marker.png\",\n          onClick: function onClick() {\n            handleClickMarker(marker);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wA0xkWsh/2INPjq7oBMUZfYRznQ=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/components/MedecinWidget/MapAccess.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","libraries","mapContainerStyle","height","width","mapStyles","options","styles","disableDefaultUI","zoomControl","scrollwheel","App","props","googleMapsApiKey","apiKey","isLoaded","loadError","useState","markers","setMarkers","lat","lng","center","setCenter","handleClickMarker","useEffect","locations","length","mapRef","useRef","onMapLoad","useCallback","map","current","marker","index","latitude","longitude","window","google","maps","Animation","DROP"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\n// import markerIcon from 'assets/img/marker.png'\r\nconst libraries = [\"places\"];\r\n\r\nconst mapContainerStyle = {\r\n  height: \"50vh\",\r\n  width: \"100%\",\r\n};\r\n\r\n\r\nconst mapStyles = [\r\n  {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels\",\r\n      \"stylers\": [\r\n          {\r\n              \"visibility\": \"off\"\r\n          }\r\n      ]\r\n  },\r\n  {\r\n      \"featureType\": \"poi\",\r\n      \"elementType\": \"labels\",\r\n      \"stylers\": [\r\n          {\r\n              \"visibility\": \"off\"\r\n          }\r\n      ]\r\n  },\r\n  {\r\n      \"featureType\": \"transit\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n          {\r\n              \"visibility\": \"off\"\r\n          }\r\n      ]\r\n  }\r\n];\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n  scrollwheel: false,\r\n};\r\n\r\n\r\nexport default function App(props) {\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: props.apiKey,\r\n    libraries,\r\n  });\r\n  const [markers, setMarkers] = React.useState([]);\r\n\r\n  const [center, setCenter] = React.useState({\r\n    lat: 33.5795703,\r\n  lng: -7.5874518,\r\n  })\r\n  const handleClickMarker = () => {\r\n\r\n  }\r\n \r\n  React.useEffect(() => {\r\n      if(props.locations){\r\n        if(props.locations.length > 0){\r\n          if(props.locations[0]){\r\n            setMarkers(props.locations);\r\n\r\n            setCenter({lat: props.locations[0][\"latitude\"], lng: props.locations[0][\"longitude\"]  })\r\n\r\n          }\r\n        }\r\n      }\r\n    \r\n    \r\n  }, [props.locations])\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={8}\r\n        center={center}\r\n        options={options}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {\r\n          markers.map((marker, index) => {\r\n            if(!marker) {\r\n              return null\r\n            }\r\n            return(\r\n              <Marker\r\n              key={index}\r\n              position={{ lat: marker.latitude, lng: marker.longitude }}\r\n              animation={window.google.maps.Animation.DROP}\r\n              icon={\"/image/marker.png\"}\r\n              onClick={() => {\r\n                handleClickMarker(marker);\r\n              }}\r\n         \r\n            />\r\n            )\r\n          \r\n          })\r\n        }\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}