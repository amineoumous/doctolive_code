{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\Search\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Col } from 'react-bootstrap'; // @material-ui/icons\n\nimport Link from 'next/link';\nimport { BsSearch } from \"react-icons/bs\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport { BiCurrentLocation } from \"react-icons/bi\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport fetch from 'unfetch';\nimport Config from './../../EndPoint';\nimport { useRouter } from 'next/router';\n\nconst style = theme => ({\n  endAdornment: {\n    display: \"none\",\n    \"& .MuiAutocomplete-endAdornment\": {\n      display: \"none\"\n    }\n  },\n  searchContainer: {\n    paddingTop: \"120px\"\n  },\n  searchContent: {\n    zIndex: 5\n  },\n  searchBar: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    backgroundColor: \"#fff\",\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: 'center'\n    }\n  },\n  searchBarQuery: {\n    \"-ms-flex\": \"0 0 240px\",\n    position: \"relative\",\n    width: \"400px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flex: \"0 0 100%\",\n      width: \"100%\"\n    }\n  },\n  searchInputWrapper: {\n    background: \"#fff\",\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: 60,\n    '& .searchbar-input-icon': {\n      position: \"absolute\",\n      top: 18,\n      left: 16,\n      width: 24,\n      height: 24,\n      pointerEvents: \"none\",\n      fill: \"#7791a2\"\n    },\n    '& .searchbar-input-icon-ar': {\n      position: \"absolute\",\n      top: 18,\n      right: 16,\n      width: 24,\n      height: 24,\n      pointerEvents: \"none\",\n      fill: \"#7791a2\"\n    }\n  },\n  searchbarPlace: {\n    \"-ms-flex\": \" 0 0 490px\",\n    flex: \" 0 0 490px\",\n    marginRight: \"12px\",\n    position: \"relative\",\n    width: \"490px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flex: \"0 0 100%\",\n      width: \"100%\",\n      marginBottom: 12\n    }\n  },\n  searchButton: {\n    cursor: \"pointer\",\n    position: \"absolute\",\n    width: \"45px\",\n    right: 0,\n    transform: \"translateX(100%) translateX(-51px)\",\n    color: \"#435f71\",\n    transition: \"-webkit-transform 400ms\",\n    transition: \" transform 400ms\",\n    transition: \"transform 400ms, -webkit-transform 400ms\",\n    transitionSelay: \"100ms\",\n    height: \"100%\",\n    textAlign: \"left\",\n    backgroundColor: \"white\",\n    border: 0,\n    outline: \"none\",\n    boxShadow: \"none\",\n    appearance: \"none !important\",\n    textDecoration: \"none !important\",\n    margin: 0,\n    display: \"inline-block\",\n    padding: \"0 16px\"\n  },\n  searchSubmitButton: {\n    borderRadius: \" 8px\",\n    outline: \"none\",\n    boxShadow: \"none\",\n    marginRight: 5,\n    marginBottom: 5,\n    marginTop: 5,\n    width: \"162px\",\n    height: \"50px\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"100%\",\n      marginBottom: 12\n    }\n  }\n});\n\nconst useStyles = makeStyles(style);\nexport default function SearchInput({\n  content,\n  locale\n}) {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: medecin,\n    1: setMedecin\n  } = useState({});\n  const {\n    0: ville,\n    1: setVille\n  } = useState({});\n  const {\n    0: loadingMedecin,\n    1: setLoadingMedecin\n  } = useState(false);\n  const {\n    0: isSearched,\n    1: setIsSerached\n  } = useState(false);\n  const {\n    0: LoadingCities,\n    1: setLoadingCities\n  } = useState(false);\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(\"\");\n  const {\n    0: searchFetched,\n    1: setSearchFetched\n  } = useState([]);\n  const {\n    0: cities,\n    1: setCities\n  } = useState([]);\n  useEffect(async () => {\n    try {\n      const res = await fetch(`${Config.BACKEND_URL}/medecin/search/specialite/${inputValue}`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n\n      if (data.speciality) {\n        setSearchFetched([...data.speciality, ...data.medecins]);\n      }\n    } catch (error) {}\n\n    return () => {};\n  }, [inputValue]);\n  useEffect(async () => {\n    try {\n      const res = await fetch(`${Config.BACKEND_URL}/city`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n      setCities(data.cities);\n    } catch (error) {}\n\n    return () => {};\n  }, []);\n\n  const submiting = e => {\n    e.preventDefault();\n    let Medecin_rechercher = medecin ? medecin.name ? medecin.name : medecin.nom : medecin;\n    let ville_rechercher = ville ? ville.name : ville;\n\n    if (!Medecin_rechercher) {\n      Medecin_rechercher = \"generaliste\";\n    } else {\n      if (Medecin_rechercher.trim() === \"\") {\n        Medecin_rechercher = \"medecin-generaliste\";\n      }\n    }\n\n    if (!ville_rechercher) {\n      ville_rechercher = \"maroc\";\n    } else {\n      if (ville_rechercher.trim() === \"\") {\n        // setVille({name: \"maroc\"})\n        ville_rechercher = \"maroc\";\n      }\n    }\n\n    return router.push({\n      pathname: `/recherche/${Medecin_rechercher}/${ville_rechercher}`\n    });\n  };\n\n  const selectPosition = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n    });\n  };\n\n  const handleSearchSpecialite = (e, newInputValue) => {\n    setMedecin(newInputValue);\n  };\n\n  const handleSearchSpecialitea = (e, newInputValue) => {\n    if (newInputValue.length > 0) {\n      setInputValue(newInputValue);\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.searchContent,\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      lg: \"10\",\n      md: \"10\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.searchBar,\n        onSubmit: submiting,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.searchBarQuery,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.searchInputWrapper + \" search\",\n            children: [/*#__PURE__*/_jsxDEV(BsSearch, {\n              className: locale === \"ar\" ? \"searchbar-input-icon-ar\" : \"searchbar-input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              onInputChange: handleSearchSpecialitea,\n              loading: loadingMedecin,\n              noOptionsText: isSearched ? content.noOption : content.noOption2,\n              groupBy: option => option.name ? \"specialite\" : \"medecin\",\n              id: \"suggestion-medecin\",\n              loadingText: content.loading,\n              options: searchFetched,\n              debug: true,\n              getOptionLabel: option => option.nom ? option.nom + \" \" + option.prenom + \" \" + option.email + \" \" + option.phone : option.name ? option.name : \"\",\n              renderOption: option => option.nom ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: `/doctor/${option.id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"d-flex w-100\",\n                    children: [option.image ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"searchbar-result-profile-avatar \",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"img-fluid\",\n                        src: `${Config.BACKEND_URL}/${option.image}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 120\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 69\n                    }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\" Dr. \", option.nom, \" \", option.prenom, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: option.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this),\n              onChange: (e, newInputValue) => handleSearchSpecialite(e, newInputValue),\n              value: medecin,\n              style: {\n                width: \"100%\",\n                height: \"60px\"\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                placeholder: content.recherchelabel\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.searchbarPlace,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.searchInputWrapper + \" search\",\n            style: {\n              overflow: \"hidden\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(MdLocationOn, {\n              className: locale === \"ar\" ? \"searchbar-input-icon-ar\" : \"searchbar-input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"suggestion-villes\",\n              options: cities,\n              loading: LoadingCities,\n              loadingText: content.cityLoading,\n              getOptionLabel: option => option.name ? option.name : \"\",\n              onChange: (e, newInputValue) => setVille(newInputValue),\n              value: ville,\n              style: {\n                width: \"100%\",\n                height: \"60px\"\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                placeholder: content.citylabel\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: selectPosition,\n              className: classes.searchButton,\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(BiCurrentLocation, {\n                  className: locale === \"ar\" ? \"searchbar-input-icon-ar\" : \"searchbar-input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.searchSubmitButton + \" btn btn-submit\",\n          role: \"button\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [locale === \"ar\" ? \"Rechercher \" : \"Rechercher \", \"  \", /*#__PURE__*/_jsxDEV(BsSearch, {\n              className: locale === \"ar\" ? \"searchbar-input-icon-ar\" : \"searchbar-input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 81\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this);\n}\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node\n}; // SearchInput.getInitialProps = async (ctx) => {\n//     const res = await fetch(`${Config.BACKEND_URL}/city`);\n//     console.log(res)\n//     if(res.status === 404) return { villes: [] }\n//     const json = await res.json()\n//     return { villes:json.cities }\n//   }","map":{"version":3,"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/components/Search/Search.js"],"names":["React","useState","useEffect","PropTypes","makeStyles","Col","Link","BsSearch","MdLocationOn","BiCurrentLocation","Autocomplete","TextField","fetch","Config","useRouter","style","theme","endAdornment","display","searchContainer","paddingTop","searchContent","zIndex","searchBar","flexWrap","backgroundColor","breakpoints","down","justifyContent","searchBarQuery","position","width","flex","searchInputWrapper","background","height","top","left","pointerEvents","fill","right","searchbarPlace","marginRight","marginBottom","searchButton","cursor","transform","color","transition","transitionSelay","textAlign","border","outline","boxShadow","appearance","textDecoration","margin","padding","searchSubmitButton","borderRadius","marginTop","useStyles","SearchInput","content","locale","classes","router","medecin","setMedecin","ville","setVille","loadingMedecin","setLoadingMedecin","isSearched","setIsSerached","LoadingCities","setLoadingCities","inputValue","setInputValue","searchFetched","setSearchFetched","cities","setCities","res","BACKEND_URL","headers","data","json","speciality","medecins","error","submiting","e","preventDefault","Medecin_rechercher","name","nom","ville_rechercher","trim","push","pathname","selectPosition","navigator","geolocation","getCurrentPosition","console","log","handleSearchSpecialite","newInputValue","handleSearchSpecialitea","length","noOption","noOption2","option","loading","prenom","email","phone","id","image","params","recherchelabel","overflow","cityLoading","citylabel","propTypes","className","string","plain","bool","profile","chart","children","node"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Col } from 'react-bootstrap';\r\n// @material-ui/icons\r\n\r\nimport Link from 'next/link'\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport {MdLocationOn} from \"react-icons/md\"\r\nimport {BiCurrentLocation} from \"react-icons/bi\"\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport fetch from 'unfetch'\r\n\r\nimport Config from './../../EndPoint'\r\n\r\nimport { useRouter } from 'next/router'\r\n\r\n\r\nconst style = theme=>( {\r\n    endAdornment:{\r\n        display:\"none\",\r\n        \"& .MuiAutocomplete-endAdornment\": {\r\n            display:\"none\"\r\n        }\r\n    },\r\n    searchContainer: {\r\n        paddingTop: \"120px\",\r\n    },\r\n    searchContent:{\r\n        zIndex: 5,\r\n    },\r\n \r\n    searchBar:{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        backgroundColor:\"#fff\",\r\n        \r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            justifyContent: 'center',\r\n        }\r\n    },\r\n    searchBarQuery:{\r\n        \"-ms-flex\": \"0 0 240px\",\r\n    \r\n     \r\n        position: \"relative\",\r\n       \r\n        width: \"400px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            flex: \"0 0 100%\",\r\n            width: \"100%\",\r\n        }\r\n    },\r\n \r\n    searchInputWrapper: {\r\n  \r\n        background: \"#fff\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        height:60,\r\n\r\n        '& .searchbar-input-icon' : {\r\n            position: \"absolute\",\r\n            top: 18,\r\n            left: 16,\r\n            width: 24,\r\n            height: 24,\r\n            pointerEvents: \"none\",\r\n            fill: \"#7791a2\",\r\n        },\r\n        '& .searchbar-input-icon-ar' : {\r\n            position: \"absolute\",\r\n            top: 18,\r\n            right: 16,\r\n            width: 24,\r\n            height: 24,\r\n            pointerEvents: \"none\",\r\n            fill: \"#7791a2\",\r\n        }\r\n    },\r\n    \r\n    searchbarPlace: {\r\n        \"-ms-flex\":\" 0 0 490px\",\r\n        flex:\" 0 0 490px\",\r\n        marginRight: \"12px\",\r\n        position: \"relative\",\r\n        width: \"490px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            flex: \"0 0 100%\",\r\n            width: \"100%\",\r\n            marginBottom: 12\r\n        }\r\n    },\r\n\r\n    searchButton: {\r\n        cursor: \"pointer\",\r\n        position: \"absolute\",\r\n        width: \"45px\",\r\n        right: 0,\r\n        transform: \"translateX(100%) translateX(-51px)\",\r\n        color: \"#435f71\",\r\n        transition: \"-webkit-transform 400ms\",\r\n        transition:\" transform 400ms\",\r\n        transition: \"transform 400ms, -webkit-transform 400ms\",\r\n        transitionSelay: \"100ms\",\r\n        height: \"100%\",\r\n        textAlign: \"left\",\r\n        backgroundColor: \"white\",\r\n        border: 0,\r\n        outline: \"none\",\r\n        boxShadow: \"none\",\r\n        appearance: \"none !important\",\r\n        textDecoration: \"none !important\",\r\n        margin: 0,\r\n        display: \"inline-block\",\r\n        padding: \"0 16px\",\r\n        \r\n    },\r\n    searchSubmitButton: {\r\n        borderRadius: \" 8px\",\r\n        outline: \"none\",\r\n        boxShadow: \"none\",\r\n        marginRight: 5,\r\n        marginBottom: 5,\r\n        marginTop: 5,\r\n        width: \"162px\",\r\n        height: \"50px\",\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            width: \"100%\",\r\n            marginBottom: 12\r\n        }\r\n    },\r\n   \r\n})\r\nconst useStyles = makeStyles(style);\r\n\r\nexport default function SearchInput({content, locale}) {\r\n  const classes = useStyles();\r\n  const router = useRouter()\r\n\r\n  const [medecin, setMedecin] = useState({});\r\n  const [ville, setVille] = useState({});\r\n  const [loadingMedecin, setLoadingMedecin] = useState(false);\r\n  const [isSearched, setIsSerached] = useState(false);\r\n  const [LoadingCities, setLoadingCities] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [searchFetched, setSearchFetched] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n\r\n\r\n  useEffect( async () => {\r\n      try {\r\n          \r\n        const res =  await fetch(`${Config.BACKEND_URL}/medecin/search/specialite/${inputValue}`, {\r\n            headers: {\r\n                'Accept': 'application/json', \r\n                'Content-Type': 'application/json',\r\n    \r\n            },\r\n        })\r\n        const data = await res.json();\r\n        if(data.speciality){\r\n            setSearchFetched([...data.speciality, ...data.medecins]);\r\n        }\r\n\r\n        \r\n      } catch (error) {\r\n          \r\n      }\r\n   \r\n    return () => {\r\n        \r\n    }\r\n  }, [inputValue])\r\n\r\n  useEffect( async () => {\r\n      try {\r\n          \r\n        const res =  await fetch(`${Config.BACKEND_URL}/city`, {\r\n            headers: {\r\n                'Accept': 'application/json', \r\n                'Content-Type': 'application/json',\r\n    \r\n            },\r\n        })\r\n        const data = await res.json();\r\n        setCities(data.cities);\r\n        \r\n      } catch (error) {\r\n          \r\n      }\r\n  \r\n\r\n    return () => {\r\n        \r\n    }\r\n  }, [])\r\n\r\n  const submiting = (e) => {\r\n    e.preventDefault();\r\n      \r\n    let Medecin_rechercher = medecin? medecin.name ? medecin.name : medecin.nom : medecin;\r\n    let ville_rechercher = ville ? ville.name : ville;\r\n\r\n    if(!Medecin_rechercher){\r\n        Medecin_rechercher = \"generaliste\"\r\n    }else {  \r\n        if(Medecin_rechercher.trim() === \"\"){\r\n            Medecin_rechercher = \"medecin-generaliste\"\r\n        }\r\n    }\r\n\r\n    if(!ville_rechercher){\r\n        ville_rechercher=\"maroc\";\r\n    }else {\r\n        if(ville_rechercher.trim() === \"\"){\r\n            // setVille({name: \"maroc\"})\r\n            ville_rechercher=\"maroc\";\r\n        }\r\n    }\r\n\r\n      return router.push({\r\n        pathname: `/recherche/${Medecin_rechercher}/${ville_rechercher}`,\r\n    })\r\n  }\r\n\r\n  const selectPosition = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n        console.log(position)\r\n    }, \r\n    );\r\n  }\r\n\r\n  const handleSearchSpecialite = (e, newInputValue) => {\r\n    setMedecin(newInputValue)\r\n  }\r\n  const handleSearchSpecialitea = (e, newInputValue) => {\r\n    if(newInputValue.length >0) {\r\n        setInputValue(newInputValue);\r\n    }else {\r\n\r\n    }\r\n  }\r\n \r\n  \r\n  return (\r\n        \r\n        <div className={classes.searchContent}>\r\n\r\n          \r\n           <Col lg=\"10\" md=\"10\" >\r\n               <form className={classes.searchBar} onSubmit={submiting}>\r\n                   <div className={classes.searchBarQuery}>\r\n                           <div className={classes.searchInputWrapper +\" search\"}>\r\n                                <BsSearch className={locale === \"ar\" ? \"searchbar-input-icon-ar\":\"searchbar-input-icon\"} />\r\n                               <Autocomplete\r\n                               onInputChange={handleSearchSpecialitea}\r\n                               loading={loadingMedecin}\r\n                               noOptionsText={isSearched? content.noOption : content.noOption2}\r\n                               groupBy={(option) => option.name? \"specialite\" : \"medecin\"}\r\n                                id=\"suggestion-medecin\"\r\n                                loadingText={content.loading}\r\n                                options={searchFetched}\r\n                                debug={true}\r\n                                getOptionLabel={(option) => option.nom? option.nom + \" \" + option.prenom + \" \" + option.email + \" \" + option.phone : option.name ? option.name : \"\" }\r\n                                renderOption={(option) => (\r\n                                    option.nom ?\r\n                                        <React.Fragment>\r\n                                            <Link  href={`/doctor/${option.id}`}>\r\n                                                <a className=\"d-flex w-100\">\r\n                                                    {option.image ? <span className=\"searchbar-result-profile-avatar \"><img className=\"img-fluid\" src={`${Config.BACKEND_URL}/${option.image}`} /></span> : null }\r\n                                                    <span> Dr. {option.nom} {option.prenom} </span> \r\n                                                </a>\r\n                                                \r\n                                            </Link>\r\n                                        </React.Fragment>\r\n                                    :\r\n                                        <React.Fragment>\r\n                                            {option.name}\r\n                                        </React.Fragment> \r\n                                )}\r\n                                onChange={(e, newInputValue) => handleSearchSpecialite(e, newInputValue)} \r\n                                value={medecin}\r\n                                style={{ width: \"100%\", height:\"60px\" }}\r\n                                renderInput={(params) => <TextField {...params} placeholder={content.recherchelabel} />}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                    <div className={classes.searchbarPlace}>\r\n                            <div className={classes.searchInputWrapper +\" search\"} style= {{overflow: \"hidden\",}}> \r\n                                <MdLocationOn className={locale === \"ar\" ? \"searchbar-input-icon-ar\":\"searchbar-input-icon\"}  />\r\n                                <Autocomplete\r\n                                id=\"suggestion-villes\"\r\n                                options={cities}\r\n                                loading={LoadingCities}\r\n\r\n                                loadingText={content.cityLoading}\r\n                                getOptionLabel={(option) => option.name ?  option.name  :  \"\"}\r\n                                onChange={(e, newInputValue) => setVille(newInputValue)} \r\n                                value={ville}\r\n                                style={{ width: \"100%\", height:\"60px\" }}\r\n                                renderInput={(params) => <TextField {...params} placeholder={content.citylabel} />}\r\n                                />\r\n                                <button onClick={selectPosition} className={classes.searchButton} type=\"button\">\r\n                                    <span >  \r\n                                        <BiCurrentLocation className={locale === \"ar\" ? \"searchbar-input-icon-ar\":\"searchbar-input-icon\"}  /> \r\n                                    </span>  \r\n                                </button>\r\n                            </div>\r\n                    </div>                       \r\n                    <button className={classes.searchSubmitButton + \" btn btn-submit\"} role=\"button\" type=\"submit\" >  \r\n                        <span >{locale === \"ar\" ? \"Rechercher \":\"Rechercher \"}  <BsSearch className={locale === \"ar\" ? \"searchbar-input-icon-ar\":\"searchbar-input-icon\"}  /></span>\r\n                    </button>\r\n                </form>\r\n            </Col>\r\n        </div>  \r\n        \r\n  );\r\n}\r\n\r\nSearchInput.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n\r\n\r\n// SearchInput.getInitialProps = async (ctx) => {\r\n//     const res = await fetch(`${Config.BACKEND_URL}/city`);\r\n//     console.log(res)\r\n//     if(res.status === 404) return { villes: [] }\r\n//     const json = await res.json()\r\n//     return { villes:json.cities }\r\n//   }\r\n  "]},"metadata":{},"sourceType":"module"}