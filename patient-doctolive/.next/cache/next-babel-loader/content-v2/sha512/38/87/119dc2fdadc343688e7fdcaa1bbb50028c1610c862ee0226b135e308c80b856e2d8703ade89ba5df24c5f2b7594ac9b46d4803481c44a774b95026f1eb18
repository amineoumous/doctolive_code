{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Config from './../../EndPoint';\nimport { useRouter } from 'next/router';\nimport { useAppContext } from './../../context/AppointementContext';\nimport { MdVideocam } from 'react-icons/md';\nimport { Row } from 'react-bootstrap';\nimport ReactFancyBox from './../fancyBox/fancybox/ReactFancyBox';\nimport Button from './../CustomButtons/Button';\nimport Link from 'next/link';\nimport CalendarAvailability from './CalendarAvailability';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Review from './../../components/review/Review';\nimport moment from 'moment';\nexport default function MedecinWidget(props) {\n  const {\n    0: showDisponibilite,\n    1: setShowDisponibilite\n  } = useState();\n  const {\n    content,\n    locale\n  } = props;\n  const {\n    0: selectedHour,\n    1: setSelectedHour\n  } = useState();\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState();\n  const {\n    setUserTemporary\n  } = useAppContext();\n  const router = useRouter();\n\n  const setDetails = (day, hour) => {\n    setSelectedDate(day);\n    setSelectedHour(hour);\n  };\n\n  const validateTime = () => {\n    var _props$medecin;\n\n    setUserTemporary({\n      date: selectedDate,\n      time: selectedHour,\n      medecinId: props.medecin.id\n    });\n    return router.push({\n      pathname: `/doctor/${(_props$medecin = props.medecin) === null || _props$medecin === void 0 ? void 0 : _props$medecin.id}/appointment`\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"card br-10\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"doctor-widget\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"doc-info-left\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"doctor-img\",\n            children: /*#__PURE__*/_jsx(\"a\", {\n              href: \"/doctor/\" + props.medecin.id,\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: props.medecin.image ? `${Config.BACKEND_URL}/${props.medecin.image}` : \"/image/medecin/homme.jpg\",\n                className: \"img-fluid img-100\",\n                alt: \"User Image\"\n              })\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"doc-info-cont\",\n            children: [/*#__PURE__*/_jsx(\"h3\", {\n              className: \"doc-name\",\n              children: /*#__PURE__*/_jsxs(\"a\", {\n                href: \"/doctor/\" + props.medecin.id,\n                className: \"doc-name\",\n                children: [\"Dr. \", `${props.medecin.nom} ${props.medecin.prenom}`]\n              })\n            }), props.medecin.specialites.map((specialite, index) => {\n              return /*#__PURE__*/_jsxs(\"h4\", {\n                className: \"doc-department-md\",\n                children: [!specialite.icon ? null : /*#__PURE__*/_jsx(\"img\", {\n                  src: `${Config.BACKEND_URL}/${specialite.icon}`,\n                  className: \"img-fluid\",\n                  alt: \"Speciality\"\n                }), specialite.name]\n              }, index);\n            }), !props.medecin.teleconsultationIsDisponible ? null : /*#__PURE__*/_jsxs(\"span\", {\n              className: \"mt-2\",\n              children: [\" \", /*#__PURE__*/_jsx(MdVideocam, {}), \" \", content.availableVideo, \" \"]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"clinic-details\",\n              children: [/*#__PURE__*/_jsxs(\"p\", {\n                className: \"doc-location\",\n                children: [/*#__PURE__*/_jsx(\"i\", {\n                  className: \"fas fa-map-marker-alt\"\n                }), !props.medecin.adress ? content.notSpecified : (props.medecin.adress.streetName ? props.medecin.adress.streetName : \"\") + \" \" + (props.medecin.adress.buildingName ? props.medecin.adress.buildingName : \"\") + \" \" + (props.medecin.adress.floor ? \"Ã©tage \" + props.medecin.adress.floor : \"\") + \" \" + (props.medecin.adress.sector ? props.medecin.adress.sector : \"\") + \", \" + (props.medecin.adress.codePostal ? props.medecin.adress.codePostal : \"\") + \" - \" + (props.medecin.city ? props.medecin.city.name : \"\")]\n              }), /*#__PURE__*/_jsx(Row, {\n                children: props.medecin.pictures.map((picture, index) => {\n                  return /*#__PURE__*/_jsx(\"div\", {\n                    className: \"cabinet-img-container ml-2\",\n                    children: /*#__PURE__*/_jsx(ReactFancyBox, {\n                      thumbnail: `${Config.BACKEND_URL}/${picture.path}`,\n                      showCloseBtn: false,\n                      image: `${Config.BACKEND_URL}/${picture.path}`\n                    })\n                  }, index);\n                })\n              }), /*#__PURE__*/_jsx(Review, {\n                medium: true,\n                rating: 5,\n                size: 26,\n                color: \"red\"\n              }), /*#__PURE__*/_jsx(Button, {\n                className: 'bolde-7',\n                disabled: !selectedHour,\n                onClick: validateTime,\n                color: \"primary\",\n                children: content.confirm\n              })]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: locale === \"ar\" ? \"doc-info-leftr\" : \"doc-info-right\",\n          children: [/*#__PURE__*/_jsx(CalendarAvailability, _objectSpread(_objectSpread({}, props), {}, {\n            setSelectedHour: setDetails\n          })), /*#__PURE__*/_jsx(\"div\", {\n            children: !selectedHour && !selectedDate ? null : content.timeSelected + moment(selectedDate + selectedHour, 'YYYY/MM/DDHH:mm').calendar()\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"clinic-booking\"\n          })]\n        })]\n      })\n    }), showDisponibilite ? /*#__PURE__*/_jsx(ShowDisponibilite, _objectSpread(_objectSpread({\n      showDisponibilite: showDisponibilite\n    }, props), {}, {\n      handleClose: () => setShowDisponibilite()\n    })) : null]\n  });\n}\nconst Transition = /*#__PURE__*/React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/_jsx(Slide, _objectSpread({\n    direction: \"up\",\n    ref: ref\n  }, props));\n});\n\nfunction ShowDisponibilite(props) {\n  const {\n    0: selectedHour,\n    1: setSelectedHour\n  } = useState();\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState();\n  const {\n    content,\n    locale\n  } = props;\n  const {\n    setUserTemporary\n  } = useAppContext();\n  const router = useRouter();\n\n  const setDetails = (day, hour) => {\n    setSelectedDate(day);\n    setSelectedHour(hour);\n  };\n\n  const validateTime = () => {\n    setUserTemporary({\n      date: selectedDate,\n      time: selectedHour,\n      medecinId: props.medecin.id\n    });\n    return router.push({\n      pathname: `/doctor/${props.medecin.id}/appointment`\n    });\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(Dialog, {\n      open: true,\n      maxWidth: \"lg\" // fullWidth={true}\n      ,\n      style: locale === \"ar\" ? {\n        direction: \"rtl\",\n        textAlign: \"right\"\n      } : {\n        direction: \"ltr\"\n      },\n      TransitionComponent: Transition,\n      keepMounted: true // onClose={props.handleClose}\n      ,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxs(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: [\" \", content.dispo, \"  \"]\n      }), /*#__PURE__*/_jsx(DialogContent, {\n        children: /*#__PURE__*/_jsx(CalendarAvailability, _objectSpread(_objectSpread({}, props), {}, {\n          setSelectedHour: setDetails\n        }))\n      }), /*#__PURE__*/_jsxs(DialogActions, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          children: !selectedHour && !selectedDate ? null : content.timeSelected + moment(selectedDate + selectedHour, 'YYYY/MM/DDHH:mm').calendar()\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(Button, {\n            onClick: props.handleClose,\n            color: \"transparent\",\n            children: content.cancel\n          }), /*#__PURE__*/_jsx(Button, {\n            disabled: !selectedHour,\n            onClick: validateTime,\n            color: \"primary\",\n            children: content.confirm\n          })]\n        })]\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}