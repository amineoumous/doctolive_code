{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\"; // import markerIcon from 'assets/img/marker.png'\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"50vh\",\n  width: \"100%\"\n};\nconst mapStyles = [{\n  \"featureType\": \"road\",\n  \"elementType\": \"labels\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"labels\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"transit\",\n  \"elementType\": \"labels.text\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  scrollwheel: false\n};\nexport default function App(props) {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: props.apiKey,\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [center, setCenter] = React.useState({\n    lat: 33.5795703,\n    lng: -7.5874518\n  });\n\n  const handleClickMarker = () => {};\n\n  React.useEffect(() => {\n    if (props.locations) {\n      if (props.locations.length > 0) {\n        if (props.locations[0]) {\n          setMarkers(props.locations);\n          setCenter({\n            lat: props.locations[0][\"latitude\"],\n            lng: props.locations[0][\"longitude\"]\n          });\n        }\n      }\n    }\n  }, [props.locations]);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: mapContainerStyle,\n      zoom: 8,\n      center: center,\n      options: options,\n      onLoad: onMapLoad,\n      children: markers.map((marker, index) => {\n        if (!marker) {\n          return null;\n        }\n\n        return /*#__PURE__*/_jsx(Marker, {\n          position: {\n            lat: marker.latitude,\n            lng: marker.longitude\n          },\n          animation: window.google.maps.Animation.DROP,\n          icon: \"/image/marker.png\",\n          onClick: () => {\n            handleClickMarker(marker);\n          }\n        }, index);\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}