{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\MedecinWidget\\\\MapAccess.js\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\"; // import markerIcon from 'assets/img/marker.png'\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"50vh\",\n  width: \"100%\"\n};\nconst mapStyles = [{\n  \"featureType\": \"road\",\n  \"elementType\": \"labels\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"labels\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"transit\",\n  \"elementType\": \"labels.text\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  scrollwheel: false\n};\nexport default function App(props) {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: props.apiKey,\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [center, setCenter] = React.useState({\n    lat: 33.5795703,\n    lng: -7.5874518\n  });\n\n  const handleClickMarker = () => {};\n\n  React.useEffect(() => {\n    if (props.locations) {\n      if (props.locations.length > 0) {\n        if (props.locations[0]) {\n          setMarkers(props.locations);\n          setCenter({\n            lat: props.locations[0][\"latitude\"],\n            lng: props.locations[0][\"longitude\"]\n          });\n        }\n      }\n    }\n  }, [props.locations]);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: mapContainerStyle,\n      zoom: 8,\n      center: center,\n      options: options,\n      onLoad: onMapLoad,\n      children: markers.map((marker, index) => {\n        if (!marker) {\n          return null;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: marker.latitude,\n            lng: marker.longitude\n          },\n          animation: window.google.maps.Animation.DROP,\n          icon: \"/image/marker.png\",\n          onClick: () => {\n            handleClickMarker(marker);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/components/MedecinWidget/MapAccess.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","libraries","mapContainerStyle","height","width","mapStyles","options","styles","disableDefaultUI","zoomControl","scrollwheel","App","props","isLoaded","loadError","googleMapsApiKey","apiKey","markers","setMarkers","useState","center","setCenter","lat","lng","handleClickMarker","useEffect","locations","length","mapRef","useRef","onMapLoad","useCallback","map","current","marker","index","latitude","longitude","window","google","maps","Animation","DROP"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\n// import markerIcon from 'assets/img/marker.png'\r\nconst libraries = [\"places\"];\r\n\r\nconst mapContainerStyle = {\r\n  height: \"50vh\",\r\n  width: \"100%\",\r\n};\r\n\r\n\r\nconst mapStyles = [\r\n  {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels\",\r\n      \"stylers\": [\r\n          {\r\n              \"visibility\": \"off\"\r\n          }\r\n      ]\r\n  },\r\n  {\r\n      \"featureType\": \"poi\",\r\n      \"elementType\": \"labels\",\r\n      \"stylers\": [\r\n          {\r\n              \"visibility\": \"off\"\r\n          }\r\n      ]\r\n  },\r\n  {\r\n      \"featureType\": \"transit\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n          {\r\n              \"visibility\": \"off\"\r\n          }\r\n      ]\r\n  }\r\n];\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n  scrollwheel: false,\r\n};\r\n\r\n\r\nexport default function App(props) {\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: props.apiKey,\r\n    libraries,\r\n  });\r\n  const [markers, setMarkers] = React.useState([]);\r\n\r\n  const [center, setCenter] = React.useState({\r\n    lat: 33.5795703,\r\n  lng: -7.5874518,\r\n  })\r\n  const handleClickMarker = () => {\r\n\r\n  }\r\n \r\n  React.useEffect(() => {\r\n      if(props.locations){\r\n        if(props.locations.length > 0){\r\n          if(props.locations[0]){\r\n            setMarkers(props.locations);\r\n\r\n            setCenter({lat: props.locations[0][\"latitude\"], lng: props.locations[0][\"longitude\"]  })\r\n\r\n          }\r\n        }\r\n      }\r\n    \r\n    \r\n  }, [props.locations])\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={8}\r\n        center={center}\r\n        options={options}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {\r\n          markers.map((marker, index) => {\r\n            if(!marker) {\r\n              return null\r\n            }\r\n            return(\r\n              <Marker\r\n              key={index}\r\n              position={{ lat: marker.latitude, lng: marker.longitude }}\r\n              animation={window.google.maps.Animation.DROP}\r\n              icon={\"/image/marker.png\"}\r\n              onClick={() => {\r\n                handleClickMarker(marker);\r\n              }}\r\n         \r\n            />\r\n            )\r\n          \r\n          })\r\n        }\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}