{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/Users/CARRE/Documents/GitHub/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Col, Row, Alert, Collapse } from 'react-bootstrap';\nimport Config from './../EndPoint'; // @material-ui/icons\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md'; // import TextField from 'components/Inputs/InputIcone/index';\n\nimport Button from './CustomButtons/Button';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport contentFR from './../contentFR';\nimport contentEN from './../contentEN';\nimport contentAR from './../contentAR';\nexport default function ElementForm(props) {\n  var _jsx2, _response$message;\n\n  var router = useRouter();\n  var locale = router.locale;\n  var content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n\n  var _useState = useState({\n    nom: \"\",\n    prenom: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    email_confirmation: \"\"\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState({\n    nomError: false,\n    prenomError: false,\n    numeroError: false,\n    emailError: false\n  }),\n      fieldValidationErrors = _useState2[0],\n      setfieldValidationErrors = _useState2[1];\n\n  var _useState3 = useState({\n    sending: false,\n    success: false,\n    donneIncorecte: false\n  }),\n      response = _useState3[0],\n      setResponse = _useState3[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setResponse(function (old) {\n      return _objectSpread(_objectSpread({}, old), {}, {\n        sending: true\n      });\n    });\n    var data = traitementDonnee();\n    fetch(\"\".concat(Config.BACKEND_URL, \"/patient\"), {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(_objectSpread({}, data))\n    }).then(function (r) {\n      return r.json().then(function (res) {\n        console.log(res);\n\n        if (!res.error) {\n          props.setUserData(res);\n          setResponse({\n            sending: false,\n            success: true,\n            donneIncorecte: false\n          });\n        } else {\n          if (res.validator) {\n            setResponse({\n              sending: false,\n              success: false,\n              donneIncorecte: false,\n              validator: true,\n              message: res.message\n            });\n          } else {\n            setResponse({\n              sending: false,\n              success: false,\n              donneIncorecte: true\n            });\n          }\n        }\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n      setResponse({\n        sending: false,\n        success: false,\n        donneIncorecte: true\n      });\n    });\n  };\n\n  var traitementDonnee = function traitementDonnee() {\n    var formData = {};\n    formData.nom = state.nom;\n    formData.phone = state.phone;\n    formData.email = state.email;\n    formData.prenom = state.prenom;\n    formData.password = state.password;\n    formData.email_confirmation = state.email_confirmation;\n    return formData;\n  };\n\n  var validateField = function validateField() {};\n\n  var handleChange = function handleChange(_ref) {\n    var _ref$target = _ref.target,\n        value = _ref$target.value,\n        name = _ref$target.name;\n\n    if (name === \"phone\") {\n      value = value // Remove all non-digits, turn initial 33 into nothing\n      .replace(/[^\\d+]/g, '').replace(/^0/, '+212') // Stick to first 10, ignore later digits\n      .slice(0, 13) // Add a space after any 2-digit group followed by more digits\n      .replace(/(\\d{3})(?=\\d)/g, '$1 ');\n    }\n\n    setState(function (old) {\n      return _objectSpread(_objectSpread({}, old), {}, _defineProperty({}, name, value));\n    });\n  }; // let {password, showPassword, email_confirmation, fieldValidationErrors, nom, prenom, phone, email, donneIncorecte, success} = state\n\n\n  console.log(response);\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxs(Row, {\n      children: [/*#__PURE__*/_jsx(Col, {\n        xs: \"12\",\n        md: \"6\",\n        children: /*#__PURE__*/_jsx(TextField, {\n          error: fieldValidationErrors.nomError,\n          placeholder: \"\",\n          label: content[\"new\"].labelNom,\n          required: false,\n          variant: \"outlined\",\n          name: \"nom\",\n          onBlur: validateField,\n          value: state.nom,\n          onChange: handleChange\n        })\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: \"12\",\n        md: \"6\",\n        children: /*#__PURE__*/_jsx(TextField, {\n          placeholder: \"\",\n          variant: \"outlined\",\n          required: false,\n          error: fieldValidationErrors.prenomError,\n          label: content[\"new\"].labelPrenom,\n          onBlur: validateField,\n          name: \"prenom\",\n          value: state.prenom,\n          onChange: handleChange\n        })\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: 12,\n        sm: 12,\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsx(TextField, (_jsx2 = {\n          className: \"phone-text\",\n          value: state.phone,\n          onChange: handleChange,\n          fullWidth: true,\n          variant: \"outlined\",\n          type: \"text\",\n          onBlur: validateField,\n          error: state.phoneError,\n          helperText: state.phoneError ? content[\"new\"].phoneError : \"\",\n          margin: \"normal\",\n          required: true\n        }, _defineProperty(_jsx2, \"fullWidth\", true), _defineProperty(_jsx2, \"id\", \"patientPhone\"), _defineProperty(_jsx2, \"label\", content[\"new\"].phoneLabel), _defineProperty(_jsx2, \"name\", \"phone\"), _defineProperty(_jsx2, \"autoComplete\", \"new-password\"), _jsx2))\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: \"12\",\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsx(TextField, {\n          fullWidth: true,\n          label: content[\"new\"].emailLabel,\n          placeholder: \"Adresse email\",\n          variant: \"outlined\",\n          name: \"email\",\n          error: fieldValidationErrors.emailError,\n          required: true,\n          onBlur: validateField,\n          value: state.email,\n          onChange: handleChange\n        })\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: \"12\",\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsx(TextField, {\n          fullWidth: true,\n          label: content[\"new\"].labelEmailC,\n          placeholder: content[\"new\"].labelEmailCP,\n          variant: \"outlined\",\n          name: \"email_confirmation\",\n          error: fieldValidationErrors.emailError,\n          required: true,\n          onBlur: validateField,\n          value: state.email_confirmation,\n          onChange: handleChange\n        })\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: \"12\",\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxs(InputLabel, {\n            htmlFor: \"standard-adornment-password\",\n            children: [\" \", content[\"new\"].passLabel, \" \"]\n          }), /*#__PURE__*/_jsx(OutlinedInput, {\n            id: \"standard-adornment-password\",\n            type: state.showPassword ? 'text' : 'password',\n            value: state.password,\n            onChange: handleChange,\n            required: true,\n            label: content[\"new\"].passLabel,\n            name: \"password\",\n            endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsx(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return setState(function (old) {\n                    return _objectSpread(_objectSpread({}, old), {}, {\n                      showPassword: !state.showPassword\n                    });\n                  });\n                },\n                children: state.showPassword ? /*#__PURE__*/_jsx(MdVisibility, {}) : /*#__PURE__*/_jsx(MdVisibilityOff, {})\n              })\n            })\n          })]\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsx(Collapse, {\n        \"in\": response.donneIncorecte,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsx(Alert, {\n            variant: \"danger\",\n            children: content[\"new\"].errorSignup\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsx(Collapse, {\n        \"in\": response.validator,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsx(Alert, {\n            variant: \"danger\",\n            children: (_response$message = response.message) === null || _response$message === void 0 ? void 0 : _response$message.map(function (mess, index) {\n              return /*#__PURE__*/_jsxs(\"span\", {\n                children: [\" \", mess.msg, \",  \"]\n              }, index);\n            })\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsx(Collapse, {\n        \"in\": response.success,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsx(Alert, {\n            variant: \"success\",\n            children: content[\"new\"].successSignup\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(Row, {\n      className: \"align-items-center justify-content-around mt-4 \",\n      children: /*#__PURE__*/_jsxs(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        children: [\" \", content[\"new\"].signup, \" \"]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}