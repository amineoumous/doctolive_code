{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Col, Row } from 'react-bootstrap'; // @material-ui/icons\n\nimport Link from 'next/link';\nimport { BsSearch } from \"react-icons/bs\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport { BiCurrentLocation } from \"react-icons/bi\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport fetch from 'unfetch';\nimport Config from './../../EndPoint';\nimport { useRouter } from 'next/router';\n\nconst style = theme => ({\n  endAdornment: {\n    display: \"none\",\n    \"& .MuiAutocomplete-endAdornment\": {\n      display: \"none\"\n    }\n  },\n  searchContainer: {\n    paddingTop: \"120px\"\n  },\n  searchContent: {\n    zIndex: 5\n  },\n  searchBar: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: 'center',\n      backgroundColor: \"transparent !important\"\n    }\n  },\n  searchBarQuery: {\n    \"-ms-flex\": \"0 0 240px\",\n    position: \"relative\",\n    width: \"403px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flex: \"0 0 100%\",\n      width: \"100%\"\n    }\n  },\n  searchInputWrapper: {\n    background: \"#fff\",\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: 60,\n    borderRadius: 30,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginBottom: 10\n    },\n    '& .searchbar-input-icon': {\n      position: \"absolute\",\n      top: 18,\n      left: 16,\n      width: 24,\n      height: 24,\n      pointerEvents: \"none\",\n      fill: \"#7791a2\"\n    },\n    '& .searchbar-input-icon-ar': {\n      position: \"absolute\",\n      top: 18,\n      right: 16,\n      width: 24,\n      height: 24,\n      pointerEvents: \"none\",\n      fill: \"#7791a2\"\n    }\n  },\n  searchbarPlace: {\n    \"-ms-flex\": \" 0 0 490px\",\n    flex: \" 0 0 490px\",\n    position: \"relative\",\n    width: \"490px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flex: \"0 0 100%\",\n      width: \"100%\",\n      marginBottom: 12\n    }\n  },\n  searchButton: {\n    cursor: \"pointer\",\n    position: \"absolute\",\n    width: \"45px\",\n    right: 0,\n    transform: \"translateX(100%) translateX(-51px)\",\n    color: \"#435f71\",\n    transition: \"-webkit-transform 400ms\",\n    transition: \" transform 400ms\",\n    transition: \"transform 400ms, -webkit-transform 400ms\",\n    transitionSelay: \"100ms\",\n    height: \"100%\",\n    textAlign: \"left\",\n    backgroundColor: \"white\",\n    border: 0,\n    outline: \"none\",\n    boxShadow: \"none\",\n    appearance: \"none !important\",\n    textDecoration: \"none !important\",\n    margin: 0,\n    display: \"inline-block\",\n    padding: \"0 16px\"\n  },\n  searchSubmitButton: {\n    borderRadius: \" 8px\",\n    outline: \"none\",\n    boxShadow: \"none\",\n    marginRight: 5,\n    marginBottom: 5,\n    marginTop: 5,\n    width: \"162px\",\n    height: \"50px\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"100%\",\n      marginBottom: 12\n    }\n  }\n});\n\nconst useStyles = makeStyles(style);\nexport default function SearchInput({\n  content,\n  locale\n}) {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: medecin,\n    1: setMedecin\n  } = useState({});\n  const {\n    0: ville,\n    1: setVille\n  } = useState({});\n  const {\n    0: loadingMedecin,\n    1: setLoadingMedecin\n  } = useState(false);\n  const {\n    0: isSearched,\n    1: setIsSerached\n  } = useState(false);\n  const {\n    0: LoadingCities,\n    1: setLoadingCities\n  } = useState(false);\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(\"\");\n  const {\n    0: searchFetched,\n    1: setSearchFetched\n  } = useState([]);\n  const {\n    0: cities,\n    1: setCities\n  } = useState([]);\n  useEffect(async () => {\n    try {\n      const res = await fetch(`${Config.BACKEND_URL}/medecin/search/specialite/${inputValue}`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n\n      if (data.speciality) {\n        setSearchFetched([...data.speciality, ...data.medecins]);\n      }\n    } catch (error) {}\n\n    return () => {};\n  }, [inputValue]);\n  useEffect(async () => {\n    try {\n      const res = await fetch(`${Config.BACKEND_URL}/city`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n      setCities(data.cities);\n    } catch (error) {}\n\n    return () => {};\n  }, []);\n\n  const submiting = e => {\n    e.preventDefault();\n    let Medecin_rechercher = medecin ? medecin.name ? medecin.name : medecin.nom : medecin;\n    let ville_rechercher = ville ? ville.name : ville;\n\n    if (!Medecin_rechercher) {\n      Medecin_rechercher = \"generaliste\";\n    } else {\n      if (Medecin_rechercher.trim() === \"\") {\n        Medecin_rechercher = \"medecin-generaliste\";\n      }\n    }\n\n    if (!ville_rechercher) {\n      ville_rechercher = \"maroc\";\n    } else {\n      if (ville_rechercher.trim() === \"\") {\n        // setVille({name: \"maroc\"})\n        ville_rechercher = \"maroc\";\n      }\n    }\n\n    return router.push({\n      pathname: `/recherche/${Medecin_rechercher}/${ville_rechercher}`\n    });\n  };\n\n  const selectPosition = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n    });\n  };\n\n  const handleSearchSpecialite = (e, newInputValue) => {\n    setMedecin(newInputValue);\n  };\n\n  const handleSearchSpecialitea = (e, newInputValue) => {\n    if (newInputValue.length > 0) {\n      setInputValue(newInputValue);\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.searchContent,\n    children: /*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsx(Col, {\n        lg: \"9\",\n        md: \"9\",\n        xs: \"12\",\n        className: \"center-form no-padding-left\",\n        children: /*#__PURE__*/_jsxs(\"form\", {\n          className: classes.searchBar,\n          onSubmit: submiting,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            lg: \"3\",\n            md: \"3\",\n            xs: \"12\",\n            className: classes.searchBarQuery + \" with-vorder-right\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: classes.searchInputWrapper + \" search\",\n              children: [/*#__PURE__*/_jsx(BsSearch, {\n                className: locale === \"ar\" ? \"searchbar-input-icon-ar\" : \"searchbar-input-icon\"\n              }), /*#__PURE__*/_jsx(Autocomplete, {\n                onInputChange: handleSearchSpecialitea,\n                loading: loadingMedecin,\n                noOptionsText: isSearched ? content.noOption : content.noOption2,\n                groupBy: option => option.name ? \"specialite\" : \"medecin\",\n                id: \"suggestion-medecin\",\n                loadingText: content.loading,\n                options: searchFetched,\n                debug: true,\n                getOptionLabel: option => option.nom ? option.nom + \" \" + option.prenom + \" \" + option.email + \" \" + option.phone : option.name ? option.name : \"\",\n                renderOption: option => option.nom ? /*#__PURE__*/_jsx(React.Fragment, {\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: `/doctor/${option.id}`,\n                    children: /*#__PURE__*/_jsxs(\"a\", {\n                      className: \"d-flex w-100\",\n                      children: [option.image ? /*#__PURE__*/_jsx(\"span\", {\n                        className: \"searchbar-result-profile-avatar \",\n                        children: /*#__PURE__*/_jsx(\"img\", {\n                          className: \"img-fluid\",\n                          src: `${Config.BACKEND_URL}/${option.image}`\n                        })\n                      }) : null, /*#__PURE__*/_jsxs(\"span\", {\n                        children: [\" Dr. \", option.nom, \" \", option.prenom, \" \"]\n                      })]\n                    })\n                  })\n                }) : /*#__PURE__*/_jsx(React.Fragment, {\n                  children: option.name\n                }),\n                onChange: (e, newInputValue) => handleSearchSpecialite(e, newInputValue),\n                value: medecin,\n                style: {\n                  width: \"100%\",\n                  height: \"60px\"\n                },\n                renderInput: params => /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  placeholder: content.recherchelabel\n                }))\n              })]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            lg: \"3\",\n            xs: \"12\",\n            md: \"3\",\n            className: classes.searchbarPlace,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: classes.searchInputWrapper + \" search\",\n              style: {\n                overflow: \"hidden\"\n              },\n              children: [/*#__PURE__*/_jsx(MdLocationOn, {\n                className: locale === \"ar\" ? \"searchbar-input-icon-ar\" : \"searchbar-input-icon\"\n              }), /*#__PURE__*/_jsx(Autocomplete, {\n                id: \"suggestion-villes\",\n                options: cities,\n                loading: LoadingCities,\n                loadingText: content.cityLoading,\n                getOptionLabel: option => option.name ? option.name : \"\",\n                onChange: (e, newInputValue) => setVille(newInputValue),\n                value: ville,\n                style: {\n                  width: \"100%\",\n                  height: \"60px\"\n                },\n                renderInput: params => /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  placeholder: content.citylabel\n                }))\n              }), /*#__PURE__*/_jsx(\"button\", {\n                onClick: selectPosition,\n                className: classes.searchButton,\n                type: \"button\",\n                children: /*#__PURE__*/_jsx(\"span\", {\n                  children: /*#__PURE__*/_jsx(BiCurrentLocation, {\n                    className: locale === \"ar\" ? \"searchbar-input-icon-ar\" : \"searchbar-input-icon\"\n                  })\n                })\n              })]\n            })\n          }), /*#__PURE__*/_jsxs(\"button\", {\n            lg: \"3\",\n            xs: \"12\",\n            md: \"3\",\n            className: classes.searchSubmitButton + \" btn btn-submit\",\n            role: \"button\",\n            type: \"submit\",\n            children: [/*#__PURE__*/_jsxs(\"span\", {\n              className: \"text-btn-element\",\n              children: [locale === \"ar\" ? \"Rechercher \" : \"Rechercher \", \"  \"]\n            }), /*#__PURE__*/_jsx(\"svg\", {\n              width: \"8\",\n              height: \"13\",\n              viewBox: \"0 0 8 13\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsx(\"path\", {\n                d: \"M1.33854 12.3216C0.98099 12.3216 0.644884 12.1881 0.392043 11.9456C0.139228 11.7031 0 11.3806 0 11.0376C0 10.6947 0.139228 10.3722 0.392043 10.1297L4.52975 6.16051L0.392043 2.19136C0.139228 1.94884 0 1.62638 0 1.28341C0 0.940451 0.139228 0.617986 0.392043 0.375467C0.913974 -0.12518 1.76316 -0.125131 2.28506 0.375467L7.36924 5.25256C7.62205 5.49508 7.76128 5.81755 7.76128 6.16051C7.76128 6.50347 7.62205 6.82594 7.36924 7.06848L2.28504 11.9456C2.0322 12.1881 1.69606 12.3216 1.33854 12.3216ZM1.33854 0.490664C1.12682 0.490664 0.915099 0.56796 0.753917 0.722602C0.59775 0.872409 0.511746 1.07155 0.511746 1.28341C0.511746 1.49527 0.59775 1.69442 0.753917 1.84422L5.07253 5.98694C5.12051 6.03297 5.14748 6.09541 5.14748 6.16051C5.14748 6.22561 5.12051 6.28805 5.07253 6.33408L0.753917 10.4768C0.59775 10.6266 0.511746 10.8258 0.511746 11.0376C0.511746 11.2495 0.59775 11.4486 0.753917 11.5984C0.910084 11.7482 1.11771 11.8307 1.33854 11.8307C1.55937 11.8307 1.767 11.7482 1.92316 11.5984L7.00734 6.72134C7.1635 6.57154 7.24951 6.37239 7.24951 6.16053C7.24951 5.9487 7.1635 5.74953 7.00734 5.59972L1.92314 0.722602C1.76198 0.567985 1.55026 0.490664 1.33854 0.490664Z\",\n                fill: \"white\"\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n} // SearchInput.getInitialProps = async (ctx) => {\n//     const res = await fetch(`${Config.BACKEND_URL}/city`);\n//     console.log(res)\n//     if(res.status === 404) return { villes: [] }\n//     const json = await res.json()\n//     return { villes:json.cities }\n//   }","map":null,"metadata":{},"sourceType":"module"}