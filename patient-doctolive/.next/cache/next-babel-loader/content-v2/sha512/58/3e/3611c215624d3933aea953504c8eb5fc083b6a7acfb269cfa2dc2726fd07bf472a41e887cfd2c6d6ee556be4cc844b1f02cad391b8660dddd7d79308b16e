{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useRef, useEffect } from 'react';\n\nconst Messages = ({\n  messages,\n  storedMessages\n}) => {\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (messagesEndRef !== null) {\n      if (messagesEndRef !== null) {\n        let timer = setTimeout(() => {\n          if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"nearest\",\n              inline: \"start\"\n            });\n          }\n        }, 200);\n        return () => clearTimeout(timer);\n      }\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"messages\",\n      children: [storedMessages ? storedMessages.map((message, i) => /*#__PURE__*/_jsx(StoredMessage, {\n        message: message\n      }, i)) : null, messages ? messages.map((message, i) => /*#__PURE__*/_jsx(Message, {\n        message: message\n      }, i)) : null, /*#__PURE__*/_jsx(\"div\", {\n        ref: messagesEndRef\n      })]\n    })\n  });\n};\n\nexport default Messages;\n\nconst Message = ({\n  message: {\n    data,\n    isSentByCurrentUser\n  }\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: isSentByCurrentUser ? \"messageContainer sent\" : \"messageContainer replies\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsx(\"p\", {\n        className: \"messageText\",\n        children: data.message\n      })\n    })\n  });\n};\n\nconst StoredMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: message.sentTo === \"medecin\" ? \"messageContainer sent\" : \"messageContainer replies\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsx(\"p\", {\n        className: \"messageText\",\n        children: message.message\n      })\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}