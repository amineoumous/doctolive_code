{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\Documents\\\\DocumentsC.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { Row, Col, Collapse, Alert } from 'react-bootstrap';\nimport SubmitButton from './../../components/CustomButtons/SubmitButton.js'; // import AddIcon from '@material-ui/icons/Add';\n\nimport { useDropzone } from 'react-dropzone';\nimport { useAuth } from \"../../context/AuthContext\";\nimport Config from './../../EndPoint';\nimport { Typography } from '@material-ui/core';\nimport ReactFancyBox from './../fancyBox/fancybox/ReactFancyBox';\nimport { TiDeleteOutline } from 'react-icons/ti';\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '40px 20px',\n  cursor: 'pointer',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\nexport default function Images(props) {\n  const {\n    userData\n  } = useAuth();\n  const {\n    0: etatRequest,\n    1: setEtatRequest\n  } = useState({\n    success: false,\n    sending: false,\n    donneIncorrect: false\n  });\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: rejectedFiles,\n    1: setRejectedFiles\n  } = useState([]);\n  const {\n    0: savedPictures,\n    1: setSavedPictures\n  } = useState([]);\n  const {\n    0: canceledPictures,\n    1: setCanceledPictures\n  } = useState([]);\n  useEffect(() => {\n    if (props.documents) {\n      setSavedPictures(props.documents);\n    }\n\n    return () => {};\n  }, [props.documents]);\n  useEffect(() => {\n    if (props.socket) {\n      props.socket.on('newDocuments', response => {\n        if (response.consultationId === props.consultation.id) {\n          setSavedPictures(oldPic => [...oldPic, ...response.uploadedFiles]);\n        }\n      });\n    }\n\n    return () => {\n      if (props.socket) {\n        props.socket.removeAllListeners('newDocuments');\n      }\n    };\n  }, [props.socket]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setEtatRequest(oldData => {\n      return _objectSpread(_objectSpread({}, oldData), {}, {\n        sending: true\n      });\n    });\n\n    try {\n      let response = await fetch(`${Config.BACKEND_URL}/upload/document`, {\n        method: 'POST',\n        body: JSON.stringify({\n          data: files,\n          consultation: props.consultation,\n          sentTo: \"medecin\"\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `token ${userData.token}`\n        }\n      });\n      response.json().then(uploadingFile => {\n        if (!uploadingFile.error) {\n          setEtatRequest(oldData => {\n            return _objectSpread(_objectSpread({}, oldData), {}, {\n              sending: false,\n              success: true\n            });\n          });\n\n          if (uploadingFile.savedPictures.length > 0) {\n            setSavedPictures(oldPic => [...oldPic, ...uploadingFile.savedPictures]);\n          }\n\n          if (uploadingFile.canceledData.length > 0) {\n            uploadingFile.canceledData.map(dd => {\n              setCanceledPictures(oldData => [...oldData, files[dd.index]]);\n            });\n            setFiles([]);\n            setRejectedFiles([]);\n          } else {\n            setFiles([]);\n            setRejectedFiles([]);\n          }\n\n          props.socket.emit('newDocuments', {\n            uploadedFiles: uploadingFile.savedPictures,\n            consultationId: props.consultation.id,\n            selectedUser: \"m\" + props.consultation.medecin.id\n          }, response => {});\n        } else {\n          setEtatRequest(oldData => {\n            return _objectSpread(_objectSpread({}, oldData), {}, {\n              sending: false,\n              success: false,\n              donneIncorrect: true\n            });\n          });\n        }\n      }).catch(err => {\n        setEtatRequest(oldData => {\n          return _objectSpread(_objectSpread({}, oldData), {}, {\n            sending: false,\n            success: false,\n            donneIncorrect: true\n          });\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setEtatRequest(oldData => {\n        return _objectSpread(_objectSpread({}, oldData), {}, {\n          sending: false,\n          success: false,\n          donneIncorrect: true\n        });\n      });\n    }\n  };\n\n  const deleteImageHandle = async file => {\n    let response = await fetch(`${Config.BACKEND_URL}/upload/document`, {\n      method: 'DELETE',\n      body: JSON.stringify({\n        path: file.path,\n        id: file.id\n      }),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `token ${userData.token}`\n      }\n    });\n    response.json().then(response => {\n      let index = savedPictures.findIndex(fl => fl.id === file.id);\n      setSavedPictures(oldFiles => {\n        let clone = [...oldFiles];\n        clone.splice(index, 1);\n        return clone;\n      });\n    }).catch(error => {});\n  };\n\n  const removeImageHandle = file => {\n    let index = files.findIndex(fl => fl.id === file.id);\n    setFiles(oldFiles => {\n      let clone = [...oldFiles];\n      clone.splice(index, 1);\n      return clone;\n    });\n  };\n\n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\n    rejectedFiles.map(rejectedFile => {\n      if (rejectedFile.file.type.split('/')[0] === \"image\") {\n        const reader = new FileReader();\n        reader.readAsDataURL(rejectedFile.file);\n\n        reader.onloadend = () => {\n          let newFile = {\n            filePath: reader.result,\n            realName: rejectedFile.file.name,\n            type: 'file',\n            fileType: rejectedFile.file.type.split('/')[0]\n          };\n          setRejectedFiles(existing => [...existing, {\n            file: newFile,\n            errors: rejectedFile.errors\n          }]);\n        };\n      } else {\n        let newFile = {\n          realName: rejectedFile.file.name,\n          type: 'file',\n          fileType: rejectedFile.file.type.split('/')[0]\n        };\n        setRejectedFiles(existing => [...existing, {\n          file: newFile,\n          errors: rejectedFile.errors\n        }]);\n      }\n    });\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onloadend = () => {\n        let newFile = {\n          filePath: reader.result,\n          realName: file.name,\n          type: 'file',\n          fileType: \"image\",\n          kind: file.type\n        };\n        setFiles(existing => [...existing, newFile]);\n      };\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png, image/jpg, application/pdf'\n  });\n  const style = useMemo(() => _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, baseStyle), isDragActive ? activeStyle : {}), isDragAccept ? acceptStyle : {}), isDragReject ? rejectStyle : {}), [isDragActive, isDragReject, isDragAccept]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [savedPictures.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h5\",\n          children: \" Documents d\\xE9j\\xE0 partager dans cette consultation \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }, this) : null, savedPictures.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n        className: \"images-saved\",\n        children: savedPictures.map((file, index) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-5\",\n            lg: \"2\",\n            md: \"4\",\n            xs: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-saved\",\n              children: [file.type === \"application/pdf\" ? /*#__PURE__*/_jsxDEV(\"a\", {\n                href: Config.BACKEND_URL + file.path,\n                download: file.name,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: [\"  \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/image/pdf.png\",\n                  alt: \"...\",\n                  className: \"img-fluid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 151\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(ReactFancyBox, {\n                thumbnail: `${Config.BACKEND_URL}${file.path}`,\n                showCloseBtn: false,\n                image: `${Config.BACKEND_URL}${file.path}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => deleteImageHandle(file),\n                className: \"delete-button\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(TiDeleteOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 118\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 41\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center justify-content-around mt-4 \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getRootProps({\n          style,\n          className: \"dropzone\"\n        })), {}, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Glisser d\\xE9poser des fichiers ici ou\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" PARCOURIR SUR MON ORDINATEUR \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 72\n          }, this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this), canceledPictures.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h5\",\n          color: \"error\",\n          children: \" Ces documents n'on pas pus s'enregistrer au sein de nos serveur. essayer ult\\xE9ri\\xE9rement o\\xF9 bien essayer d'autre images \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }, this) : null, canceledPictures.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n        className: \"images-canceled\",\n        children: canceledPictures.map((file, index) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-5\",\n            lg: \"2\",\n            md: \"4\",\n            xs: \"6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-canceled\",\n              children: /*#__PURE__*/_jsxDEV(ReactFancyBox, {\n                thumbnail: file.filePath,\n                showCloseBtn: false,\n                image: file.filePath\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"error\",\n                children: \" Le serveur n'a pas pus suporter ces fichier \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 45\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center justify-content-around mt-4 \",\n        children: files.map((file, index) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-5\",\n            lg: \"6\",\n            md: \"6\",\n            xs: \"6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selecting-img-container\",\n              children: [/*#__PURE__*/_jsxDEV(ReactFancyBox, {\n                thumbnail: file.kind === \"application/pdf\" ? '/image/fileaccepted.png' : file.filePath,\n                showCloseBtn: false,\n                image: file.kind === \"application/pdf\" ? '/image/fileaccepted.png' : file.filePath\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => removeImageHandle(file),\n                className: \"delete-button\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(TiDeleteOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 117\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-3\",\n                children: [\" \", file.realName, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 40\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }, this), rejectedFiles.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h5\",\n          color: \"error\",\n          children: \" Fichier non acc\\xE9pter ils ne seront pas enregistrer sur le serveur \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center mt-4 \",\n        children: rejectedFiles.map((rejectedFile, index) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"\",\n            lg: \"6\",\n            md: \"12\",\n            xs: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rejected-img-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/img/file-rejected.png\",\n                alt: \"fichier rejeter\",\n                className: \"img-fluid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3\",\n                children: rejectedFile.errors.map((err, ind) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: err.code === \"file-invalid-type\" ? /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"error\",\n                      children: [\" Ce fichier \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"type-file-span\",\n                        children: [\" \", rejectedFile.file.realName, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 126\n                      }, this), \" est de type \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"type-file-span\",\n                        children: [\" \", rejectedFile.file.fileType, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 209\n                      }, this), \" . Seulement les images \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"type-file-span\",\n                        children: \"png, jpg et jpeg et document pdf  \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 303\n                      }, this), \"  sont acc\\xE9pter \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 87\n                    }, this) : \"\"\n                  }, ind, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 40\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: etatRequest.donneIncorecte,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: \"Un ou plusieur document n'a pas pus enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: etatRequest.success,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: \"Les document sont enregistrer avec succ\\xE9s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center justify-content-around mt-4 \",\n        children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n          disabled: files.length <= 0,\n          sending: etatRequest.sending,\n          successRequest: etatRequest.success,\n          type: \"submit\",\n          color: \"primary\",\n          children: \" Enregistrer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/components/Documents/DocumentsC.js"],"names":["React","useState","useMemo","useEffect","useCallback","Row","Col","Collapse","Alert","SubmitButton","useDropzone","useAuth","Config","Typography","ReactFancyBox","TiDeleteOutline","baseStyle","flex","display","flexDirection","alignItems","padding","cursor","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","Images","props","userData","etatRequest","setEtatRequest","success","sending","donneIncorrect","files","setFiles","rejectedFiles","setRejectedFiles","savedPictures","setSavedPictures","canceledPictures","setCanceledPictures","documents","socket","on","response","consultationId","consultation","id","oldPic","uploadedFiles","removeAllListeners","handleSubmit","e","preventDefault","oldData","fetch","BACKEND_URL","method","body","JSON","stringify","data","sentTo","headers","token","json","then","uploadingFile","error","length","canceledData","map","dd","index","emit","selectedUser","medecin","catch","err","console","log","deleteImageHandle","file","path","findIndex","fl","oldFiles","clone","splice","removeImageHandle","onDrop","acceptedFiles","rejectedFile","type","split","reader","FileReader","readAsDataURL","onloadend","newFile","filePath","result","realName","name","fileType","existing","errors","forEach","kind","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","accept","style","className","ind","code","donneIncorecte"],"mappings":"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","sourcesContent":["import React,{useState,useMemo, useEffect, useCallback} from 'react'\r\n\r\nimport {Row, Col, Collapse, Alert} from 'react-bootstrap'\r\n\r\nimport  SubmitButton  from './../../components/CustomButtons/SubmitButton.js';\r\n\r\n// import AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport Config from './../../EndPoint'\r\nimport {Typography} from '@material-ui/core'\r\n\r\nimport ReactFancyBox from './../fancyBox/fancybox/ReactFancyBox'\r\nimport {TiDeleteOutline} from 'react-icons/ti'\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '40px 20px',\r\n    cursor: 'pointer',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n  };\r\n  \r\n  const activeStyle = {\r\n    borderColor: '#2196f3'\r\n  };\r\n  \r\n  const acceptStyle = {\r\n    borderColor: '#00e676'\r\n  };\r\n  \r\n  const rejectStyle = {\r\n    borderColor: '#ff1744'\r\n  };\r\n\r\n  \r\nexport default function Images(props) {\r\n    const {userData} = useAuth();\r\n\r\n    const [etatRequest, setEtatRequest] = useState({success: false, sending:false, donneIncorrect: false});\r\n    const [files, setFiles] = useState([])\r\n    const [rejectedFiles, setRejectedFiles] = useState([]);\r\n    const [savedPictures, setSavedPictures] = useState([]);\r\n    const [canceledPictures, setCanceledPictures] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(props.documents){\r\n            setSavedPictures(props.documents)  \r\n        }     \r\n        return () => {\r\n            \r\n        }\r\n    }, [props.documents])\r\n    useEffect(() => {\r\n        if(props.socket){\r\n            props.socket.on('newDocuments', (response)=> { \r\n                if(response.consultationId === props.consultation.id){\r\n                    setSavedPictures( oldPic => [...oldPic, ...response.uploadedFiles]);\r\n                }\r\n            });  \r\n        }\r\n\r\n        return () => {\r\n            if(props.socket){\r\n                props.socket.removeAllListeners('newDocuments')\r\n            }\r\n        }\r\n    }, [props.socket])\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        setEtatRequest(oldData => {return {...oldData, sending:true}});\r\n\r\n        try {\r\n            let response = await fetch(`${Config.BACKEND_URL}/upload/document`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ data: files, consultation: props.consultation, sentTo: \"medecin\" }),\r\n                headers: {\r\n                  'Accept': 'application/json', \r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `token ${userData.token}`,\r\n                },\r\n            });\r\n\r\n          response.json()\r\n          .then(uploadingFile =>{\r\n            if(!uploadingFile.error){\r\n                setEtatRequest(oldData => {return {...oldData, sending:false, success:true}});\r\n    \r\n                if(uploadingFile.savedPictures.length> 0){\r\n                    setSavedPictures( oldPic => [...oldPic, ...uploadingFile.savedPictures]);\r\n                }\r\n                if (uploadingFile.canceledData.length > 0) {\r\n                    uploadingFile.canceledData.map((dd) => {\r\n                        setCanceledPictures(oldData => [...oldData, files[dd.index]]);\r\n                    })                \r\n                    setFiles([])\r\n                    setRejectedFiles([])\r\n                }else {\r\n                    setFiles([])\r\n                    setRejectedFiles([])\r\n                }\r\n                props.socket.emit('newDocuments', { uploadedFiles: uploadingFile.savedPictures , consultationId: props.consultation.id, selectedUser:  \"m\" + props.consultation.medecin.id}, (response)=> { });  \r\n\r\n                \r\n\r\n            }else{\r\n                setEtatRequest(oldData => {return {...oldData, sending:false, success:false, donneIncorrect: true}}); \r\n            }\r\n      \r\n          }).catch(err => {\r\n            setEtatRequest(oldData => {return {...oldData, sending:false, success:false, donneIncorrect: true}}); \r\n          })\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n                setEtatRequest(oldData => {return {...oldData, sending:false, success:false, donneIncorrect: true}}); \r\n         \r\n        }  \r\n    }\r\n    const deleteImageHandle = async (file) => {\r\n\r\n        let response = await fetch(`${Config.BACKEND_URL}/upload/document`, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({path: file.path, id: file.id}),\r\n            headers: {\r\n              'Accept': 'application/json', \r\n              'Content-Type': 'application/json',\r\n              'Authorization': `token ${userData.token}`,\r\n            },\r\n        });\r\n\r\n        response.json()\r\n        .then(response => {\r\n            let index = savedPictures.findIndex(fl => fl.id === file.id);\r\n\r\n            setSavedPictures(oldFiles => {\r\n                let clone = [...oldFiles]\r\n                clone.splice(index, 1);\r\n                return (clone)\r\n            })\r\n        })\r\n        .catch(error => {\r\n            \r\n        })\r\n    }\r\n\r\n    const removeImageHandle =  (file) => {\r\n        let index = files.findIndex(fl => fl.id === file.id);\r\n\r\n        setFiles(oldFiles => {\r\n            let clone = [...oldFiles]\r\n            clone.splice(index, 1);\r\n            return (clone)\r\n        })\r\n      \r\n    }\r\n\r\n    const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\r\n        rejectedFiles.map(rejectedFile => {\r\n\r\n            if(rejectedFile.file.type.split('/')[0] === \"image\"){\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(rejectedFile.file);\r\n                reader.onloadend = () => {                    \r\n                    let newFile =  {filePath: reader.result, realName: rejectedFile.file.name, type: 'file', fileType: rejectedFile.file.type.split('/')[0]  }\r\n                    setRejectedFiles(existing => [...existing, {file: newFile, errors: rejectedFile.errors}])          \r\n                }\r\n            }else{\r\n                let newFile =  { realName: rejectedFile.file.name, type: 'file', fileType: rejectedFile.file.type.split('/')[0]  }\r\n                setRejectedFiles(existing => [...existing, {file: newFile, errors: rejectedFile.errors}])\r\n\r\n            }\r\n        })\r\n\r\n        acceptedFiles.forEach((file) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onloadend = () => {    \r\n                let newFile =  {filePath: reader.result, realName: file.name, type: 'file', fileType: \"image\", kind: file.type  }\r\n                setFiles(existing => [...existing, newFile])          \r\n            }\r\n        })      \r\n    }, [])\r\n\r\n    const { getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({onDrop, accept: 'image/jpeg, image/png, image/jpg, application/pdf'})\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n      }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n      ]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            \r\n                <Col>\r\n                    {   savedPictures.length > 0 ?\r\n                        <Row className=\"mb-3\">\r\n                            <Typography variant=\"h5\" component=\"h5\" > Documents déjà partager dans cette consultation </Typography>\r\n                        </Row>\r\n                        : null\r\n                    }\r\n                    {\r\n                        savedPictures.length > 0 ?\r\n                        <Row className=\"images-saved\">\r\n                            { savedPictures.map((file, index) => {\r\n                                return (\r\n                                    <Col className=\"mt-5\" lg=\"2\" md=\"4\" xs=\"6\" key={index}>\r\n                                        <div className=\"image-saved\">\r\n                                            {file.type === \"application/pdf\" ?\r\n                                            <a href={Config.BACKEND_URL + file.path} download={file.name} target=\"_blank\" rel=\"noopener noreferrer\">  <img src='/image/pdf.png' alt=\"...\" className=\"img-fluid\" /> </a>\r\n                                            :\r\n                                            <ReactFancyBox\r\n                                                thumbnail={`${Config.BACKEND_URL}${file.path}`}\r\n                                                showCloseBtn={false}\r\n                                                image={`${Config.BACKEND_URL}${file.path}`}/>\r\n                                            }\r\n                                            <span onClick={() => deleteImageHandle(file)} className=\"delete-button\"> <TiDeleteOutline /> </span>                                            \r\n                                        </div>\r\n                                    </Col>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                        : null\r\n                    }                    \r\n                    <Row className=\"align-items-center justify-content-around mt-4 \">\r\n                       <div {...getRootProps({style, className:\"dropzone\"})}>\r\n                            <input {...getInputProps()} />\r\n                            <p>Glisser déposer des fichiers ici ou</p> <h4> PARCOURIR SUR MON ORDINATEUR </h4>\r\n                        </div>\r\n                    </Row>\r\n\r\n                    {   canceledPictures.length > 0 ?\r\n                        <Row className=\"mt-5\">\r\n                            <Typography variant=\"h5\" component=\"h5\" color=\"error\"> Ces documents n'on pas pus s'enregistrer au sein de nos serveur. essayer ultériérement où bien essayer d'autre images </Typography>\r\n                        </Row>\r\n                        : null\r\n                    }\r\n                    {\r\n                        canceledPictures.length > 0 ?\r\n                        <Row className=\"images-canceled\">\r\n                            { canceledPictures.map((file, index) => {\r\n                                    return (\r\n                                        <Col className=\"mt-5\" lg=\"2\" md=\"4\" xs=\"6\" key={index}>\r\n                                            <div className=\"image-canceled\">\r\n                                                {/* <img src={file.filePath} alt={file.realName} className=\"img-fluid\" /> */}\r\n                                                <ReactFancyBox\r\n                                                thumbnail={file.filePath}\r\n                                                showCloseBtn={false}\r\n                                                image={file.filePath}/>\r\n                                            </div>\r\n                                            <div>\r\n                                            <Typography color=\"error\" > Le serveur n'a pas pus suporter ces fichier </Typography>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                            })\r\n                            }\r\n                        </Row>\r\n                        : null\r\n                    }\r\n                    <Row className=\"align-items-center justify-content-around mt-4 \">\r\n                        {\r\n                           files.map((file, index) => {\r\n                                return (\r\n                                   <Col className=\"mt-5\" lg=\"6\" md=\"6\" xs=\"6\" key={index}>\r\n                                       <div className=\"selecting-img-container\">\r\n                                           {/* <img src={ file.kind === \"application/pdf\" ? '/image/fileaccepted.png' : file.filePath } alt={file.realName} className=\"img-fluid\" /> */}\r\n                                           <ReactFancyBox\r\n                                                thumbnail={file.kind === \"application/pdf\" ? '/image/fileaccepted.png' : file.filePath}\r\n                                                showCloseBtn={false}\r\n                                                image={file.kind === \"application/pdf\" ? '/image/fileaccepted.png' : file.filePath}/>\r\n                                           <span onClick={() => removeImageHandle(file)} className=\"delete-button\"> <TiDeleteOutline /> </span>\r\n                                       </div>\r\n                                       <div>\r\n                                           <p className=\"mt-3\"> {file.realName} </p>\r\n                                       </div>\r\n                                   </Col>\r\n                                )\r\n                           })\r\n                        }\r\n                    </Row>\r\n                    {   rejectedFiles.length > 0 ?\r\n                        <Row className=\"mt-5\">\r\n                            <Typography variant=\"h5\" component=\"h5\" color=\"error\" > Fichier non accépter ils ne seront pas enregistrer sur le serveur </Typography>\r\n                        </Row>\r\n                        : null\r\n                    }\r\n                    <Row className=\"align-items-center mt-4 \">\r\n                        {\r\n                            rejectedFiles.map((rejectedFile, index) => {\r\n                                return (\r\n                                   <Col className=\"\" lg=\"6\" md=\"12\" xs=\"12\" key={index}>\r\n                                       <div className=\"rejected-img-container\">\r\n                                           <img src={\"/img/file-rejected.png\"} alt={\"fichier rejeter\"} className=\"img-fluid\" />\r\n                                       </div>\r\n                                       <div>\r\n                                           <div className=\"mt-3\"> \r\n                                            { rejectedFile.errors.map((err, ind) => {\r\n                                               return(\r\n                                                <div key={ind}>\r\n                                                    {err.code===\"file-invalid-type\" ? <Typography color=\"error\" > Ce fichier <span className=\"type-file-span\"> {rejectedFile.file.realName} </span> est de type <span className=\"type-file-span\"> {rejectedFile.file.fileType} </span> . Seulement les images <span className=\"type-file-span\">png, jpg et jpeg et document pdf  </span>  sont accépter </Typography> : \"\"}\r\n                                                </div>\r\n                                               )\r\n                                            })} \r\n                                           </div>\r\n                                       </div>\r\n                                   </Col>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Row>\r\n                    <Row>\r\n                        <Collapse in={ etatRequest.donneIncorecte}>\r\n                            <div>\r\n                                <Alert  variant=\"danger\">\r\n                                    Un ou plusieur document n'a pas pus enregistrer\r\n                                </Alert>\r\n                            </div>\r\n                        </Collapse>\r\n                    </Row>\r\n                    <Row>\r\n                        <Collapse in={etatRequest.success}>\r\n                            <div >\r\n                                <Alert  variant=\"success\">\r\n                                    Les document sont enregistrer avec succés\r\n                                </Alert>\r\n                            </div>\r\n                        </Collapse>\r\n                    </Row>\r\n                    <Row className=\"align-items-center justify-content-around mt-4 \">\r\n                        <SubmitButton disabled={files.length <= 0} sending={etatRequest.sending} successRequest={etatRequest.success} type=\"submit\" color=\"primary\"> Enregistrer </SubmitButton>\r\n                    </Row>\r\n                </Col>\r\n                \r\n            </form>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}