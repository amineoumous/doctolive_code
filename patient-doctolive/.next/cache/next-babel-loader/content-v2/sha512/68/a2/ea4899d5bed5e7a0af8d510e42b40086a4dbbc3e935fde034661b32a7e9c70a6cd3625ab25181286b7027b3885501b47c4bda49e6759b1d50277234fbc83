{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// src/context/state.js\nimport { createContext, useContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { useRouter } from 'next/router';\nimport Button from './../components/CustomButtons/Button';\nimport contentFR from './../contentFR';\nimport contentEN from './../contentEN';\nimport contentAR from './../contentAR'; // @material-ui/icons\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\nimport Config from './../EndPoint';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nvar AppContext = /*#__PURE__*/createContext();\nexport function AuthWrapper(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var existinguserData = Cookies.get(\"patientData\");\n  existinguserData = existinguserData != undefined ? JSON.parse(existinguserData) : {};\n  var router = useRouter();\n  var locale = router.locale;\n  var content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n\n  var _useState = useState(existinguserData),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  var _useState2 = useState(false),\n      addedByAdmin = _useState2[0],\n      setAddedByAdmin = _useState2[1];\n\n  var _useState3 = useState({\n    password_confirmation: \"\",\n    password: \"\",\n    old_password: \"\"\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var setUser = function setUser(data) {\n    if (!data.token) {\n      Cookies.set('patientData', {}, {\n        expires: -1000\n      });\n      setUserData({\n        isAuth: false\n      });\n      return router.push({\n        pathname: \"/account/new\"\n      });\n    } else {\n      setAddedByAdmin(data.user.addedByAdmin && !data.user.passwordChanged);\n      Cookies.set('patientData', JSON.stringify(data));\n      Cookies.set('token', data.token);\n      setUserData(data);\n    }\n  };\n\n  useEffect(function () {\n    if (userData.token) {\n      setAddedByAdmin(userData.user.addedByAdmin && !userData.user.passwordChanged);\n      fetch(\"\".concat(Config.BACKEND_URL, \"/patient/verify\"), {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"token \".concat(userData.token)\n        }\n      }).then(function (r) {\n        return r.json().then(function (res) {\n          if (!res.error) {// setUserData(existinguserData);\n          } else {\n            setUserData({\n              isAuth: false\n            });\n          }\n        });\n      })[\"catch\"](function (error) {\n        setUserData({\n          isAuth: false\n        });\n      });\n    }\n\n    return function () {};\n  }, []);\n\n  var handleConfirmation = function handleConfirmation() {\n    var testPass = state.password.trimStart();\n\n    if (testPass.length > 6) {\n      var data = {\n        password: state.password,\n        password_confirmation: state.password_confirmation,\n        old_password: state.old_password,\n        email: userData.user.email\n      };\n      fetch(\"\".concat(Config.BACKEND_URL, \"/patient/new-password\"), {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"token \".concat(userData.token)\n        }\n      }).then(function (res) {\n        console.log(res);\n        setAddedByAdmin(false);\n        setUserData(res.data.updatePatient);\n      })[\"catch\"](function (err) {\n        console.log(err.response);\n      });\n    }\n  };\n\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n        value = _ref2$target.value,\n        name = _ref2$target.name;\n    setState(function (old) {\n      return _objectSpread(_objectSpread({}, old), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      userData: userData,\n      setUser: setUser\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(Dialog // open={false}\n    , {\n      open: addedByAdmin,\n      onClose: function onClose() {},\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \" Renouveler le mot de passe \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Ce compte \\xE0 tait cr\\xE9er avec un administrateur, alors ce mot de passe \\xE0 \\xE9tait g\\xE9n\\xE9rer d'une mani\\xE9re al\\xE9atoir. On vous recomande de saisir un nouveau mot de passe pour la scuit\\xE9 de vos information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"mt-3\",\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"standard-adornment-password\",\n            children: [\" \", content[\"new\"].oldpassLabel, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"standard-adornment-password\",\n            type: state.showPassword ? 'text' : 'password',\n            value: state.old_password,\n            onChange: handleChange,\n            required: true,\n            label: content[\"new\"].oldpassLabel,\n            name: \"old_password\",\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return setState(function (old) {\n                    return _objectSpread(_objectSpread({}, old), {}, {\n                      showPassword: !state.showPassword\n                    });\n                  });\n                },\n                children: state.showPassword ? /*#__PURE__*/_jsxDEV(MdVisibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(MdVisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"mt-3\",\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"standard-adornment-password\",\n            children: [\" \", content[\"new\"].passLabel, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"standard-adornment-password\",\n            type: state.showPassword ? 'text' : 'password',\n            value: state.password,\n            onChange: handleChange,\n            required: true,\n            label: content[\"new\"].passLabel,\n            name: \"password\",\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return setState(function (old) {\n                    return _objectSpread(_objectSpread({}, old), {}, {\n                      showPassword: !state.showPassword\n                    });\n                  });\n                },\n                children: state.showPassword ? /*#__PURE__*/_jsxDEV(MdVisibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(MdVisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"mt-3\",\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"standard-adornment-password\",\n            children: [\" \", content[\"new\"].confirmpassLabel, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"standard-adornment-password\",\n            type: state.showPassword ? 'text' : 'password',\n            value: state.password_confirmation,\n            onChange: handleChange,\n            required: true,\n            label: content[\"new\"].confirmpassLabel,\n            name: \"password_confirmation\",\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return setState(function (old) {\n                    return _objectSpread(_objectSpread({}, old), {}, {\n                      showPassword: !state.showPassword\n                    });\n                  });\n                },\n                children: state.showPassword ? /*#__PURE__*/_jsxDEV(MdVisibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(MdVisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmation,\n          color: \"danger\",\n          children: \"Confirmer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthWrapper, \"3ozK6mRNjldoixUlYF5WWctgkVw=\", false, function () {\n  return [useRouter];\n});\n\n_c = AuthWrapper;\nexport function useAuth() {\n  _s2();\n\n  return useContext(AppContext);\n}\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthWrapper\");","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/context/AuthContext.js"],"names":["createContext","useContext","useState","useEffect","Cookies","useRouter","Button","contentFR","contentEN","contentAR","InputLabel","FormControl","OutlinedInput","InputAdornment","IconButton","MdVisibility","MdVisibilityOff","Config","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","AppContext","AuthWrapper","children","existinguserData","get","undefined","JSON","parse","router","locale","content","userData","setUserData","addedByAdmin","setAddedByAdmin","password_confirmation","password","old_password","state","setState","setUser","data","token","set","expires","isAuth","push","pathname","user","passwordChanged","stringify","fetch","BACKEND_URL","headers","then","r","json","res","error","handleConfirmation","testPass","trimStart","length","email","method","body","console","log","updatePatient","err","response","handleChange","target","value","name","old","oldpassLabel","showPassword","passLabel","confirmpassLabel","useAuth"],"mappings":"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","sourcesContent":["// src/context/state.js\r\nimport { createContext, useContext } from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Cookies from 'js-cookie';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport Button from './../components/CustomButtons/Button'\r\n\r\n\r\nimport contentFR from './../contentFR'\r\nimport contentEN from './../contentEN'\r\nimport contentAR from './../contentAR'\r\n\r\n// @material-ui/icons\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport {MdVisibility, MdVisibilityOff} from 'react-icons/md'\r\n\r\n\r\nimport Config from './../EndPoint';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nconst AppContext = createContext();\r\n\r\n\r\nexport function AuthWrapper({ children }) {\r\n  let existinguserData = Cookies.get(\"patientData\");\r\n\r\n  existinguserData = (existinguserData != undefined) ? JSON.parse(existinguserData) : {};\r\n  const router = useRouter();\r\n  const {locale} = router;\r\n\r\n  const content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\r\n\r\n    const [userData, setUserData] = useState(existinguserData);\r\n    const [addedByAdmin, setAddedByAdmin] = useState(false);\r\n    const [state, setState] = useState({\r\n      password_confirmation: \"\",\r\n      password:\"\",\r\n      old_password:\"\",\r\n});\r\n    const setUser = (data) => {\r\n      if(!data.token){\r\n        Cookies.set('patientData', {}, { expires: -1000 });\r\n\r\n\r\n        setUserData({isAuth: false});\r\n        return router.push({\r\n          pathname: `/account/new`,\r\n        })\r\n      }else {\r\n        setAddedByAdmin(data.user.addedByAdmin && !data.user.passwordChanged);\r\n        Cookies.set('patientData', JSON.stringify(data));\r\n        Cookies.set('token', data.token);\r\n        setUserData(data);\r\n      }\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n      if(userData.token){\r\n        setAddedByAdmin(userData.user.addedByAdmin && !userData.user.passwordChanged);\r\n        fetch(`${Config.BACKEND_URL}/patient/verify`,{\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `token ${userData.token}`,\r\n          },\r\n        })\r\n        .then(\r\n            (r) => r.json()\r\n            .then(res => {\r\n\r\n                if(!res.error){\r\n                  // setUserData(existinguserData);\r\n                }else {\r\n                  setUserData({isAuth: false});\r\n                }\r\n          \r\n            })\r\n        ).catch(error =>{ \r\n            setUserData({isAuth: false});\r\n        })\r\n      }\r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n      \r\n    const handleConfirmation = () => {\r\n      let testPass = state.password.trimStart();\r\n\r\n      if(testPass.length > 6) {\r\n        let data = {password: state.password, password_confirmation: state.password_confirmation, old_password: state.old_password, email: userData.user.email }\r\n        fetch(`${Config.BACKEND_URL}/patient/new-password`, {\r\n          method: 'PUT',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'Accept': 'application/json', \r\n            'Content-Type': 'application/json',\r\n            'Authorization': `token ${userData.token}`,\r\n          },\r\n      } )\r\n        .then((res) =>{\r\n          console.log(res);\r\n          setAddedByAdmin(false);\r\n          setUserData(res.data.updatePatient)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response)\r\n\r\n        })\r\n      }\r\n      \r\n    }\r\n\r\n    const handleChange = ({target : {value, name}}) => {\r\n      setState(old => {return { ...old, [name]: value}}) ;\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider value={{ userData, setUser }}>\r\n      {children}\r\n      <Dialog\r\n        // open={false}\r\n        open={addedByAdmin}\r\n        onClose={ () => {}}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\"> Renouveler le mot de passe </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Ce compte à tait créer avec un administrateur, alors ce mot de passe à était générer d'une maniére aléatoir. On vous recomande de saisir un nouveau mot de passe pour la scuité de vos information.\r\n          </DialogContentText>\r\n          <FormControl className=\"mt-3\" fullWidth variant=\"outlined\">\r\n          <InputLabel htmlFor=\"standard-adornment-password\"> {content.new.oldpassLabel} </InputLabel>\r\n          <OutlinedInput\r\n              id=\"standard-adornment-password\"\r\n              type={state.showPassword ? 'text' : 'password'}\r\n              value={state.old_password}\r\n              onChange={handleChange}\r\n              required={true}\r\n              label={content.new.oldpassLabel}\r\n              name=\"old_password\"\r\n              endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={ () => setState(old =>{return  {...old, showPassword: !state.showPassword}})} \r\n                  >\r\n                  {state.showPassword ? <MdVisibility /> : <MdVisibilityOff />}\r\n                  </IconButton>\r\n              </InputAdornment>\r\n              }\r\n          />\r\n          </FormControl>\r\n          <FormControl className=\"mt-3\" fullWidth variant=\"outlined\">\r\n          <InputLabel htmlFor=\"standard-adornment-password\"> {content.new.passLabel} </InputLabel>\r\n          <OutlinedInput\r\n              id=\"standard-adornment-password\"\r\n              type={state.showPassword ? 'text' : 'password'}\r\n              value={state.password}\r\n              onChange={handleChange}\r\n              required={true}\r\n              label={content.new.passLabel}\r\n              name=\"password\"\r\n              endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={ () => setState(old =>{return  {...old, showPassword: !state.showPassword}})} \r\n                  >\r\n                  {state.showPassword ? <MdVisibility /> : <MdVisibilityOff />}\r\n                  </IconButton>\r\n              </InputAdornment>\r\n              }\r\n          />\r\n          </FormControl>\r\n          <FormControl className=\"mt-3\" fullWidth variant=\"outlined\">\r\n          <InputLabel htmlFor=\"standard-adornment-password\"> {content.new.confirmpassLabel} </InputLabel>\r\n          <OutlinedInput\r\n              id=\"standard-adornment-password\"\r\n              type={state.showPassword ? 'text' : 'password'}\r\n              value={state.password_confirmation}\r\n              onChange={handleChange}\r\n              required={true}\r\n              label={content.new.confirmpassLabel}\r\n              name=\"password_confirmation\"\r\n              endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={ () => setState(old =>{return  {...old, showPassword: !state.showPassword}})} \r\n                  >\r\n                  {state.showPassword ? <MdVisibility /> : <MdVisibilityOff />}\r\n                  </IconButton>\r\n              </InputAdornment>\r\n              }\r\n          />\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleConfirmation} color=\"danger\">\r\n            Confirmer\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n                   \r\n\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AppContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}