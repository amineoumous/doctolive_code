{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Button, TextField, FormControlLabel, Checkbox, Box, Typography, Container } from '@material-ui/core';\nimport Config from './../EndPoint';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from 'next/router';\nimport contentFR from './../contentFR';\nimport contentEN from './../contentEN';\nimport contentAR from './../contentAR';\nimport { Row, Collapse, Alert } from 'react-bootstrap';\nvar useOutlinedInputStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      \"& $notchedOutline\": {\n        borderColor: \"#38869C\",\n        borderWidth: \"2px !important\"\n      },\n      \"&:hover $notchedOutline\": {\n        borderColor: \"#38869C\",\n        borderWidth: \"2px !important\"\n      },\n      \"&$focused $notchedOutline\": {\n        borderColor: \"#38869C\",\n        borderWidth: \"2px !important\"\n      }\n    },\n    focused: {},\n    notchedOutline: {}\n  };\n});\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    textField: {\n      borderRadius: 13,\n      borderColor: \"#38869C\",\n      color: \"#61788E\"\n    },\n    text_info: {\n      color: \"#61788E\",\n      fontSize: 14,\n      fontWeight: 500\n    },\n    notchedOutline: {\n      borderColor: '#38869C !important',\n      borderWidth: \"2px !important\"\n    }\n  };\n});\nexport default function AuthForm(props) {\n  var classes = useStyles();\n  var router = useRouter();\n  var locale = router.locale;\n  var content = locale === \"ar\" ? contentAR : locale === \"en\" ? contentEN : contentFR;\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      emailError = _useState3[0],\n      setEmailError = _useState3[1];\n\n  var _useState4 = useState(false),\n      passwordError = _useState4[0],\n      setPasswordError = _useState4[1];\n\n  var _useState5 = useState(\"Information incorrect\"),\n      messageError = _useState5[0],\n      setErrorMessage = _useState5[1];\n\n  var _useState6 = useState({\n    sending: false,\n    success: false,\n    donneIncorecte: false\n  }),\n      response = _useState6[0],\n      setResponse = _useState6[1];\n\n  var validateField = function validateField(e) {\n    if (e.target.name === \"email\") {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      var emailErr = !re.test(String(email).toLowerCase());\n      setEmailError(emailErr);\n    } else if (e.target.name === \"password\") {\n      var passwordLeng = password.length;\n      setPasswordError(passwordLeng < 8);\n    }\n  };\n\n  var submiting = function submiting(e) {\n    e.preventDefault();\n    setResponse(function (old) {\n      return _objectSpread(_objectSpread({}, old), {}, {\n        sending: true\n      });\n    });\n\n    if (!emailError && !passwordError) {\n      var data = {\n        email: email,\n        password: password\n      };\n      fetch(\"\".concat(Config.BACKEND_URL, \"/patient/auth\"), {\n        method: \"post\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(_objectSpread({}, data))\n      }).then(function (r) {\n        return r.json().then(function (res) {\n          console.log(res);\n\n          if (!res.error) {\n            props.submiting(res);\n            setResponse({\n              sending: false,\n              success: true,\n              donneIncorecte: false\n            });\n          } else {\n            setResponse({\n              sending: false,\n              success: false,\n              donneIncorecte: true\n            });\n\n            if (res.validator) {} else {\n              setErrorMessage(res.message);\n            }\n          }\n        })[\"catch\"](function (e) {\n          console.log(e.response);\n          setResponse({\n            sending: false,\n            success: false,\n            donneIncorecte: true\n          });\n\n          if (e.response.data.error) {\n            setErrorMessage(e.response.data.message);\n          } else {\n            setErrorMessage(\"Une éreur inconue est survenue\");\n          }\n        });\n      })[\"catch\"](function (e) {\n        console.log(e.response);\n        setResponse({\n          sending: false,\n          success: false,\n          donneIncorecte: true\n        });\n\n        if (e.response.data.error) {\n          setErrorMessage(e.response.data.message);\n        } else {\n          setErrorMessage(\"Une éreur inconue est survenue\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        className: classes.form,\n        onSubmit: function onSubmit(e) {\n          return submiting(e, {\n            email: email,\n            password: password\n          });\n        },\n        children: [/*#__PURE__*/_jsx(TextField, {\n          value: email,\n          onChange: function onChange(e) {\n            return setEmail(e.target.value);\n          },\n          error: emailError,\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          },\n          id: \"email\",\n          variant: \"outlined\",\n          onBlur: validateField,\n          label: content[\"new\"].emailLabel,\n          name: \"email\",\n          autoComplete: \"email\"\n        }), /*#__PURE__*/_jsx(TextField, {\n          margin: \"normal\",\n          value: password,\n          variant: \"outlined\",\n          onChange: function onChange(e) {\n            return setPassword(e.target.value);\n          },\n          error: passwordError,\n          required: true,\n          fullWidth: true,\n          onBlur: validateField,\n          InputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            },\n            style: {\n              borderRadius: \"10px\"\n            }\n          },\n          InputLabelProps: {\n            style: {\n              color: '#61788E'\n            }\n          },\n          name: \"password\",\n          label: content[\"new\"].passLabel,\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\"\n        }), /*#__PURE__*/_jsx(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: content[\"new\"].signin\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Box, {\n      mt: 8,\n      children: /*#__PURE__*/_jsx(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsx(Collapse, {\n          \"in\": response.donneIncorecte,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            id: \"example-collapse-text\",\n            children: /*#__PURE__*/_jsxs(Alert, {\n              variant: \"danger\",\n              children: [\" \", messageError, \" \"]\n            })\n          })\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}