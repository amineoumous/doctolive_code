{"ast":null,"code":"import _defineProperty from \"C:/app/doctolive_code/patient-doctolive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\patient-doctolive\\\\components\\\\MedecinWidget\\\\MedecinWidget.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Config from './../../EndPoint';\nimport { useRouter } from 'next/router';\nimport { useAppContext } from './../../context/AppointementContext';\nimport { MdVideocam } from 'react-icons/md';\nimport { Row } from 'react-bootstrap';\nimport ReactFancyBox from './../fancyBox/fancybox/ReactFancyBox';\nimport Button from './../CustomButtons/Button';\nimport Link from 'next/link';\nimport CalendarAvailability from './CalendarAvailability';\nimport moment from 'moment';\nexport default function MedecinWidget(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      showDisponibilite = _useState[0],\n      setShowDisponibilite = _useState[1];\n\n  var content = props.content,\n      locale = props.locale;\n\n  var _useState2 = useState(),\n      selectedHour = _useState2[0],\n      setSelectedHour = _useState2[1];\n\n  var _useState3 = useState(),\n      selectedDate = _useState3[0],\n      setSelectedDate = _useState3[1];\n\n  var _useAppContext = useAppContext(),\n      setUserTemporary = _useAppContext.setUserTemporary;\n\n  var router = useRouter();\n\n  var setDetails = function setDetails(day, hour) {\n    setSelectedDate(day);\n    setSelectedHour(hour);\n  };\n\n  var validateTime = function validateTime() {\n    if (props.medecin && props.medecin.id) {\n      setUserTemporary({\n        date: selectedDate,\n        time: selectedHour,\n        medecinId: props.medecin.id\n      });\n      return router.push({\n        pathname: \"/doctor/\".concat(props.medecin.id, \"/appointment\")\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-widget\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doc-info-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doctor-img\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"doctor-profile.html\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: props.medecin && props.medecin.image ? \"\".concat(Config.BACKEND_URL, \"/\").concat(props.medecin.image) : \"/image/medecin/homme.jpg\",\n                className: \"img-fluid img-100\",\n                alt: \"User Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doc-info-cont\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"doc-name\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"doctor-profile.html\",\n                className: \"doc-name\",\n                children: [\"Dr. \", props.medecin && \"\".concat(props.medecin.nom, \" \").concat(props.medecin.prenom)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), props.medecin && props.medecin.specialites.map(function (specialite, index) {\n              return /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"doc-department-md\",\n                children: [!specialite.icon ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"\".concat(Config.BACKEND_URL, \"/\").concat(specialite.icon),\n                  className: \"img-fluid\",\n                  alt: \"Speciality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 64\n                }, _this), specialite.name]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, _this);\n            }), !props.medecin.teleconsultationIsDisponible ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(MdVideocam, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 106\n              }, this), \" \", content.availableVideo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 83\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clinic-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"doc-location\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-map-marker-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 61\n                }, this), !props.medecin.adress ? content.notSpecified : \"\".concat(props.medecin.adress.streetName || \"\", \" \").concat(props.medecin.adress.buildingName || \"\", \" \").concat(props.medecin.adress.floor ? \"Ã©tage \" + props.medecin.adress.floor : \"\", \" \").concat(props.medecin.adress.sector || \"\", \", \").concat(props.medecin.adress.codePostal || \"\", \" - \").concat(props.medecin.city ? props.medecin.city.name : \"\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: props.medecin.pictures.map(function (picture, index) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cabinet-img-container ml-2\",\n                    children: /*#__PURE__*/_jsxDEV(ReactFancyBox, {\n                      thumbnail: \"\".concat(Config.BACKEND_URL, \"/\").concat(picture.path),\n                      showCloseBtn: false,\n                      image: \"\".concat(Config.BACKEND_URL, \"/\").concat(picture.path)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 45\n                    }, _this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: locale === \"ar\" ? \"doc-info-leftr\" : \"doc-info-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clinic-booking\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: props.medecin ? \"/doctor/\".concat(props.medecin.id) : \"#\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"view-pro-btn\",\n                children: [\" \", content.seeProfile, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: function onClick() {\n                return setShowDisponibilite(true);\n              },\n              color: \"primary\",\n              children: [\" \", content.seeDispo, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), showDisponibilite && props.showDisponibilite && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"availability-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: content.dispo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CalendarAvailability, _objectSpread(_objectSpread({}, props), {}, {\n              setSelectedHour: setDetails\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: !selectedHour && !selectedDate ? null : content.timeSelected + moment(selectedDate + selectedHour, 'YYYY/MM/DDHH:mm').calendar()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return setShowDisponibilite(false);\n                },\n                color: \"transparent\",\n                children: content.cancel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !selectedHour,\n                onClick: validateTime,\n                color: \"primary\",\n                children: content.confirm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MedecinWidget, \"kbta4hz+PGOGq1OJI2ju8GVetRM=\", false, function () {\n  return [useAppContext, useRouter];\n});\n\n_c = MedecinWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedecinWidget\");","map":{"version":3,"sources":["C:/app/doctolive_code/patient-doctolive/components/MedecinWidget/MedecinWidget.js"],"names":["React","useState","Config","useRouter","useAppContext","MdVideocam","Row","ReactFancyBox","Button","Link","CalendarAvailability","moment","MedecinWidget","props","showDisponibilite","setShowDisponibilite","content","locale","selectedHour","setSelectedHour","selectedDate","setSelectedDate","setUserTemporary","router","setDetails","day","hour","validateTime","medecin","id","date","time","medecinId","push","pathname","image","BACKEND_URL","nom","prenom","specialites","map","specialite","index","icon","name","teleconsultationIsDisponible","availableVideo","adress","notSpecified","streetName","buildingName","floor","sector","codePostal","city","pictures","picture","path","seeProfile","seeDispo","dispo","timeSelected","calendar","cancel","confirm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Config from './../../EndPoint';\r\nimport { useRouter } from 'next/router';\r\nimport { useAppContext } from './../../context/AppointementContext';\r\nimport { MdVideocam } from 'react-icons/md';\r\nimport { Row } from 'react-bootstrap';\r\nimport ReactFancyBox from './../fancyBox/fancybox/ReactFancyBox';\r\nimport Button from './../CustomButtons/Button';\r\nimport Link from 'next/link';\r\nimport CalendarAvailability from './CalendarAvailability';\r\nimport moment from 'moment';\r\n\r\nexport default function MedecinWidget(props) {\r\n    const [showDisponibilite, setShowDisponibilite] = useState(false);\r\n    const { content, locale } = props;\r\n    const [selectedHour, setSelectedHour] = useState();\r\n    const [selectedDate, setSelectedDate] = useState();\r\n    const { setUserTemporary } = useAppContext();\r\n    const router = useRouter();\r\n\r\n    const setDetails = (day, hour) => {\r\n        setSelectedDate(day);\r\n        setSelectedHour(hour);\r\n    };\r\n\r\n    const validateTime = () => {\r\n        if (props.medecin && props.medecin.id) {\r\n            setUserTemporary({ date: selectedDate, time: selectedHour, medecinId: props.medecin.id });\r\n            return router.push({\r\n                pathname: `/doctor/${props.medecin.id}/appointment`,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <div className=\"doctor-widget\">\r\n                    <div className=\"doc-info-left\">\r\n                        <div className=\"doctor-img\">\r\n                            <a href=\"doctor-profile.html\">\r\n                                <img src={props.medecin && props.medecin.image ? `${Config.BACKEND_URL}/${props.medecin.image}` : \"/image/medecin/homme.jpg\"} className=\"img-fluid img-100\" alt=\"User Image\" />\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"doc-info-cont\">\r\n                            <h3 className=\"doc-name\">\r\n                                <a href=\"doctor-profile.html\" className='doc-name'>Dr. {props.medecin && `${props.medecin.nom} ${props.medecin.prenom}`}</a>\r\n                            </h3>\r\n                            {props.medecin && props.medecin.specialites.map((specialite, index) => (\r\n                                <h4 key={index} className=\"doc-department-md\">\r\n                                    {!specialite.icon ? null : <img src={`${Config.BACKEND_URL}/${specialite.icon}`} className=\"img-fluid\" alt=\"Speciality\" />}\r\n                                    {specialite.name}\r\n                                </h4>\r\n                            ))}\r\n                            {!props.medecin.teleconsultationIsDisponible ? null : <span className='mt-2'><MdVideocam /> {content.availableVideo}</span>}\r\n                            <div className=\"clinic-details\">\r\n                                <p className=\"doc-location\"><i className=\"fas fa-map-marker-alt\"></i>\r\n                                    {!props.medecin.adress ?\r\n                                        content.notSpecified :\r\n                                        `${props.medecin.adress.streetName || \"\"} ${props.medecin.adress.buildingName || \"\"} ${props.medecin.adress.floor ? \"Ã©tage \" + props.medecin.adress.floor : \"\"} ${props.medecin.adress.sector || \"\"}, ${props.medecin.adress.codePostal || \"\"} - ${props.medecin.city ? props.medecin.city.name : \"\"}`\r\n                                    }\r\n                                </p>\r\n                                <Row>\r\n                                    {props.medecin.pictures.map((picture, index) => (\r\n                                        <div className=\"cabinet-img-container ml-2\" key={index}>\r\n                                            <ReactFancyBox\r\n                                                thumbnail={`${Config.BACKEND_URL}/${picture.path}`}\r\n                                                showCloseBtn={false}\r\n                                                image={`${Config.BACKEND_URL}/${picture.path}`} />\r\n                                        </div>\r\n                                    ))}\r\n                                </Row>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={locale === \"ar\" ? \"doc-info-leftr\" : \"doc-info-right\"}>\r\n                        <div className=\"clinic-booking\">\r\n                            <Link href={props.medecin ? `/doctor/${props.medecin.id}` : \"#\"}>\r\n                                <a className=\"view-pro-btn\"> {content.seeProfile} </a>\r\n                            </Link>\r\n                            <Button onClick={() => setShowDisponibilite(true)} color=\"primary\"> {content.seeDispo} </Button>\r\n                        </div>\r\n                        {showDisponibilite && props.showDisponibilite &&\r\n                            <div className=\"availability-content\">\r\n                                <h3>{content.dispo}</h3>\r\n                                <CalendarAvailability {...props} setSelectedHour={setDetails} />\r\n                                <div>\r\n                                    {!selectedHour && !selectedDate ? null : content.timeSelected + moment(selectedDate + selectedHour, 'YYYY/MM/DDHH:mm').calendar()}\r\n                                </div>\r\n                                <div className=\"actions\">\r\n                                    <Button onClick={() => setShowDisponibilite(false)} color=\"transparent\">\r\n                                        {content.cancel}\r\n                                    </Button>\r\n                                    <Button disabled={!selectedHour} onClick={validateTime} color=\"primary\">\r\n                                        {content.confirm}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}