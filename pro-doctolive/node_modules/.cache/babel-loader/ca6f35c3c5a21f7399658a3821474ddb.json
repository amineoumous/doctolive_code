{"ast":null,"code":"var _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\pro-doctolive\\\\src\\\\components\\\\gestion\\\\Calandar.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport moment from 'moment';\n\nfunction HorizontalDayNumberCalendar(_ref) {\n  var _this = this;\n\n  var month = _ref.month,\n      year = _ref.year;\n  var startOfMonth = moment([year, month - 1]);\n  var endOfMonth = startOfMonth.clone().endOf('month');\n  var startOfWeek = startOfMonth.clone().startOf('week');\n  var endOfWeek = endOfMonth.clone().endOf('week');\n  var weeks = [];\n  var currentDay = startOfWeek.clone();\n\n  while (currentDay.isBefore(endOfWeek, 'day')) {\n    weeks.push(Array(7).fill(0).map(function () {\n      var day = currentDay.clone();\n      currentDay.add(1, 'day');\n      return day;\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, weeks.map(function (week, i) {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: i,\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, week.map(function (day, j) {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: j,\n        className: \"text-center\",\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          borderRadius: '5px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, day.isSame(month, 'month') ? day.date() : '');\n    }));\n  }));\n}\n\nexport default function App() {\n  var currentMonth = moment().month() + 1; // Month is 1-indexed\n\n  var currentYear = moment().year();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Calendar for \", moment().format('MMMM YYYY')), /*#__PURE__*/React.createElement(HorizontalDayNumberCalendar, {\n    month: currentMonth,\n    year: currentYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","Row","Col","moment","HorizontalDayNumberCalendar","month","year","startOfMonth","endOfMonth","clone","endOf","startOfWeek","startOf","endOfWeek","weeks","currentDay","isBefore","push","Array","fill","map","day","add","week","i","j","border","padding","borderRadius","isSame","date","App","currentMonth","currentYear","format"],"sources":["C:/app/doctolive_code/pro-doctolive/src/components/gestion/Calandar.js"],"sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nfunction HorizontalDayNumberCalendar({ month, year }) {\r\n  const startOfMonth = moment([year, month - 1]);\r\n  const endOfMonth = startOfMonth.clone().endOf('month');\r\n  const startOfWeek = startOfMonth.clone().startOf('week');\r\n  const endOfWeek = endOfMonth.clone().endOf('week');\r\n\r\n  const weeks = [];\r\n  let currentDay = startOfWeek.clone();\r\n\r\n  while (currentDay.isBefore(endOfWeek, 'day')) {\r\n    weeks.push(\r\n      Array(7)\r\n        .fill(0)\r\n        .map(() => {\r\n          const day = currentDay.clone();\r\n          currentDay.add(1, 'day');\r\n          return day;\r\n        })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {weeks.map((week, i) => (\r\n        <Row key={i} className=\"mb-3\">\r\n          {week.map((day, j) => (\r\n            <Col key={j} className=\"text-center\" style={{ border: '1px solid #ccc', padding: '10px', borderRadius: '5px' }}>\r\n              {day.isSame(month, 'month') ? day.date() : ''}\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const currentMonth = moment().month() + 1; // Month is 1-indexed\r\n  const currentYear = moment().year();\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-center\">Calendar for {moment().format('MMMM YYYY')}</h3>\r\n      <HorizontalDayNumberCalendar month={currentMonth} year={currentYear} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,2BAAT,OAAsD;EAAA;;EAAA,IAAfC,KAAe,QAAfA,KAAe;EAAA,IAARC,IAAQ,QAARA,IAAQ;EACpD,IAAMC,YAAY,GAAGJ,MAAM,CAAC,CAACG,IAAD,EAAOD,KAAK,GAAG,CAAf,CAAD,CAA3B;EACA,IAAMG,UAAU,GAAGD,YAAY,CAACE,KAAb,GAAqBC,KAArB,CAA2B,OAA3B,CAAnB;EACA,IAAMC,WAAW,GAAGJ,YAAY,CAACE,KAAb,GAAqBG,OAArB,CAA6B,MAA7B,CAApB;EACA,IAAMC,SAAS,GAAGL,UAAU,CAACC,KAAX,GAAmBC,KAAnB,CAAyB,MAAzB,CAAlB;EAEA,IAAMI,KAAK,GAAG,EAAd;EACA,IAAIC,UAAU,GAAGJ,WAAW,CAACF,KAAZ,EAAjB;;EAEA,OAAOM,UAAU,CAACC,QAAX,CAAoBH,SAApB,EAA+B,KAA/B,CAAP,EAA8C;IAC5CC,KAAK,CAACG,IAAN,CACEC,KAAK,CAAC,CAAD,CAAL,CACGC,IADH,CACQ,CADR,EAEGC,GAFH,CAEO,YAAM;MACT,IAAMC,GAAG,GAAGN,UAAU,CAACN,KAAX,EAAZ;MACAM,UAAU,CAACO,GAAX,CAAe,CAAf,EAAkB,KAAlB;MACA,OAAOD,GAAP;IACD,CANH,CADF;EASD;;EAED,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGP,KAAK,CAACM,GAAN,CAAU,UAACG,IAAD,EAAOC,CAAP;IAAA,oBACT,oBAAC,GAAD;MAAK,GAAG,EAAEA,CAAV;MAAa,SAAS,EAAC,MAAvB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGD,IAAI,CAACH,GAAL,CAAS,UAACC,GAAD,EAAMI,CAAN;MAAA,oBACR,oBAAC,GAAD;QAAK,GAAG,EAAEA,CAAV;QAAa,SAAS,EAAC,aAAvB;QAAqC,KAAK,EAAE;UAAEC,MAAM,EAAE,gBAAV;UAA4BC,OAAO,EAAE,MAArC;UAA6CC,YAAY,EAAE;QAA3D,CAA5C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACGP,GAAG,CAACQ,MAAJ,CAAWxB,KAAX,EAAkB,OAAlB,IAA6BgB,GAAG,CAACS,IAAJ,EAA7B,GAA0C,EAD7C,CADQ;IAAA,CAAT,CADH,CADS;EAAA,CAAV,CADH,CADF;AAaD;;AAED,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAMC,YAAY,GAAG7B,MAAM,GAAGE,KAAT,KAAmB,CAAxC,CAD4B,CACe;;EAC3C,IAAM4B,WAAW,GAAG9B,MAAM,GAAGG,IAAT,EAApB;EAEA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,aAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBAA0CH,MAAM,GAAG+B,MAAT,CAAgB,WAAhB,CAA1C,CADF,eAEE,oBAAC,2BAAD;IAA6B,KAAK,EAAEF,YAApC;IAAkD,IAAI,EAAEC,WAAxD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADF;AAMD"},"metadata":{},"sourceType":"module"}