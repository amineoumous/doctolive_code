{"ast":null,"code":"import React,{useRef,useEffect}from'react';var Messages=function Messages(_ref){var messages=_ref.messages,storedMessages=_ref.storedMessages;var messagesEndRef=useRef(null);useEffect(function(){if(messagesEndRef!==null){if(messagesEndRef!==null){var timer=setTimeout(function(){if(messagesEndRef.current){messagesEndRef.current.scrollIntoView({behavior:\"smooth\",block:\"nearest\",inline:\"start\"});}},200);return function(){return clearTimeout(timer);};}}},[messages]);return/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"messages\"},storedMessages?storedMessages.map(function(message,i){return/*#__PURE__*/React.createElement(StoredMessage,{key:i,message:message});}):null,messages?messages.map(function(message,i){return/*#__PURE__*/React.createElement(Message,{key:i,message:message});}):null,/*#__PURE__*/React.createElement(\"div\",{ref:messagesEndRef})));};export default Messages;var Message=function Message(_ref2){var _ref2$message=_ref2.message,data=_ref2$message.data,isSentByCurrentUser=_ref2$message.isSentByCurrentUser;return/*#__PURE__*/React.createElement(\"div\",{className:isSentByCurrentUser?\"messageContainer sent\":\"messageContainer replies\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message\"},/*#__PURE__*/React.createElement(\"p\",{className:\"messageText\"},data.message)));};var StoredMessage=function StoredMessage(_ref3){var message=_ref3.message;return/*#__PURE__*/React.createElement(\"div\",{className:message.sentTo===\"patient\"?\"messageContainer sent\":\"messageContainer replies\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message\"},/*#__PURE__*/React.createElement(\"p\",{className:\"messageText\"},message.message)));};","map":{"version":3,"names":["React","useRef","useEffect","Messages","messages","storedMessages","messagesEndRef","timer","setTimeout","current","scrollIntoView","behavior","block","inline","clearTimeout","map","message","i","Message","data","isSentByCurrentUser","StoredMessage","sentTo"],"sources":["C:/app/doctolive_code/pro-doctolive/src/views/Chat/messages/index.jsx"],"sourcesContent":["import React,{useRef, useEffect} from 'react';\r\n\r\n\r\n\r\nconst Messages = ({ messages , storedMessages}) => {\r\n  const messagesEndRef = useRef(null);\r\n  useEffect( ()=> {\r\n\t  if(messagesEndRef !== null){\r\n        if(messagesEndRef !== null){\r\n          let timer = setTimeout(() => {\r\n            if(messagesEndRef.current){\r\n              messagesEndRef.current.scrollIntoView({ behavior: \"smooth\", block:\"nearest\", inline:\"start\" });\r\n            }\r\n      \t\t}, 200);\r\n      \t\treturn () => clearTimeout(timer);\r\n\t  \t  }\r\n\t  }\r\n  }, [messages]);\r\n  return(\r\n    <div  className=\"content\">\r\n     \r\n      <div className=\"messages\">\r\n      { storedMessages ? storedMessages.map((message, i) => <StoredMessage key={i} message={message}/>) : null }\r\n      { messages ? messages.map((message, i) => <Message key={i} message={message}/>) : null }\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  </div>\r\n  ) \r\n};\r\n\r\nexport default Messages;\r\n\r\nconst Message = ({ message: { data, isSentByCurrentUser }}) => {\r\n  \r\n  return(\r\n        <div className={ (isSentByCurrentUser)? \"messageContainer sent\" : \"messageContainer replies\"}>\r\n          <div className=\"message\">\r\n            {/* <p className=\"messageName\">{ isSentByCurrentUser? \"Moi\" : data.sentBy}</p> */}\r\n            <p className=\"messageText\">{data.message}</p>\r\n          </div>\r\n            \r\n        </div>    \r\n  )}\r\n\r\n  const StoredMessage = ({message}) => {\r\n  \r\n    return(\r\n          <div className={ (message.sentTo === \"patient\")? \"messageContainer sent\" : \"messageContainer replies\"}>\r\n            <div className=\"message\">\r\n              {/* <p className=\"messageName\">{ isSentByCurrentUser? \"Moi\" : data.sentBy}</p> */}\r\n              <p className=\"messageText\">{message.message}</p>\r\n            </div>\r\n              \r\n          </div>    \r\n    )}\r\n  \r\n  "],"mappings":"AAAA,MAAOA,MAAP,EAAcC,MAAd,CAAsBC,SAAtB,KAAsC,OAAtC,CAIA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,MAAkC,IAA/BC,SAA+B,MAA/BA,QAA+B,CAApBC,cAAoB,MAApBA,cAAoB,CACjD,GAAMC,eAAc,CAAGL,MAAM,CAAC,IAAD,CAA7B,CACAC,SAAS,CAAE,UAAK,CACf,GAAGI,cAAc,GAAK,IAAtB,CAA2B,CACtB,GAAGA,cAAc,GAAK,IAAtB,CAA2B,CACzB,GAAIC,MAAK,CAAGC,UAAU,CAAC,UAAM,CAC3B,GAAGF,cAAc,CAACG,OAAlB,CAA0B,CACxBH,cAAc,CAACG,OAAf,CAAuBC,cAAvB,CAAsC,CAAEC,QAAQ,CAAE,QAAZ,CAAsBC,KAAK,CAAC,SAA5B,CAAuCC,MAAM,CAAC,OAA9C,CAAtC,EACD,CACJ,CAJuB,CAIrB,GAJqB,CAAtB,CAKF,MAAO,kBAAMC,aAAY,CAACP,KAAD,CAAlB,EAAP,CACD,CACH,CACD,CAXQ,CAWN,CAACH,QAAD,CAXM,CAAT,CAYA,mBACE,2BAAM,SAAS,CAAC,SAAhB,eAEE,2BAAK,SAAS,CAAC,UAAf,EACEC,cAAc,CAAGA,cAAc,CAACU,GAAf,CAAmB,SAACC,OAAD,CAAUC,CAAV,qBAAgB,oBAAC,aAAD,EAAe,GAAG,CAAEA,CAApB,CAAuB,OAAO,CAAED,OAAhC,EAAhB,EAAnB,CAAH,CAAoF,IADpG,CAEEZ,QAAQ,CAAGA,QAAQ,CAACW,GAAT,CAAa,SAACC,OAAD,CAAUC,CAAV,qBAAgB,oBAAC,OAAD,EAAS,GAAG,CAAEA,CAAd,CAAiB,OAAO,CAAED,OAA1B,EAAhB,EAAb,CAAH,CAAwE,IAFlF,cAGA,2BAAK,GAAG,CAAEV,cAAV,EAHA,CAFF,CADF,CAUD,CAxBD,CA0BA,cAAeH,SAAf,CAEA,GAAMe,QAAO,CAAG,QAAVA,QAAU,OAA+C,yBAA5CF,OAA4C,CAAjCG,IAAiC,eAAjCA,IAAiC,CAA3BC,mBAA2B,eAA3BA,mBAA2B,CAE7D,mBACM,2BAAK,SAAS,CAAIA,mBAAD,CAAuB,uBAAvB,CAAiD,0BAAlE,eACE,2BAAK,SAAS,CAAC,SAAf,eAEE,yBAAG,SAAS,CAAC,aAAb,EAA4BD,IAAI,CAACH,OAAjC,CAFF,CADF,CADN,CAQE,CAVJ,CAYE,GAAMK,cAAa,CAAG,QAAhBA,cAAgB,OAAe,IAAbL,QAAa,OAAbA,OAAa,CAEnC,mBACM,2BAAK,SAAS,CAAIA,OAAO,CAACM,MAAR,GAAmB,SAApB,CAAgC,uBAAhC,CAA0D,0BAA3E,eACE,2BAAK,SAAS,CAAC,SAAf,eAEE,yBAAG,SAAS,CAAC,aAAb,EAA4BN,OAAO,CAACA,OAApC,CAFF,CADF,CADN,CAQE,CAVJ"},"metadata":{},"sourceType":"module"}