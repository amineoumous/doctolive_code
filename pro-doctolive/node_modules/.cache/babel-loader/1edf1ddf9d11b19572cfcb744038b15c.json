{"ast":null,"code":"var MomentLangue = {\n  fr: {\n    invalidDate: \"Date non précisée\",\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY à HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: '[le] dddd [prochain à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: '[le] LLL'\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'quelques secondes',\n      m: 'une minute',\n      mm: '%d minutes',\n      h: 'une heure',\n      hh: '%d heures',\n      d: 'un jour',\n      dd: '%d jours',\n      M: 'un mois',\n      MM: '%d mois',\n      y: 'un an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal: function ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM: function isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem: function meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // Used to determine first week of the year.\n\n    }\n  },\n  ar: {\n    invalidDate: \"تاريخ غير محدد\",\n    months: [\"يناير\", \"فبراير\", \"مارس\", \"ابريل\", \"مايو\", \"يونيو\", \"يوليو\", \"أغسطس\", \"سبتمبر\", \"أكتوبر\", \"نوفمبر\", \"ديسمبر\"],\n    monthsShort: [\"يناير\", \"فبراير\", \"مارس\", \"ابريل\", \"مايو\", \"يونيو\", \"يوليو\", \"أغسطس\", \"سبتمبر\", \"أكتوبر\", \"نوفمبر\", \"ديسمبر\"],\n    monthsParseExact: true,\n    weekdays: [\"َالأَحَدِ\", \"الاثْنَيْنِ\", \"الثُّلاَثَاءِ\", \"الأَرْبِعَاءِ\", \"الْخَمِيسِ\", \"الْجُمُعَةِ\", \"السَّبْتِ\"],\n    weekdaysShort: [\"َالأَحَدِ\", \"الاثْنَيْنِ\", \"الثُّلاَثَاءِ\", \"الأَرْبِعَاءِ\", \"الْخَمِيسِ\", \"الْجُمُعَةِ\", \"السَّبْتِ\"],\n    weekdaysMin: [\"َالأَحَدِ\", \"الاثْنَيْنِ\", \"الثُّلاَثَاءِ\", \"الأَرْبِعَاءِ\", \"الْخَمِيسِ\", \"الْجُمُعَةِ\", \"السَّبْتِ\"],\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'dddd D MMMM YYYY على الساعة HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[اليوم على الساعة] LT',\n      nextDay: '[غدا على الساعة] LT',\n      nextWeek: 'dddd [على الساعة] LT',\n      lastDay: '[الامس على الساعة] LT',\n      lastWeek: 'dddd [الماضي على الساعة] LT',\n      sameElse: 'LLL'\n    },\n    relativeTime: {\n      future: 'خلال %s',\n      past: 'قبل %s',\n      s: 'غضون ثواني',\n      m: 'دقيقة',\n      mm: '%d دقائق',\n      h: 'ساعة',\n      hh: '%d ساعات',\n      d: 'يوم',\n      dd: '%d أَيَّام',\n      M: 'أَيَّام',\n      MM: '%d شهور',\n      y: 'سنة',\n      yy: '%d سنوات'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal: function ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM: function isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem: function meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // Used to determine first week of the year.\n\n    }\n  }\n};\nexport default MomentLangue;","map":{"version":3,"names":["MomentLangue","fr","invalidDate","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","number","meridiemParse","isPM","input","charAt","meridiem","hours","minutes","isLower","week","dow","doy","ar"],"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/pro-doctolive/src/MomentLangu.js"],"sourcesContent":["let MomentLangue ={\r\n    fr: {\r\n       invalidDate : \"Date non précisée\",\r\n   months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\r\n   monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\r\n   monthsParseExact : true,\r\n   weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\r\n   weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\r\n   weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\r\n   weekdaysParseExact : true,\r\n   longDateFormat : {\r\n       LT : 'HH:mm',\r\n       LTS : 'HH:mm:ss',\r\n       L : 'DD/MM/YYYY',\r\n       LL : 'D MMMM YYYY',\r\n       LLL : 'D MMMM YYYY à HH:mm',\r\n       LLLL : 'dddd D MMMM YYYY HH:mm'\r\n   },\r\n   calendar : {\r\n       sameDay : '[Aujourd’hui à] LT',\r\n       nextDay : '[Demain à] LT',\r\n       nextWeek : '[le] dddd [prochain à] LT',\r\n       lastDay : '[Hier à] LT',\r\n       lastWeek : 'dddd [dernier à] LT',\r\n       sameElse : '[le] LLL'\r\n   },\r\n   relativeTime : {\r\n       future : 'dans %s',\r\n       past : 'il y a %s',\r\n       s : 'quelques secondes',\r\n       m : 'une minute',\r\n       mm : '%d minutes',\r\n       h : 'une heure',\r\n       hh : '%d heures',\r\n       d : 'un jour',\r\n       dd : '%d jours',\r\n       M : 'un mois',\r\n       MM : '%d mois',\r\n       y : 'un an',\r\n       yy : '%d ans'\r\n   },\r\n   dayOfMonthOrdinalParse : /\\d{1,2}(er|e)/,\r\n   ordinal : function (number) {\r\n       return number + (number === 1 ? 'er' : 'e');\r\n   },\r\n   meridiemParse : /PD|MD/,\r\n   isPM : function (input) {\r\n       return input.charAt(0) === 'M';\r\n   },\r\n   // In case the meridiem units are not separated around 12, then implement\r\n   // this function (look at locale/id.js for an example).\r\n   // meridiemHour : function (hour, meridiem) {\r\n   //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\r\n   // },\r\n   meridiem : function (hours, minutes, isLower) {\r\n       return hours < 12 ? 'PD' : 'MD';\r\n   },\r\n   week : {\r\n       dow : 1, // Monday is the first day of the week.\r\n       doy : 4  // Used to determine first week of the year.\r\n   }\r\n},\r\nar:  {\r\n   invalidDate : \"تاريخ غير محدد\",\r\n   months : [\"يناير\" ,\"فبراير\" ,\"مارس\" ,\"ابريل\" ,\"مايو\", \"يونيو\" ,\"يوليو\", \"أغسطس\" ,\"سبتمبر\", \"أكتوبر\", \"نوفمبر\",\"ديسمبر\"],\r\n   monthsShort : [\"يناير\" ,\"فبراير\" ,\"مارس\" ,\"ابريل\" ,\"مايو\", \"يونيو\" ,\"يوليو\", \"أغسطس\" ,\"سبتمبر\", \"أكتوبر\", \"نوفمبر\",\"ديسمبر\"],\r\n   monthsParseExact : true,\r\n   weekdays :  [\"َالأَحَدِ\",\"الاثْنَيْنِ\",\"الثُّلاَثَاءِ\",\"الأَرْبِعَاءِ\" ,\"الْخَمِيسِ\",\"الْجُمُعَةِ\", \"السَّبْتِ\"],\r\n   weekdaysShort : [\"َالأَحَدِ\",\"الاثْنَيْنِ\",\"الثُّلاَثَاءِ\",\"الأَرْبِعَاءِ\" ,\"الْخَمِيسِ\",\"الْجُمُعَةِ\", \"السَّبْتِ\"],\r\n   weekdaysMin : [\"َالأَحَدِ\",\"الاثْنَيْنِ\",\"الثُّلاَثَاءِ\",\"الأَرْبِعَاءِ\" ,\"الْخَمِيسِ\",\"الْجُمُعَةِ\", \"السَّبْتِ\"],\r\n   weekdaysParseExact : true,\r\n   longDateFormat : {\r\n       LT : 'HH:mm',\r\n       LTS : 'HH:mm:ss',\r\n       L : 'DD/MM/YYYY',\r\n       LL : 'D MMMM YYYY',\r\n       LLL : 'dddd D MMMM YYYY على الساعة HH:mm',\r\n       LLLL : 'dddd D MMMM YYYY HH:mm'\r\n   },\r\n   calendar : {\r\n       sameDay : '[اليوم على الساعة] LT',\r\n       nextDay : '[غدا على الساعة] LT',\r\n       nextWeek : 'dddd [على الساعة] LT',\r\n       lastDay : '[الامس على الساعة] LT',\r\n       lastWeek : 'dddd [الماضي على الساعة] LT',\r\n       sameElse : 'LLL'\r\n   },\r\n   relativeTime : {\r\n       future : 'خلال %s',\r\n       past : 'قبل %s',\r\n       s : 'غضون ثواني',\r\n       m : 'دقيقة',\r\n       mm : '%d دقائق',\r\n       h : 'ساعة',\r\n       hh : '%d ساعات',\r\n       d : 'يوم',\r\n       dd : '%d أَيَّام',\r\n       M : 'أَيَّام',\r\n       MM : '%d شهور',\r\n       y : 'سنة',\r\n       yy : '%d سنوات'\r\n   },\r\n   dayOfMonthOrdinalParse : /\\d{1,2}(er|e)/,\r\n   ordinal : function (number) {\r\n       return number + (number === 1 ? 'er' : 'e');\r\n   },\r\n   meridiemParse : /PD|MD/,\r\n   isPM : function (input) {\r\n       return input.charAt(0) === 'M';\r\n   },\r\n   // In case the meridiem units are not separated around 12, then implement\r\n   // this function (look at locale/id.js for an example).\r\n   // meridiemHour : function (hour, meridiem) {\r\n   //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\r\n   // },\r\n   meridiem : function (hours, minutes, isLower) {\r\n       return hours < 12 ? 'PD' : 'MD';\r\n   },\r\n   week : {\r\n       dow : 1, // Monday is the first day of the week.\r\n       doy : 4  // Used to determine first week of the year.\r\n   }\r\n}}\r\nexport default MomentLangue"],"mappings":"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"},"metadata":{},"sourceType":"module"}