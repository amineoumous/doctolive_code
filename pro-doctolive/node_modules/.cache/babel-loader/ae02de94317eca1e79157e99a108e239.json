{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\pro-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\pro-doctolive\\\\src\\\\components\\\\profilMedecin\\\\editProfil\\\\MapAccess.js\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport markerIcon from 'assets/img/marker.png';\nvar libraries = [\"places\"];\nvar mapContainerStyle = {\n  height: \"50vh\",\n  width: \"50vw\"\n};\nvar options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nexport default function App(props) {\n  var _useLoadScript = useLoadScript({\n    googleMapsApiKey: props.apiKey,\n    libraries: libraries\n  }),\n      isLoaded = _useLoadScript.isLoaded,\n      loadError = _useLoadScript.loadError;\n\n  var _React$useState = React.useState({\n    lat: 33.5795703,\n    lng: -7.5874518\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      marker = _React$useState2[0],\n      setMarker = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selected = _React$useState4[0],\n      setSelected = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      positionNotFound = _React$useState6[0],\n      setPositionNotFound = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    lat: 33.5795703,\n    lng: -7.5874518\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      center = _React$useState8[0],\n      setCenter = _React$useState8[1];\n\n  var onMapClick = React.useCallback(function (e) {\n    //   console.log(e.latLng.lat())\n    props.setLocation({\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng()\n    });\n    setMarker({\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng()\n    });\n  }, []);\n  React.useEffect(function () {\n    setTimeout(function () {\n      if (!props.location.lat && !props.location.lng) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          var crd = pos.coords; // setMarker( {\n          //     lat: crd.latitude,\n          //     lng: crd.longitude,\n          // });\n\n          console.log(\"More or less \".concat(crd.accuracy, \" meters.\"));\n        }, function (err) {\n          setPositionNotFound(true);\n          console.log(\"ERROR(\".concat(err.code, \"): \").concat(err.message));\n        }, {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 0\n        });\n      }\n    }, 2000);\n    return function () {};\n  }, []);\n  React.useEffect(function () {\n    if (props.location) {\n      if (props.location.lat && props.location.lng) {\n        setMarker(props.location);\n        setCenter(props.location);\n      }\n    }\n  }, [props.location]);\n  var mapRef = React.useRef();\n  var onMapLoad = React.useCallback(function (map) {\n    mapRef.current = map;\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \" Naviguer et s\\xE9l\\xE9ctionner la position de votre cabinet \"), positionNotFound ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \" On a pas pus r\\xE9cup\\xE9rer votre localisation il s'emble que vous n'avez pas autoris\\xE9e l'acc\\xE9s \\xE0 votre position \") : null, /*#__PURE__*/React.createElement(GoogleMap, {\n    id: \"map\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    key: \"\".concat(marker.lat, \"-\").concat(marker.lng),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: markerIcon,\n    onClick: function onClick() {\n      setSelected(marker);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })));\n}\nvar mapStyles = [{\n  featureType: \"all\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    weight: \"2.00\"\n  }]\n}, {\n  featureType: \"all\",\n  elementType: \"geometry.stroke\",\n  stylers: [{\n    color: \"#9c9c9c\"\n  }]\n}, {\n  featureType: \"all\",\n  elementType: \"labels.text\",\n  stylers: [{\n    visibility: \"on\"\n  }]\n}, {\n  featureType: \"landscape\",\n  elementType: \"all\",\n  stylers: [{\n    color: \"#f2f2f2\"\n  }]\n}, {\n  featureType: \"landscape\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"landscape.man_made\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"poi\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"all\",\n  stylers: [{\n    saturation: -100\n  }, {\n    lightness: 45\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    color: \"#eeeeee\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#7b7b7b\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"simplified\"\n  }]\n}, {\n  featureType: \"road.arterial\",\n  elementType: \"labels.icon\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"transit\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"all\",\n  stylers: [{\n    color: \"#46bcec\"\n  }, {\n    visibility: \"on\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    color: \"#c8d7d4\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#070707\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}];","map":{"version":3,"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","markerIcon","libraries","mapContainerStyle","height","width","options","styles","mapStyles","disableDefaultUI","zoomControl","App","props","googleMapsApiKey","apiKey","isLoaded","loadError","useState","lat","lng","marker","setMarker","selected","setSelected","positionNotFound","setPositionNotFound","center","setCenter","onMapClick","useCallback","e","setLocation","latLng","useEffect","setTimeout","location","navigator","geolocation","getCurrentPosition","pos","crd","coords","console","log","accuracy","err","code","message","enableHighAccuracy","timeout","maximumAge","mapRef","useRef","onMapLoad","map","current","featureType","elementType","stylers","weight","color","visibility","saturation","lightness"],"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/pro-doctolive/src/components/profilMedecin/editProfil/MapAccess.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\nimport markerIcon from 'assets/img/marker.png'\r\n\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"50vh\",\r\n  width: \"50vw\",\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nexport default function App(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: props.apiKey,\r\n    libraries,\r\n  });\r\n  const [marker, setMarker] = React.useState(\r\n      {\r\n        lat: 33.5795703,\r\n        lng: -7.5874518\r\n      }\r\n  );\r\n  const [selected, setSelected] = React.useState(null);\r\n  const [positionNotFound, setPositionNotFound] = React.useState(false);\r\n\r\n  const [center, setCenter] = React.useState({\r\n    lat: 33.5795703,\r\n  lng: -7.5874518,\r\n  })\r\n\r\n  const onMapClick = React.useCallback((e) => {\r\n    //   console.log(e.latLng.lat())\r\n    props.setLocation( {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n    })\r\n    setMarker( {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n\r\n      if(!props.location.lat && !props.location.lng) {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n          var crd = pos.coords;\r\n          // setMarker( {\r\n          //     lat: crd.latitude,\r\n          //     lng: crd.longitude,\r\n          // });\r\n  \r\n          console.log(`More or less ${crd.accuracy} meters.`);\r\n      }, \r\n      (err) => {\r\n        setPositionNotFound(true)\r\n      console.log(`ERROR(${err.code}): ${err.message}`);\r\n      }, \r\n      {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n      });\r\n      }\r\n      \r\n    }, 2000);\r\n    \r\n      return () => {\r\n          \r\n      }\r\n  }, [])\r\n  React.useEffect(() => {\r\n    if(props.location){\r\n      if(props.location.lat && props.location.lng){\r\n        setMarker(props.location);\r\n        setCenter(props.location);\r\n      }\r\n      \r\n    }\r\n    \r\n  }, [props.location])\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <h3> Naviguer et séléctionner la position de votre cabinet </h3>\r\n      {\r\n        positionNotFound?\r\n        <p> On a pas pus récupérer votre localisation il s'emble que vous n'avez pas autorisée l'accés à votre position </p>\r\n        : null\r\n      }\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={8}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n      >\r\n          <Marker\r\n            key={`${marker.lat}-${marker.lng}`}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            icon={markerIcon}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n         \r\n          />\r\n\r\n        {/* {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n                La position de votre cabinet\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null} */}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStyles = [\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          weight: \"2.00\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#9c9c9c\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"labels.text\",\r\n      stylers: [\r\n        {\r\n          visibility: \"on\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          color: \"#f2f2f2\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape.man_made\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"poi\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          saturation: -100,\r\n        },\r\n        {\r\n          lightness: 45,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#eeeeee\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#7b7b7b\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"simplified\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road.arterial\",\r\n      elementType: \"labels.icon\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"transit\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          color: \"#46bcec\",\r\n        },\r\n        {\r\n          visibility: \"on\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#c8d7d4\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#070707\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n  ];"],"mappings":"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"},"metadata":{},"sourceType":"module"}