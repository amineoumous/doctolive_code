{"ast":null,"code":"import _toConsumableArray from \"C:\\\\app\\\\doctolive_code\\\\pro-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\app\\\\doctolive_code\\\\pro-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\pro-doctolive\\\\src\\\\components\\\\gestion\\\\Calandar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport { Row, Col } from 'react-bootstrap';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nvar localizer = momentLocalizer(moment);\n\nfunction CreateEventWithNoOverlap(props) {\n  var _this = this;\n\n  var _useState = useState(\"month\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      view = _useState2[0],\n      setView = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eventsToShow = _useState4[0],\n      setEventsToShow = _useState4[1];\n\n  useEffect(function () {\n    if (props.events) {\n      setEventsToShow(_toConsumableArray(props.events));\n    }\n  }, [props.events]);\n  var formats = {\n    dateFormat: 'dd',\n    dayHeaderFormat: 'dddd DD MMM'\n  };\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Events\"), eventsToShow.filter(function (event) {\n    return !event.allDay;\n  }).map(function (event) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: event.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, event.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, moment(event.date).format('MMMM Do YYYY, h:mm a')));\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"All Day Events\"), eventsToShow.filter(function (event) {\n    return event.allDay;\n  }).map(function (event) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: event.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, event.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, moment(event.date).format('MMMM Do YYYY')));\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    formats: formats,\n    selectable: true,\n    popup: true,\n    popupOffset: 30,\n    localizer: localizer,\n    min: new Date(moment(\"07:00\", \"HH:mm\")),\n    max: new Date(moment(\"20:00\", \"HH:mm\")),\n    events: eventsToShow,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    onView: setView,\n    views: ['month', 'week', 'day', 'agenda'],\n    defaultView: \"month\",\n    style: {\n      height: \"70vh\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default CreateEventWithNoOverlap;","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","Row","Col","localizer","CreateEventWithNoOverlap","props","view","setView","eventsToShow","setEventsToShow","events","formats","dateFormat","dayHeaderFormat","filter","event","allDay","map","id","title","date","format","Date","height","width"],"sources":["C:/app/doctolive_code/pro-doctolive/src/components/gestion/Calandar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nfunction CreateEventWithNoOverlap(props) {\r\n  const [view, setView] = useState(\"month\");\r\n  const [eventsToShow, setEventsToShow] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.events) {\r\n      setEventsToShow([...props.events]);\r\n    }\r\n  }, [props.events]);\r\n\r\n  const formats = {\r\n    dateFormat: 'dd',\r\n    dayHeaderFormat: 'dddd DD MMM',\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={4}>\r\n        <h4>Events</h4>\r\n        {/* Display events that are not all-day events */}\r\n        {eventsToShow.filter(event => !event.allDay).map(event => (\r\n          <div key={event.id}>\r\n            <h5>{event.title}</h5>\r\n            <p>{moment(event.date).format('MMMM Do YYYY, h:mm a')}</p>\r\n          </div>\r\n        ))}\r\n      </Col>\r\n      <Col md={6}>\r\n        <h4>All Day Events</h4>\r\n        {/* Display all-day events */}\r\n        {eventsToShow.filter(event => event.allDay).map(event => (\r\n          <div key={event.id}>\r\n            <h5>{event.title}</h5>\r\n            <p>{moment(event.date).format('MMMM Do YYYY')}</p>\r\n          </div>\r\n        ))}\r\n      </Col>\r\n      <Col md={12}>\r\n        <Calendar\r\n          formats={formats}\r\n          selectable\r\n          popup\r\n          popupOffset={30}\r\n          localizer={localizer}\r\n          min={new Date(moment(\"07:00\", \"HH:mm\"))}\r\n          max={new Date(moment(\"20:00\", \"HH:mm\"))}\r\n          events={eventsToShow}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          onView={setView}\r\n          views={['month', 'week', 'day', 'agenda']}\r\n          defaultView=\"month\"\r\n          style={{ height: \"70vh\", width: \"100%\" }}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CreateEventWithNoOverlap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}