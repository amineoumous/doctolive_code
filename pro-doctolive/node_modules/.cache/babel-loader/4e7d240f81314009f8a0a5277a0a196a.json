{"ast":null,"code":"import _slicedToArray from \"C:\\\\app\\\\doctolive_code\\\\pro-doctolive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\app\\\\doctolive_code\\\\pro-doctolive\\\\src\\\\components\\\\profilMedecin\\\\editProfil\\\\About.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Collapse, Alert } from 'react-bootstrap';\nimport SubmitButton from 'components/CustomButtons/SubmitButton.js';\nimport TextFieldM from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getSpecialities, StoreSpeciality } from 'services/medecin/MedecinService';\nimport { useAuth } from \"context/Auth\";\nexport default function About(props) {\n  var _this = this;\n\n  var _useAuth = useAuth(),\n      UserData = _useAuth.UserData;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      specialitiesChoiced = _useState2[0],\n      setSpecialitiesChoiced = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Specialities = _useState4[0],\n      setSpecialities = _useState4[1];\n\n  var _useState5 = useState({\n    success: false,\n    sending: false,\n    donneIncorrect: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      etatRequest = _useState6[0],\n      setEtatRequest = _useState6[1];\n\n  useEffect(function () {\n    getSpecialities().then(function (result) {\n      setSpecialities(result.data.specialities);\n    })[\"catch\"](function (err) {});\n    return function () {};\n  }, []);\n  useEffect(function () {\n    if (props.specialites) {\n      setSpecialitiesChoiced(props.specialites);\n      var cloneS = Specialities.filter(function (element) {\n        return props.specialites.findIndex(function (e) {\n          return e.id === element.id;\n        }) < 0;\n      });\n      setSpecialities(cloneS);\n    }\n\n    return function () {};\n  }, [props.specialites]);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setEtatRequest({\n      sending: true,\n      success: false,\n      donneIncorrect: false\n    });\n    var data = {\n      specialities: specialitiesChoiced\n    };\n    StoreSpeciality(data, UserData.token).then(function (res) {\n      setEtatRequest({\n        sending: false,\n        success: true,\n        donneIncorrect: false\n      });\n    })[\"catch\"](function (error) {\n      if (error.response) {\n        if (error.response.data.error) {\n          if (error.response.data.message === \"token invalid or expired\") {// handling disconect\n          }\n        }\n      }\n\n      setEtatRequest({\n        sending: false,\n        success: false,\n        donneIncorrect: true\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"w-100\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"w-100 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    md: \"12\",\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, specialitiesChoiced !== null && specialitiesChoiced !== undefined ? /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    options: Specialities,\n    limitTags: 2,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    onChange: function onChange(event, newValue) {\n      setSpecialitiesChoiced(newValue);\n    },\n    value: specialitiesChoiced,\n    filterSelectedOptions: true,\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextFieldM, Object.assign({}, params, {\n        variant: \"outlined\",\n        label: \"Sp\\xE9cialit\\xE9s\",\n        placeholder: \"Tapez pour filtrer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }) : null)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    \"in\": etatRequest.donneIncorecte,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"les information sont incorrecte\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    \"in\": etatRequest.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, \"Vos sp\\xE9cialit\\xE9 est mis \\xE0 jours avec succ\\xE9es\")))), /*#__PURE__*/React.createElement(Row, {\n    className: \"align-items-center justify-content-around mt-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    sending: etatRequest.sending,\n    successRequest: etatRequest.success,\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \" Enregistrer \")));\n}","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Collapse","Alert","SubmitButton","TextFieldM","Autocomplete","getSpecialities","StoreSpeciality","useAuth","About","props","UserData","specialitiesChoiced","setSpecialitiesChoiced","Specialities","setSpecialities","success","sending","donneIncorrect","etatRequest","setEtatRequest","then","result","data","specialities","err","specialites","cloneS","filter","element","findIndex","e","id","handleSubmit","preventDefault","token","res","error","response","message","undefined","option","name","event","newValue","params","donneIncorecte"],"sources":["C:/app/doctolive_code/pro-doctolive/src/components/profilMedecin/editProfil/About.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nimport {Row, Col, Collapse, Alert} from 'react-bootstrap'\r\n\r\nimport  SubmitButton  from 'components/CustomButtons/SubmitButton.js';\r\n\r\nimport TextFieldM from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nimport {getSpecialities, StoreSpeciality} from 'services/medecin/MedecinService'\r\nimport { useAuth } from \"context/Auth\";\r\n\r\nexport default function About (props)  {\r\n    const {UserData} = useAuth();\r\n\r\n    const [specialitiesChoiced, setSpecialitiesChoiced] = useState([])\r\n    const [Specialities, setSpecialities] = useState([])  \r\n    const [etatRequest, setEtatRequest] = useState({success: false, sending:false, donneIncorrect: false});\r\n    useEffect(() => {\r\n        getSpecialities()\r\n        .then(result => {\r\n           \r\n            setSpecialities(result.data.specialities)\r\n        })\r\n        .catch(err => {\r\n\r\n        })\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(props.specialites){\r\n            setSpecialitiesChoiced(props.specialites);\r\n            let cloneS = Specialities.filter((element) => props.specialites.findIndex(e => e.id === element.id) < 0)\r\n            setSpecialities(cloneS)\r\n        }\r\n       \r\n        return () => {\r\n            \r\n        }\r\n    }, [props.specialites])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setEtatRequest({sending: true,success: false, donneIncorrect: false})\r\n        let data = {specialities: specialitiesChoiced };\r\n\r\n        StoreSpeciality(data, UserData.token)\r\n        .then(res => {\r\n            setEtatRequest({sending: false,success: true, donneIncorrect: false});\r\n        })\r\n        .catch(error =>{ \r\n\r\n            if(error.response){\r\n                if(error.response.data.error){\r\n                    if(error.response.data.message === \"token invalid or expired\"){\r\n                        // handling disconect\r\n                    }\r\n                }\r\n            }\r\n            setEtatRequest({sending: false,success: false, donneIncorrect: true})\r\n        })\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit} className=\"w-100\" autoComplete=\"off\">      \r\n                <Row className=\"w-100 mb-5\">\r\n                    \r\n                    <Col xs=\"12\" md=\"12\" className=\"mt-5\"> \r\n                    {\r\n                        (specialitiesChoiced !== null && specialitiesChoiced !== undefined) ?\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={Specialities}\r\n                                limitTags={2}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={ (event, newValue) => {\r\n                                    setSpecialitiesChoiced(newValue);          \r\n                                }}\r\n                                value={specialitiesChoiced}\r\n                                filterSelectedOptions\r\n                                renderInput={(params) => (\r\n                                <TextFieldM\r\n                                    {...params}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Spécialités\"\r\n                                    placeholder=\"Tapez pour filtrer\"\r\n                                />\r\n                                )}\r\n                            />\r\n                            :null\r\n                    }\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Collapse in={ etatRequest.donneIncorecte}>\r\n                        <div>\r\n                            <Alert  variant=\"danger\">\r\n                                les information sont incorrecte\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                </Row>\r\n                <Row>\r\n                    <Collapse in={etatRequest.success}>\r\n                        <div >\r\n                            <Alert  variant=\"success\">\r\n                                Vos spécialité est mis à jours avec succées\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                </Row>\r\n                <Row className=\"align-items-center justify-content-around mt-4 \">\r\n                    <SubmitButton sending={etatRequest.sending} successRequest={etatRequest.success} type=\"submit\" color=\"primary\"> Enregistrer </SubmitButton>\r\n                </Row>\r\n            </form>\r\n    );\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}