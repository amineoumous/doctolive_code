{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\CARRE\\\\Documents\\\\GitHub\\\\doctolive_code\\\\pro-doctolive\\\\src\\\\views\\\\Chat\\\\messages\\\\index.jsx\";\n\nimport React, { useRef, useEffect } from 'react';\n\nvar Messages = function Messages(_ref) {\n  var messages = _ref.messages,\n      storedMessages = _ref.storedMessages;\n  var messagesEndRef = useRef(null);\n  useEffect(function () {\n    if (messagesEndRef !== null) {\n      if (messagesEndRef !== null) {\n        var timer = setTimeout(function () {\n          if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"nearest\",\n              inline: \"start\"\n            });\n          }\n        }, 200);\n        return function () {\n          return clearTimeout(timer);\n        };\n      }\n    }\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, storedMessages ? storedMessages.map(function (message, i) {\n    return /*#__PURE__*/React.createElement(StoredMessage, {\n      key: i,\n      message: message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 61\n      }\n    });\n  }) : null, messages ? messages.map(function (message, i) {\n    return /*#__PURE__*/React.createElement(Message, {\n      key: i,\n      message: message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 49\n      }\n    });\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Messages;\n\nvar Message = function Message(_ref2) {\n  var _ref2$message = _ref2.message,\n      data = _ref2$message.data,\n      isSentByCurrentUser = _ref2$message.isSentByCurrentUser;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: isSentByCurrentUser ? \"messageContainer sent\" : \"messageContainer replies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"messageText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, data.message)));\n};\n\nvar StoredMessage = function StoredMessage(_ref3) {\n  var message = _ref3.message;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: message.sentTo === \"patient\" ? \"messageContainer sent\" : \"messageContainer replies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"messageText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, message.message)));\n};","map":{"version":3,"names":["React","useRef","useEffect","Messages","messages","storedMessages","messagesEndRef","timer","setTimeout","current","scrollIntoView","behavior","block","inline","clearTimeout","map","message","i","Message","data","isSentByCurrentUser","StoredMessage","sentTo"],"sources":["C:/Users/CARRE/Documents/GitHub/doctolive_code/pro-doctolive/src/views/Chat/messages/index.jsx"],"sourcesContent":["import React,{useRef, useEffect} from 'react';\r\n\r\n\r\n\r\nconst Messages = ({ messages , storedMessages}) => {\r\n  const messagesEndRef = useRef(null);\r\n  useEffect( ()=> {\r\n\t  if(messagesEndRef !== null){\r\n        if(messagesEndRef !== null){\r\n          let timer = setTimeout(() => {\r\n            if(messagesEndRef.current){\r\n              messagesEndRef.current.scrollIntoView({ behavior: \"smooth\", block:\"nearest\", inline:\"start\" });\r\n            }\r\n      \t\t}, 200);\r\n      \t\treturn () => clearTimeout(timer);\r\n\t  \t  }\r\n\t  }\r\n  }, [messages]);\r\n  return(\r\n    <div  className=\"content\">\r\n     \r\n      <div className=\"messages\">\r\n      { storedMessages ? storedMessages.map((message, i) => <StoredMessage key={i} message={message}/>) : null }\r\n      { messages ? messages.map((message, i) => <Message key={i} message={message}/>) : null }\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  </div>\r\n  ) \r\n};\r\n\r\nexport default Messages;\r\n\r\nconst Message = ({ message: { data, isSentByCurrentUser }}) => {\r\n  \r\n  return(\r\n        <div className={ (isSentByCurrentUser)? \"messageContainer sent\" : \"messageContainer replies\"}>\r\n          <div className=\"message\">\r\n            {/* <p className=\"messageName\">{ isSentByCurrentUser? \"Moi\" : data.sentBy}</p> */}\r\n            <p className=\"messageText\">{data.message}</p>\r\n          </div>\r\n            \r\n        </div>    \r\n  )}\r\n\r\n  const StoredMessage = ({message}) => {\r\n  \r\n    return(\r\n          <div className={ (message.sentTo === \"patient\")? \"messageContainer sent\" : \"messageContainer replies\"}>\r\n            <div className=\"message\">\r\n              {/* <p className=\"messageName\">{ isSentByCurrentUser? \"Moi\" : data.sentBy}</p> */}\r\n              <p className=\"messageText\">{message.message}</p>\r\n            </div>\r\n              \r\n          </div>    \r\n    )}\r\n  \r\n  "],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,SAAtB,QAAsC,OAAtC;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkC;EAAA,IAA/BC,QAA+B,QAA/BA,QAA+B;EAAA,IAApBC,cAAoB,QAApBA,cAAoB;EACjD,IAAMC,cAAc,GAAGL,MAAM,CAAC,IAAD,CAA7B;EACAC,SAAS,CAAE,YAAK;IACf,IAAGI,cAAc,KAAK,IAAtB,EAA2B;MACtB,IAAGA,cAAc,KAAK,IAAtB,EAA2B;QACzB,IAAIC,KAAK,GAAGC,UAAU,CAAC,YAAM;UAC3B,IAAGF,cAAc,CAACG,OAAlB,EAA0B;YACxBH,cAAc,CAACG,OAAf,CAAuBC,cAAvB,CAAsC;cAAEC,QAAQ,EAAE,QAAZ;cAAsBC,KAAK,EAAC,SAA5B;cAAuCC,MAAM,EAAC;YAA9C,CAAtC;UACD;QACJ,CAJuB,EAIrB,GAJqB,CAAtB;QAKF,OAAO;UAAA,OAAMC,YAAY,CAACP,KAAD,CAAlB;QAAA,CAAP;MACD;IACH;EACD,CAXQ,EAWN,CAACH,QAAD,CAXM,CAAT;EAYA,oBACE;IAAM,SAAS,EAAC,SAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACEC,cAAc,GAAGA,cAAc,CAACU,GAAf,CAAmB,UAACC,OAAD,EAAUC,CAAV;IAAA,oBAAgB,oBAAC,aAAD;MAAe,GAAG,EAAEA,CAApB;MAAuB,OAAO,EAAED,OAAhC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAhB;EAAA,CAAnB,CAAH,GAAoF,IADpG,EAEEZ,QAAQ,GAAGA,QAAQ,CAACW,GAAT,CAAa,UAACC,OAAD,EAAUC,CAAV;IAAA,oBAAgB,oBAAC,OAAD;MAAS,GAAG,EAAEA,CAAd;MAAiB,OAAO,EAAED,OAA1B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAhB;EAAA,CAAb,CAAH,GAAwE,IAFlF,eAGA;IAAK,GAAG,EAAEV,cAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHA,CAFF,CADF;AAUD,CAxBD;;AA0BA,eAAeH,QAAf;;AAEA,IAAMe,OAAO,GAAG,SAAVA,OAAU,QAA+C;EAAA,0BAA5CF,OAA4C;EAAA,IAAjCG,IAAiC,iBAAjCA,IAAiC;EAAA,IAA3BC,mBAA2B,iBAA3BA,mBAA2B;EAE7D,oBACM;IAAK,SAAS,EAAIA,mBAAD,GAAuB,uBAAvB,GAAiD,0BAAlE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAG,SAAS,EAAC,aAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA4BD,IAAI,CAACH,OAAjC,CAFF,CADF,CADN;AAQE,CAVJ;;AAYE,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,QAAe;EAAA,IAAbL,OAAa,SAAbA,OAAa;EAEnC,oBACM;IAAK,SAAS,EAAIA,OAAO,CAACM,MAAR,KAAmB,SAApB,GAAgC,uBAAhC,GAA0D,0BAA3E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAG,SAAS,EAAC,aAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA4BN,OAAO,CAACA,OAApC,CAFF,CADF,CADN;AAQE,CAVJ"},"metadata":{},"sourceType":"module"}